{
	"id": "b7fedfd41a2c5460bd88aa410159ce37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"NEVS.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// Halo token  \r\ncontract Halo is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  \r\n\r\n  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3);\r\n\r\n  mapping (address => bool) private blackList;\r\n\r\n  constructor() {\r\n    _name = \"Halo node\";\r\n    _symbol = \"Halo\";\r\n    _decimals = 18;\r\n    _totalSupply = 100000000000000 * 10 ** 18;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n  \r\n  function addToBlackList(address account) public onlyOwner {\r\n    blackList[account] = true;\r\n  }\r\n    \r\n  function removeFromBlackList(address account) public onlyOwner {\r\n    blackList[account] = false;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external override view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external override view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    require(blackList[recipient] == false, \"Error: transfer from blacklist address\");\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    require(blackList[recipient] == false, \"Error: transfer from blacklist address\");\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    if(recipient != managerWallet){\r\n      uint256 taxAmount = amount.mul(10).div(100);\r\n      _balances[recipient] = _balances[recipient].add(amount.sub(taxAmount));\r\n      emit Transfer(sender, recipient, amount.sub(taxAmount));\r\n      _balances[managerWallet] = _balances[managerWallet].add(taxAmount);\r\n      emit Transfer(sender, managerWallet, taxAmount);\r\n      return;\r\n    }\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NEVS.sol": {
				"Halo": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managerWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NEVS.sol\":3217:12223  contract Halo is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"NEVS.sol\":3583:3625  0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3 */\n  0x2c40b38ef349aea24aa48ed1a6ed3db3860effa3\n    /* \"NEVS.sol\":3544:3626  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n  0x07\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NEVS.sol\":3683:3924  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"NEVS.sol\":3704:3723  _name = \"Halo node\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x48616c6f206e6f64650000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"NEVS.sol\":3704:3709  _name */\n  0x06\n    /* \"NEVS.sol\":3704:3723  _name = \"Halo node\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"NEVS.sol\":3730:3746  _symbol = \"Halo\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x48616c6f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"NEVS.sol\":3730:3737  _symbol */\n  0x05\n    /* \"NEVS.sol\":3730:3746  _symbol = \"Halo\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"NEVS.sol\":3765:3767  18 */\n  0x12\n    /* \"NEVS.sol\":3753:3762  _decimals */\n  0x04\n  0x00\n    /* \"NEVS.sol\":3753:3767  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NEVS.sol\":3789:3815  100000000000000 * 10 ** 18 */\n  0x04ee2d6d415b85acef8100000000\n    /* \"NEVS.sol\":3774:3786  _totalSupply */\n  0x03\n    /* \"NEVS.sol\":3774:3815  _totalSupply = 100000000000000 * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"NEVS.sol\":3846:3858  _totalSupply */\n  sload(0x03)\n    /* \"NEVS.sol\":3822:3831  _balances */\n  0x01\n    /* \"NEVS.sol\":3822:3843  _balances[msg.sender] */\n  0x00\n    /* \"NEVS.sol\":3832:3842  msg.sender */\n  caller\n    /* \"NEVS.sol\":3822:3843  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"NEVS.sol\":3822:3858  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"NEVS.sol\":3893:3903  msg.sender */\n  caller\n    /* \"NEVS.sol\":3872:3918  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NEVS.sol\":3889:3890  0 */\n  0x00\n    /* \"NEVS.sol\":3872:3918  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"NEVS.sol\":3905:3917  _totalSupply */\n  sload(0x03)\n    /* \"NEVS.sol\":3872:3918  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"NEVS.sol\":3217:12223  contract Halo is Context, IBEP20, Ownable {\r... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"NEVS.sol\":3217:12223  contract Halo is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\ntag_20:\n  pop\n  swap1\n  pop\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:125   */\ntag_30:\n    /* \"#utility.yul\":94:118   */\n  tag_32\n    /* \"#utility.yul\":112:117   */\n  dup2\n    /* \"#utility.yul\":94:118   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":89:92   */\n  dup3\n    /* \"#utility.yul\":82:119   */\n  mstore\n    /* \"#utility.yul\":7:125   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":131:353   */\ntag_14:\n    /* \"#utility.yul\":224:228   */\n  0x00\n    /* \"#utility.yul\":262:264   */\n  0x20\n    /* \"#utility.yul\":251:260   */\n  dup3\n    /* \"#utility.yul\":247:265   */\n  add\n    /* \"#utility.yul\":239:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":275:346   */\n  tag_35\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":332:341   */\n  dup4\n    /* \"#utility.yul\":328:345   */\n  add\n    /* \"#utility.yul\":319:325   */\n  dup5\n    /* \"#utility.yul\":275:346   */\n  tag_30\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":131:353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:436   */\ntag_33:\n    /* \"#utility.yul\":396:403   */\n  0x00\n    /* \"#utility.yul\":425:430   */\n  dup2\n    /* \"#utility.yul\":414:430   */\n  swap1\n  pop\n    /* \"#utility.yul\":359:436   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":442:762   */\ntag_19:\n    /* \"#utility.yul\":486:492   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  0x02\n    /* \"#utility.yul\":517:521   */\n  dup3\n    /* \"#utility.yul\":513:525   */\n  div\n    /* \"#utility.yul\":503:525   */\n  swap1\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x01\n    /* \"#utility.yul\":564:568   */\n  dup3\n    /* \"#utility.yul\":560:572   */\n  and\n    /* \"#utility.yul\":591:609   */\n  dup1\n    /* \"#utility.yul\":581:662   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":647:651   */\n  0x7f\n    /* \"#utility.yul\":639:645   */\n  dup3\n    /* \"#utility.yul\":635:652   */\n  and\n    /* \"#utility.yul\":625:652   */\n  swap2\n  pop\n    /* \"#utility.yul\":581:662   */\ntag_38:\n    /* \"#utility.yul\":709:711   */\n  0x20\n    /* \"#utility.yul\":701:707   */\n  dup3\n    /* \"#utility.yul\":698:712   */\n  lt\n    /* \"#utility.yul\":678:696   */\n  dup2\n    /* \"#utility.yul\":675:713   */\n  eq\n    /* \"#utility.yul\":672:756   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":728:746   */\n  tag_40\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":672:756   */\ntag_39:\n    /* \"#utility.yul\":493:762   */\n  pop\n    /* \"#utility.yul\":442:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_41:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x22\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"NEVS.sol\":3217:12223  contract Halo is Context, IBEP20, Ownable {\r... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NEVS.sol\":3217:12223  contract Halo is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa2179ab0\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x32424aa3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x417c73a7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4a49ac4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NEVS.sol\":4637:4725  function name() external override view returns (string memory) {\r... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":5809:5962  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":4781:4877  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":6407:6795  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":4347:4435  function decimals() external override view returns (uint8) {\r... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":3459:3481  uint8 public _decimals */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":7177:7377  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":3932:4028  function addToBlackList(address account) public onlyOwner {\r... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"NEVS.sol\":8505:8615  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":4038:4140  function removeFromBlackList(address account) public onlyOwner {\r... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"NEVS.sol\":4931:5046  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"NEVS.sol\":4200:4288  function getOwner() external override view returns (address) {\r... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":4492:4584  function symbol() external override view returns (string memory) {\r... */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":8300:8420  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":3544:3626  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n    tag_19:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":7849:8100  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_20:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":5240:5486  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":3486:3507  string public _symbol */\n    tag_22:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":3512:3531  string public _name */\n    tag_23:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NEVS.sol\":5540:5679  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"NEVS.sol\":4637:4725  function name() external override view returns (string memory) {\r... */\n    tag_30:\n        /* \"NEVS.sol\":4685:4698  string memory */\n      0x60\n        /* \"NEVS.sol\":4714:4719  _name */\n      0x06\n        /* \"NEVS.sol\":4707:4719  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NEVS.sol\":4637:4725  function name() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":5809:5962  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_36:\n        /* \"NEVS.sol\":5886:5890  bool */\n      0x00\n        /* \"NEVS.sol\":5899:5938  _approve(_msgSender(), spender, amount) */\n      tag_124\n        /* \"NEVS.sol\":5908:5920  _msgSender() */\n      tag_125\n        /* \"NEVS.sol\":5908:5918  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":5908:5920  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"NEVS.sol\":5922:5929  spender */\n      dup5\n        /* \"NEVS.sol\":5931:5937  amount */\n      dup5\n        /* \"NEVS.sol\":5899:5907  _approve */\n      tag_127\n        /* \"NEVS.sol\":5899:5938  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_124:\n        /* \"NEVS.sol\":5952:5956  true */\n      0x01\n        /* \"NEVS.sol\":5945:5956  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":5809:5962  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":4781:4877  function totalSupply() external override view returns (uint256) {\r... */\n    tag_40:\n        /* \"NEVS.sol\":4836:4843  uint256 */\n      0x00\n        /* \"NEVS.sol\":4859:4871  _totalSupply */\n      sload(0x03)\n        /* \"NEVS.sol\":4852:4871  return _totalSupply */\n      swap1\n      pop\n        /* \"NEVS.sol\":4781:4877  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":6407:6795  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_46:\n        /* \"NEVS.sol\":6507:6511  bool */\n      0x00\n        /* \"NEVS.sol\":6552:6557  false */\n      dup1\n        /* \"NEVS.sol\":6528:6557  blackList[recipient] == false */\n      iszero\n      iszero\n        /* \"NEVS.sol\":6528:6537  blackList */\n      0x08\n        /* \"NEVS.sol\":6528:6548  blackList[recipient] */\n      0x00\n        /* \"NEVS.sol\":6538:6547  recipient */\n      dup6\n        /* \"NEVS.sol\":6528:6548  blackList[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NEVS.sol\":6528:6557  blackList[recipient] == false */\n      iszero\n      iszero\n      eq\n        /* \"NEVS.sol\":6520:6600  require(blackList[recipient] == false, \"Error: transfer from blacklist address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"NEVS.sol\":6607:6643  _transfer(sender, recipient, amount) */\n      tag_133\n        /* \"NEVS.sol\":6617:6623  sender */\n      dup5\n        /* \"NEVS.sol\":6625:6634  recipient */\n      dup5\n        /* \"NEVS.sol\":6636:6642  amount */\n      dup5\n        /* \"NEVS.sol\":6607:6616  _transfer */\n      tag_134\n        /* \"NEVS.sol\":6607:6643  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"NEVS.sol\":6650:6771  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_135\n        /* \"NEVS.sol\":6659:6665  sender */\n      dup5\n        /* \"NEVS.sol\":6667:6679  _msgSender() */\n      tag_136\n        /* \"NEVS.sol\":6667:6677  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":6667:6679  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"NEVS.sol\":6681:6770  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_137\n        /* \"NEVS.sol\":6719:6725  amount */\n      dup6\n        /* \"NEVS.sol\":6681:6770  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"NEVS.sol\":6681:6692  _allowances */\n      0x02\n        /* \"NEVS.sol\":6681:6700  _allowances[sender] */\n      0x00\n        /* \"NEVS.sol\":6693:6699  sender */\n      dup12\n        /* \"NEVS.sol\":6681:6700  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":6681:6714  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"NEVS.sol\":6701:6713  _msgSender() */\n      tag_138\n        /* \"NEVS.sol\":6701:6711  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":6701:6713  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"NEVS.sol\":6681:6714  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":6681:6718  _allowances[sender][_msgSender()].sub */\n      tag_139\n      swap1\n        /* \"NEVS.sol\":6681:6770  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"NEVS.sol\":6650:6658  _approve */\n      tag_127\n        /* \"NEVS.sol\":6650:6771  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_135:\n        /* \"NEVS.sol\":6785:6789  true */\n      0x01\n        /* \"NEVS.sol\":6778:6789  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":6407:6795  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":4347:4435  function decimals() external override view returns (uint8) {\r... */\n    tag_49:\n        /* \"NEVS.sol\":4399:4404  uint8 */\n      0x00\n        /* \"NEVS.sol\":4420:4429  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NEVS.sol\":4413:4429  return _decimals */\n      swap1\n      pop\n        /* \"NEVS.sol\":4347:4435  function decimals() external override view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":3459:3481  uint8 public _decimals */\n    tag_53:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"NEVS.sol\":7177:7377  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_57:\n        /* \"NEVS.sol\":7257:7261  bool */\n      0x00\n        /* \"NEVS.sol\":7270:7353  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_142\n        /* \"NEVS.sol\":7279:7291  _msgSender() */\n      tag_143\n        /* \"NEVS.sol\":7279:7289  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":7279:7291  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"NEVS.sol\":7293:7300  spender */\n      dup5\n        /* \"NEVS.sol\":7302:7352  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_144\n        /* \"NEVS.sol\":7341:7351  addedValue */\n      dup6\n        /* \"NEVS.sol\":7302:7313  _allowances */\n      0x02\n        /* \"NEVS.sol\":7302:7327  _allowances[_msgSender()] */\n      0x00\n        /* \"NEVS.sol\":7314:7326  _msgSender() */\n      tag_145\n        /* \"NEVS.sol\":7314:7324  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":7314:7326  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"NEVS.sol\":7302:7327  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":7302:7336  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"NEVS.sol\":7328:7335  spender */\n      dup10\n        /* \"NEVS.sol\":7302:7336  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":7302:7340  _allowances[_msgSender()][spender].add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":7302:7352  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"NEVS.sol\":7270:7278  _approve */\n      tag_127\n        /* \"NEVS.sol\":7270:7353  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_142:\n        /* \"NEVS.sol\":7367:7371  true */\n      0x01\n        /* \"NEVS.sol\":7360:7371  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":7177:7377  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":3932:4028  function addToBlackList(address account) public onlyOwner {\r... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"NEVS.sol\":4018:4022  true */\n      0x01\n        /* \"NEVS.sol\":3997:4006  blackList */\n      0x08\n        /* \"NEVS.sol\":3997:4015  blackList[account] */\n      0x00\n        /* \"NEVS.sol\":4007:4014  account */\n      dup4\n        /* \"NEVS.sol\":3997:4015  blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NEVS.sol\":3997:4022  blackList[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":3932:4028  function addToBlackList(address account) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":8505:8615  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_66:\n        /* \"NEVS.sol\":8551:8555  bool */\n      0x00\n        /* \"NEVS.sol\":8564:8591  _burn(_msgSender(), amount) */\n      tag_155\n        /* \"NEVS.sol\":8570:8582  _msgSender() */\n      tag_156\n        /* \"NEVS.sol\":8570:8580  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":8570:8582  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"NEVS.sol\":8584:8590  amount */\n      dup4\n        /* \"NEVS.sol\":8564:8569  _burn */\n      tag_157\n        /* \"NEVS.sol\":8564:8591  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_155:\n        /* \"NEVS.sol\":8605:8609  true */\n      0x01\n        /* \"NEVS.sol\":8598:8609  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":8505:8615  function burn(uint256 amount) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":4038:4140  function removeFromBlackList(address account) public onlyOwner {\r... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_152\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"NEVS.sol\":4129:4134  false */\n      0x00\n        /* \"NEVS.sol\":4108:4117  blackList */\n      0x08\n        /* \"NEVS.sol\":4108:4126  blackList[account] */\n      0x00\n        /* \"NEVS.sol\":4118:4125  account */\n      dup4\n        /* \"NEVS.sol\":4108:4126  blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NEVS.sol\":4108:4134  blackList[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":4038:4140  function removeFromBlackList(address account) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":4931:5046  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_73:\n        /* \"NEVS.sol\":4999:5006  uint256 */\n      0x00\n        /* \"NEVS.sol\":5022:5031  _balances */\n      0x01\n        /* \"NEVS.sol\":5022:5040  _balances[account] */\n      0x00\n        /* \"NEVS.sol\":5032:5039  account */\n      dup4\n        /* \"NEVS.sol\":5022:5040  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":5015:5040  return _balances[account] */\n      swap1\n      pop\n        /* \"NEVS.sol\":4931:5046  function balanceOf(address account) external override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_152\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"NEVS.sol\":4200:4288  function getOwner() external override view returns (address) {\r... */\n    tag_78:\n        /* \"NEVS.sol\":4252:4259  address */\n      0x00\n        /* \"NEVS.sol\":4275:4282  owner() */\n      tag_174\n        /* \"NEVS.sol\":4275:4280  owner */\n      tag_82\n        /* \"NEVS.sol\":4275:4282  owner() */\n      jump\t// in\n    tag_174:\n        /* \"NEVS.sol\":4268:4282  return owner() */\n      swap1\n      pop\n        /* \"NEVS.sol\":4200:4288  function getOwner() external override view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":4492:4584  function symbol() external override view returns (string memory) {\r... */\n    tag_85:\n        /* \"NEVS.sol\":4542:4555  string memory */\n      0x60\n        /* \"NEVS.sol\":4571:4578  _symbol */\n      0x05\n        /* \"NEVS.sol\":4564:4578  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_118\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_118\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NEVS.sol\":4492:4584  function symbol() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":8300:8420  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_89:\n        /* \"NEVS.sol\":8356:8360  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_152\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"NEVS.sol\":8369:8396  _mint(_msgSender(), amount) */\n      tag_188\n        /* \"NEVS.sol\":8375:8387  _msgSender() */\n      tag_189\n        /* \"NEVS.sol\":8375:8385  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":8375:8387  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"NEVS.sol\":8389:8395  amount */\n      dup4\n        /* \"NEVS.sol\":8369:8374  _mint */\n      tag_190\n        /* \"NEVS.sol\":8369:8396  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_188:\n        /* \"NEVS.sol\":8410:8414  true */\n      0x01\n        /* \"NEVS.sol\":8403:8414  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":8300:8420  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":3544:3626  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n    tag_92:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NEVS.sol\":7849:8100  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_96:\n        /* \"NEVS.sol\":7934:7938  bool */\n      0x00\n        /* \"NEVS.sol\":7947:8076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_192\n        /* \"NEVS.sol\":7956:7968  _msgSender() */\n      tag_193\n        /* \"NEVS.sol\":7956:7966  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":7956:7968  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"NEVS.sol\":7970:7977  spender */\n      dup5\n        /* \"NEVS.sol\":7979:8075  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_194\n        /* \"NEVS.sol\":8018:8033  subtractedValue */\n      dup6\n        /* \"NEVS.sol\":7979:8075  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"NEVS.sol\":7979:7990  _allowances */\n      0x02\n        /* \"NEVS.sol\":7979:8004  _allowances[_msgSender()] */\n      0x00\n        /* \"NEVS.sol\":7991:8003  _msgSender() */\n      tag_195\n        /* \"NEVS.sol\":7991:8001  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":7991:8003  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"NEVS.sol\":7979:8004  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":7979:8013  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"NEVS.sol\":8005:8012  spender */\n      dup11\n        /* \"NEVS.sol\":7979:8013  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":7979:8017  _allowances[_msgSender()][spender].sub */\n      tag_139\n      swap1\n        /* \"NEVS.sol\":7979:8075  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"NEVS.sol\":7947:7955  _approve */\n      tag_127\n        /* \"NEVS.sol\":7947:8076  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_192:\n        /* \"NEVS.sol\":8090:8094  true */\n      0x01\n        /* \"NEVS.sol\":8083:8094  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":7849:8100  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":5240:5486  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_100:\n        /* \"NEVS.sol\":5320:5324  bool */\n      0x00\n        /* \"NEVS.sol\":5365:5370  false */\n      dup1\n        /* \"NEVS.sol\":5341:5370  blackList[recipient] == false */\n      iszero\n      iszero\n        /* \"NEVS.sol\":5341:5350  blackList */\n      0x08\n        /* \"NEVS.sol\":5341:5361  blackList[recipient] */\n      0x00\n        /* \"NEVS.sol\":5351:5360  recipient */\n      dup6\n        /* \"NEVS.sol\":5341:5361  blackList[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NEVS.sol\":5341:5370  blackList[recipient] == false */\n      iszero\n      iszero\n      eq\n        /* \"NEVS.sol\":5333:5413  require(blackList[recipient] == false, \"Error: transfer from blacklist address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_132\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"NEVS.sol\":5420:5462  _transfer(_msgSender(), recipient, amount) */\n      tag_199\n        /* \"NEVS.sol\":5430:5442  _msgSender() */\n      tag_200\n        /* \"NEVS.sol\":5430:5440  _msgSender */\n      tag_126\n        /* \"NEVS.sol\":5430:5442  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"NEVS.sol\":5444:5453  recipient */\n      dup5\n        /* \"NEVS.sol\":5455:5461  amount */\n      dup5\n        /* \"NEVS.sol\":5420:5429  _transfer */\n      tag_134\n        /* \"NEVS.sol\":5420:5462  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_199:\n        /* \"NEVS.sol\":5476:5480  true */\n      0x01\n        /* \"NEVS.sol\":5469:5480  return true */\n      swap1\n      pop\n        /* \"NEVS.sol\":5240:5486  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":3486:3507  string public _symbol */\n    tag_103:\n      0x05\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_118\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_118\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"NEVS.sol\":3512:3531  string public _name */\n    tag_106:\n      0x06\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_118\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_207\n      swap1\n      tag_118\n      jump\t// in\n    tag_207:\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_209\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_208)\n    tag_209:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_210:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_210\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"NEVS.sol\":5540:5679  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_111:\n        /* \"NEVS.sol\":5623:5630  uint256 */\n      0x00\n        /* \"NEVS.sol\":5646:5657  _allowances */\n      0x02\n        /* \"NEVS.sol\":5646:5664  _allowances[owner] */\n      0x00\n        /* \"NEVS.sol\":5658:5663  owner */\n      dup5\n        /* \"NEVS.sol\":5646:5664  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":5646:5673  _allowances[owner][spender] */\n      0x00\n        /* \"NEVS.sol\":5665:5672  spender */\n      dup4\n        /* \"NEVS.sol\":5646:5673  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":5639:5673  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"NEVS.sol\":5540:5679  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_152\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NEVS.sol\":11506:11826  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_127:\n        /* \"NEVS.sol\":11613:11614  0 */\n      0x00\n        /* \"NEVS.sol\":11596:11615  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":11596:11601  owner */\n      dup4\n        /* \"NEVS.sol\":11596:11615  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":11588:11656  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"NEVS.sol\":11690:11691  0 */\n      0x00\n        /* \"NEVS.sol\":11671:11692  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":11671:11678  spender */\n      dup3\n        /* \"NEVS.sol\":11671:11692  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":11663:11731  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"NEVS.sol\":11770:11776  amount */\n      dup1\n        /* \"NEVS.sol\":11740:11751  _allowances */\n      0x02\n        /* \"NEVS.sol\":11740:11758  _allowances[owner] */\n      0x00\n        /* \"NEVS.sol\":11752:11757  owner */\n      dup6\n        /* \"NEVS.sol\":11740:11758  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":11740:11767  _allowances[owner][spender] */\n      0x00\n        /* \"NEVS.sol\":11759:11766  spender */\n      dup5\n        /* \"NEVS.sol\":11740:11767  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":11740:11776  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":11804:11811  spender */\n      dup2\n        /* \"NEVS.sol\":11788:11820  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":11797:11802  owner */\n      dup4\n        /* \"NEVS.sol\":11788:11820  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"NEVS.sol\":11813:11819  amount */\n      dup4\n        /* \"NEVS.sol\":11788:11820  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":11506:11826  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":9075:9907  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_134:\n        /* \"NEVS.sol\":9187:9188  0 */\n      0x00\n        /* \"NEVS.sol\":9169:9189  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9169:9175  sender */\n      dup4\n        /* \"NEVS.sol\":9169:9189  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":9161:9231  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"NEVS.sol\":9267:9268  0 */\n      0x00\n        /* \"NEVS.sol\":9246:9269  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9246:9255  recipient */\n      dup3\n        /* \"NEVS.sol\":9246:9269  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":9238:9309  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"NEVS.sol\":9336:9407  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_238\n        /* \"NEVS.sol\":9358:9364  amount */\n      dup2\n        /* \"NEVS.sol\":9336:9407  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"NEVS.sol\":9336:9345  _balances */\n      0x01\n        /* \"NEVS.sol\":9336:9353  _balances[sender] */\n      0x00\n        /* \"NEVS.sol\":9346:9352  sender */\n      dup8\n        /* \"NEVS.sol\":9336:9353  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":9336:9357  _balances[sender].sub */\n      tag_139\n      swap1\n        /* \"NEVS.sol\":9336:9407  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"NEVS.sol\":9316:9325  _balances */\n      0x01\n        /* \"NEVS.sol\":9316:9333  _balances[sender] */\n      0x00\n        /* \"NEVS.sol\":9326:9332  sender */\n      dup6\n        /* \"NEVS.sol\":9316:9333  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":9316:9407  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":9430:9443  managerWallet */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9417:9443  recipient != managerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9417:9426  recipient */\n      dup3\n        /* \"NEVS.sol\":9417:9443  recipient != managerWallet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NEVS.sol\":9414:9793  if(recipient != managerWallet){\r... */\n      tag_239\n      jumpi\n        /* \"NEVS.sol\":9453:9470  uint256 taxAmount */\n      0x00\n        /* \"NEVS.sol\":9473:9496  amount.mul(10).div(100) */\n      tag_240\n        /* \"NEVS.sol\":9492:9495  100 */\n      0x64\n        /* \"NEVS.sol\":9473:9487  amount.mul(10) */\n      tag_241\n        /* \"NEVS.sol\":9484:9486  10 */\n      0x0a\n        /* \"NEVS.sol\":9473:9479  amount */\n      dup6\n        /* \"NEVS.sol\":9473:9483  amount.mul */\n      tag_242\n      swap1\n        /* \"NEVS.sol\":9473:9487  amount.mul(10) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"NEVS.sol\":9473:9491  amount.mul(10).div */\n      tag_243\n      swap1\n        /* \"NEVS.sol\":9473:9496  amount.mul(10).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"NEVS.sol\":9453:9496  uint256 taxAmount = amount.mul(10).div(100) */\n      swap1\n      pop\n        /* \"NEVS.sol\":9528:9575  _balances[recipient].add(amount.sub(taxAmount)) */\n      tag_244\n        /* \"NEVS.sol\":9553:9574  amount.sub(taxAmount) */\n      tag_245\n        /* \"NEVS.sol\":9564:9573  taxAmount */\n      dup3\n        /* \"NEVS.sol\":9553:9559  amount */\n      dup5\n        /* \"NEVS.sol\":9553:9563  amount.sub */\n      tag_246\n      swap1\n        /* \"NEVS.sol\":9553:9574  amount.sub(taxAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"NEVS.sol\":9528:9537  _balances */\n      0x01\n        /* \"NEVS.sol\":9528:9548  _balances[recipient] */\n      0x00\n        /* \"NEVS.sol\":9538:9547  recipient */\n      dup7\n        /* \"NEVS.sol\":9528:9548  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":9528:9552  _balances[recipient].add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":9528:9575  _balances[recipient].add(amount.sub(taxAmount)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"NEVS.sol\":9505:9514  _balances */\n      0x01\n        /* \"NEVS.sol\":9505:9525  _balances[recipient] */\n      0x00\n        /* \"NEVS.sol\":9515:9524  recipient */\n      dup6\n        /* \"NEVS.sol\":9505:9525  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":9505:9575  _balances[recipient] = _balances[recipient].add(amount.sub(taxAmount)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":9606:9615  recipient */\n      dup3\n        /* \"NEVS.sol\":9589:9639  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9598:9604  sender */\n      dup5\n        /* \"NEVS.sol\":9589:9639  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NEVS.sol\":9617:9638  amount.sub(taxAmount) */\n      tag_247\n        /* \"NEVS.sol\":9628:9637  taxAmount */\n      dup5\n        /* \"NEVS.sol\":9617:9623  amount */\n      dup7\n        /* \"NEVS.sol\":9617:9627  amount.sub */\n      tag_246\n      swap1\n        /* \"NEVS.sol\":9617:9638  amount.sub(taxAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"NEVS.sol\":9589:9639  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":9675:9714  _balances[managerWallet].add(taxAmount) */\n      tag_249\n        /* \"NEVS.sol\":9704:9713  taxAmount */\n      dup2\n        /* \"NEVS.sol\":9675:9684  _balances */\n      0x01\n        /* \"NEVS.sol\":9675:9699  _balances[managerWallet] */\n      0x00\n        /* \"NEVS.sol\":9685:9698  managerWallet */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9675:9699  _balances[managerWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":9675:9703  _balances[managerWallet].add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":9675:9714  _balances[managerWallet].add(taxAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"NEVS.sol\":9648:9657  _balances */\n      0x01\n        /* \"NEVS.sol\":9648:9672  _balances[managerWallet] */\n      0x00\n        /* \"NEVS.sol\":9658:9671  managerWallet */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9648:9672  _balances[managerWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":9648:9714  _balances[managerWallet] = _balances[managerWallet].add(taxAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":9745:9758  managerWallet */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9728:9770  Transfer(sender, managerWallet, taxAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9737:9743  sender */\n      dup5\n        /* \"NEVS.sol\":9728:9770  Transfer(sender, managerWallet, taxAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NEVS.sol\":9760:9769  taxAmount */\n      dup4\n        /* \"NEVS.sol\":9728:9770  Transfer(sender, managerWallet, taxAmount) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":9779:9786  return; */\n      pop\n      jump(tag_231)\n        /* \"NEVS.sol\":9414:9793  if(recipient != managerWallet){\r... */\n    tag_239:\n        /* \"NEVS.sol\":9822:9854  _balances[recipient].add(amount) */\n      tag_251\n        /* \"NEVS.sol\":9847:9853  amount */\n      dup2\n        /* \"NEVS.sol\":9822:9831  _balances */\n      0x01\n        /* \"NEVS.sol\":9822:9842  _balances[recipient] */\n      0x00\n        /* \"NEVS.sol\":9832:9841  recipient */\n      dup6\n        /* \"NEVS.sol\":9822:9842  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":9822:9846  _balances[recipient].add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":9822:9854  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"NEVS.sol\":9799:9808  _balances */\n      0x01\n        /* \"NEVS.sol\":9799:9819  _balances[recipient] */\n      0x00\n        /* \"NEVS.sol\":9809:9818  recipient */\n      dup5\n        /* \"NEVS.sol\":9799:9819  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":9799:9854  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":9883:9892  recipient */\n      dup2\n        /* \"NEVS.sol\":9866:9901  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":9875:9881  sender */\n      dup4\n        /* \"NEVS.sol\":9866:9901  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NEVS.sol\":9894:9900  amount */\n      dup4\n        /* \"NEVS.sol\":9866:9901  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_252\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":9075:9907  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_231:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5061:5068  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5117:5118  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5113  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5118  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5120:5132  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5133  require(b <= a, errorMessage) */\n      swap1\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5158:5159  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5155  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5159  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5147:5159  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":10764:11094  function _burn(address account, uint256 amount) internal {\r... */\n    tag_157:\n        /* \"NEVS.sol\":10855:10856  0 */\n      0x00\n        /* \"NEVS.sol\":10836:10857  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":10836:10843  account */\n      dup3\n        /* \"NEVS.sol\":10836:10857  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":10828:10895  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"NEVS.sol\":10925:10993  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_263\n        /* \"NEVS.sol\":10948:10954  amount */\n      dup2\n        /* \"NEVS.sol\":10925:10993  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"NEVS.sol\":10925:10934  _balances */\n      0x01\n        /* \"NEVS.sol\":10925:10943  _balances[account] */\n      0x00\n        /* \"NEVS.sol\":10935:10942  account */\n      dup7\n        /* \"NEVS.sol\":10925:10943  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":10925:10947  _balances[account].sub */\n      tag_139\n      swap1\n        /* \"NEVS.sol\":10925:10993  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"NEVS.sol\":10904:10913  _balances */\n      0x01\n        /* \"NEVS.sol\":10904:10922  _balances[account] */\n      0x00\n        /* \"NEVS.sol\":10914:10921  account */\n      dup5\n        /* \"NEVS.sol\":10904:10922  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":10904:10993  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":11015:11039  _totalSupply.sub(amount) */\n      tag_264\n        /* \"NEVS.sol\":11032:11038  amount */\n      dup2\n        /* \"NEVS.sol\":11015:11027  _totalSupply */\n      sload(0x03)\n        /* \"NEVS.sol\":11015:11031  _totalSupply.sub */\n      tag_246\n      swap1\n        /* \"NEVS.sol\":11015:11039  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"NEVS.sol\":11000:11012  _totalSupply */\n      0x03\n        /* \"NEVS.sol\":11000:11039  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":11077:11078  0 */\n      0x00\n        /* \"NEVS.sol\":11051:11088  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":11060:11067  account */\n      dup3\n        /* \"NEVS.sol\":11051:11088  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NEVS.sol\":11081:11087  amount */\n      dup4\n        /* \"NEVS.sol\":11051:11088  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":10764:11094  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"NEVS.sol\":10166:10456  function _mint(address account, uint256 amount) internal {\r... */\n    tag_190:\n        /* \"NEVS.sol\":10257:10258  0 */\n      0x00\n        /* \"NEVS.sol\":10238:10259  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":10238:10245  account */\n      dup3\n        /* \"NEVS.sol\":10238:10259  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NEVS.sol\":10230:10295  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"NEVS.sol\":10319:10343  _totalSupply.add(amount) */\n      tag_271\n        /* \"NEVS.sol\":10336:10342  amount */\n      dup2\n        /* \"NEVS.sol\":10319:10331  _totalSupply */\n      sload(0x03)\n        /* \"NEVS.sol\":10319:10335  _totalSupply.add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":10319:10343  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"NEVS.sol\":10304:10316  _totalSupply */\n      0x03\n        /* \"NEVS.sol\":10304:10343  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":10371:10401  _balances[account].add(amount) */\n      tag_272\n        /* \"NEVS.sol\":10394:10400  amount */\n      dup2\n        /* \"NEVS.sol\":10371:10380  _balances */\n      0x01\n        /* \"NEVS.sol\":10371:10389  _balances[account] */\n      0x00\n        /* \"NEVS.sol\":10381:10388  account */\n      dup6\n        /* \"NEVS.sol\":10371:10389  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NEVS.sol\":10371:10393  _balances[account].add */\n      tag_146\n      swap1\n        /* \"NEVS.sol\":10371:10401  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"NEVS.sol\":10350:10359  _balances */\n      0x01\n        /* \"NEVS.sol\":10350:10368  _balances[account] */\n      0x00\n        /* \"NEVS.sol\":10360:10367  account */\n      dup5\n        /* \"NEVS.sol\":10350:10368  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NEVS.sol\":10350:10401  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NEVS.sol\":10434:10441  account */\n      dup2\n        /* \"NEVS.sol\":10413:10450  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NEVS.sol\":10430:10431  0 */\n      0x00\n        /* \"NEVS.sol\":10413:10450  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"NEVS.sol\":10443:10449  amount */\n      dup4\n        /* \"NEVS.sol\":10413:10450  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NEVS.sol\":10166:10456  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_284:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_286\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_288:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_290\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_61:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":373:492   */\n    tag_293:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_296\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_284\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_110:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_299\n      tag_295\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":725:844   */\n    tag_298:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_300\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_284\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_301\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_284\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_45:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_304\n      tag_295\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1222:1341   */\n    tag_303:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_305\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_284\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_306\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_284\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_307\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_288\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_35:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_310\n      tag_295\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1830:1949   */\n    tag_309:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_311\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_284\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_312\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_288\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2546   */\n    tag_65:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2313:2322   */\n      dup3\n        /* \"#utility.yul\":2304:2311   */\n      dup5\n        /* \"#utility.yul\":2300:2323   */\n      sub\n        /* \"#utility.yul\":2296:2328   */\n      slt\n        /* \"#utility.yul\":2293:2412   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2331:2410   */\n      tag_315\n      tag_295\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2293:2412   */\n    tag_314:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2476:2529   */\n      tag_316\n        /* \"#utility.yul\":2521:2528   */\n      dup5\n        /* \"#utility.yul\":2512:2518   */\n      dup3\n        /* \"#utility.yul\":2501:2510   */\n      dup6\n        /* \"#utility.yul\":2497:2519   */\n      add\n        /* \"#utility.yul\":2476:2529   */\n      tag_288\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2466:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2422:2539   */\n      pop\n        /* \"#utility.yul\":2217:2546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2670   */\n    tag_317:\n        /* \"#utility.yul\":2639:2663   */\n      tag_319\n        /* \"#utility.yul\":2657:2662   */\n      dup2\n        /* \"#utility.yul\":2639:2663   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2634:2637   */\n      dup3\n        /* \"#utility.yul\":2627:2664   */\n      mstore\n        /* \"#utility.yul\":2552:2670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:2785   */\n    tag_321:\n        /* \"#utility.yul\":2757:2778   */\n      tag_323\n        /* \"#utility.yul\":2772:2777   */\n      dup2\n        /* \"#utility.yul\":2757:2778   */\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2752:2755   */\n      dup3\n        /* \"#utility.yul\":2745:2779   */\n      mstore\n        /* \"#utility.yul\":2676:2785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3155   */\n    tag_325:\n        /* \"#utility.yul\":2879:2882   */\n      0x00\n        /* \"#utility.yul\":2907:2946   */\n      tag_327\n        /* \"#utility.yul\":2940:2945   */\n      dup3\n        /* \"#utility.yul\":2907:2946   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2962:3033   */\n      tag_329\n        /* \"#utility.yul\":3026:3032   */\n      dup2\n        /* \"#utility.yul\":3021:3024   */\n      dup6\n        /* \"#utility.yul\":2962:3033   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2955:3033   */\n      swap4\n      pop\n        /* \"#utility.yul\":3042:3094   */\n      tag_331\n        /* \"#utility.yul\":3087:3093   */\n      dup2\n        /* \"#utility.yul\":3082:3085   */\n      dup6\n        /* \"#utility.yul\":3075:3079   */\n      0x20\n        /* \"#utility.yul\":3068:3073   */\n      dup7\n        /* \"#utility.yul\":3064:3080   */\n      add\n        /* \"#utility.yul\":3042:3094   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3119:3148   */\n      tag_333\n        /* \"#utility.yul\":3141:3147   */\n      dup2\n        /* \"#utility.yul\":3119:3148   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3114:3117   */\n      dup5\n        /* \"#utility.yul\":3110:3149   */\n      add\n        /* \"#utility.yul\":3103:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":2883:3155   */\n      pop\n        /* \"#utility.yul\":2791:3155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3527   */\n    tag_335:\n        /* \"#utility.yul\":3303:3306   */\n      0x00\n        /* \"#utility.yul\":3324:3391   */\n      tag_337\n        /* \"#utility.yul\":3388:3390   */\n      0x25\n        /* \"#utility.yul\":3383:3386   */\n      dup4\n        /* \"#utility.yul\":3324:3391   */\n      tag_330\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3317:3391   */\n      swap2\n      pop\n        /* \"#utility.yul\":3400:3493   */\n      tag_338\n        /* \"#utility.yul\":3489:3492   */\n      dup3\n        /* \"#utility.yul\":3400:3493   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3518:3520   */\n      0x40\n        /* \"#utility.yul\":3513:3516   */\n      dup3\n        /* \"#utility.yul\":3509:3521   */\n      add\n        /* \"#utility.yul\":3502:3521   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3533:3899   */\n    tag_340:\n        /* \"#utility.yul\":3675:3678   */\n      0x00\n        /* \"#utility.yul\":3696:3763   */\n      tag_342\n        /* \"#utility.yul\":3760:3762   */\n      0x24\n        /* \"#utility.yul\":3755:3758   */\n      dup4\n        /* \"#utility.yul\":3696:3763   */\n      tag_330\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3689:3763   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3865   */\n      tag_343\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3772:3865   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3890:3892   */\n      0x40\n        /* \"#utility.yul\":3885:3888   */\n      dup3\n        /* \"#utility.yul\":3881:3893   */\n      add\n        /* \"#utility.yul\":3874:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3533:3899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4271   */\n    tag_345:\n        /* \"#utility.yul\":4047:4050   */\n      0x00\n        /* \"#utility.yul\":4068:4135   */\n      tag_347\n        /* \"#utility.yul\":4132:4134   */\n      0x26\n        /* \"#utility.yul\":4127:4130   */\n      dup4\n        /* \"#utility.yul\":4068:4135   */\n      tag_330\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4061:4135   */\n      swap2\n      pop\n        /* \"#utility.yul\":4144:4237   */\n      tag_348\n        /* \"#utility.yul\":4233:4236   */\n      dup3\n        /* \"#utility.yul\":4144:4237   */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4262:4264   */\n      0x40\n        /* \"#utility.yul\":4257:4260   */\n      dup3\n        /* \"#utility.yul\":4253:4265   */\n      add\n        /* \"#utility.yul\":4246:4265   */\n      swap1\n      pop\n        /* \"#utility.yul\":3905:4271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4277:4643   */\n    tag_350:\n        /* \"#utility.yul\":4419:4422   */\n      0x00\n        /* \"#utility.yul\":4440:4507   */\n      tag_352\n        /* \"#utility.yul\":4504:4506   */\n      0x1f\n        /* \"#utility.yul\":4499:4502   */\n      dup4\n        /* \"#utility.yul\":4440:4507   */\n      tag_330\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4433:4507   */\n      swap2\n      pop\n        /* \"#utility.yul\":4516:4609   */\n      tag_353\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4516:4609   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4629:4632   */\n      dup3\n        /* \"#utility.yul\":4625:4637   */\n      add\n        /* \"#utility.yul\":4618:4637   */\n      swap1\n      pop\n        /* \"#utility.yul\":4277:4643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4649:5015   */\n    tag_355:\n        /* \"#utility.yul\":4791:4794   */\n      0x00\n        /* \"#utility.yul\":4812:4879   */\n      tag_357\n        /* \"#utility.yul\":4876:4878   */\n      0x20\n        /* \"#utility.yul\":4871:4874   */\n      dup4\n        /* \"#utility.yul\":4812:4879   */\n      tag_330\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4805:4879   */\n      swap2\n      pop\n        /* \"#utility.yul\":4888:4981   */\n      tag_358\n        /* \"#utility.yul\":4977:4980   */\n      dup3\n        /* \"#utility.yul\":4888:4981   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5006:5008   */\n      0x20\n        /* \"#utility.yul\":5001:5004   */\n      dup3\n        /* \"#utility.yul\":4997:5009   */\n      add\n        /* \"#utility.yul\":4990:5009   */\n      swap1\n      pop\n        /* \"#utility.yul\":4649:5015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5387   */\n    tag_360:\n        /* \"#utility.yul\":5163:5166   */\n      0x00\n        /* \"#utility.yul\":5184:5251   */\n      tag_362\n        /* \"#utility.yul\":5248:5250   */\n      0x23\n        /* \"#utility.yul\":5243:5246   */\n      dup4\n        /* \"#utility.yul\":5184:5251   */\n      tag_330\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5177:5251   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5353   */\n      tag_363\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5260:5353   */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5378:5380   */\n      0x40\n        /* \"#utility.yul\":5373:5376   */\n      dup3\n        /* \"#utility.yul\":5369:5381   */\n      add\n        /* \"#utility.yul\":5362:5381   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5759   */\n    tag_365:\n        /* \"#utility.yul\":5535:5538   */\n      0x00\n        /* \"#utility.yul\":5556:5623   */\n      tag_367\n        /* \"#utility.yul\":5620:5622   */\n      0x21\n        /* \"#utility.yul\":5615:5618   */\n      dup4\n        /* \"#utility.yul\":5556:5623   */\n      tag_330\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5549:5623   */\n      swap2\n      pop\n        /* \"#utility.yul\":5632:5725   */\n      tag_368\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5632:5725   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5745:5748   */\n      dup3\n        /* \"#utility.yul\":5741:5753   */\n      add\n        /* \"#utility.yul\":5734:5753   */\n      swap1\n      pop\n        /* \"#utility.yul\":5393:5759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5765:6131   */\n    tag_370:\n        /* \"#utility.yul\":5907:5910   */\n      0x00\n        /* \"#utility.yul\":5928:5995   */\n      tag_372\n        /* \"#utility.yul\":5992:5994   */\n      0x22\n        /* \"#utility.yul\":5987:5990   */\n      dup4\n        /* \"#utility.yul\":5928:5995   */\n      tag_330\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5921:5995   */\n      swap2\n      pop\n        /* \"#utility.yul\":6004:6097   */\n      tag_373\n        /* \"#utility.yul\":6093:6096   */\n      dup3\n        /* \"#utility.yul\":6004:6097   */\n      tag_374\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6122:6124   */\n      0x40\n        /* \"#utility.yul\":6117:6120   */\n      dup3\n        /* \"#utility.yul\":6113:6125   */\n      add\n        /* \"#utility.yul\":6106:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5765:6131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6503   */\n    tag_375:\n        /* \"#utility.yul\":6279:6282   */\n      0x00\n        /* \"#utility.yul\":6300:6367   */\n      tag_377\n        /* \"#utility.yul\":6364:6366   */\n      0x26\n        /* \"#utility.yul\":6359:6362   */\n      dup4\n        /* \"#utility.yul\":6300:6367   */\n      tag_330\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6293:6367   */\n      swap2\n      pop\n        /* \"#utility.yul\":6376:6469   */\n      tag_378\n        /* \"#utility.yul\":6465:6468   */\n      dup3\n        /* \"#utility.yul\":6376:6469   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6494:6496   */\n      0x40\n        /* \"#utility.yul\":6489:6492   */\n      dup3\n        /* \"#utility.yul\":6485:6497   */\n      add\n        /* \"#utility.yul\":6478:6497   */\n      swap1\n      pop\n        /* \"#utility.yul\":6137:6503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6509:6627   */\n    tag_380:\n        /* \"#utility.yul\":6596:6620   */\n      tag_382\n        /* \"#utility.yul\":6614:6619   */\n      dup2\n        /* \"#utility.yul\":6596:6620   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6591:6594   */\n      dup3\n        /* \"#utility.yul\":6584:6621   */\n      mstore\n        /* \"#utility.yul\":6509:6627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6633:6745   */\n    tag_384:\n        /* \"#utility.yul\":6716:6738   */\n      tag_386\n        /* \"#utility.yul\":6732:6737   */\n      dup2\n        /* \"#utility.yul\":6716:6738   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6711:6714   */\n      dup3\n        /* \"#utility.yul\":6704:6739   */\n      mstore\n        /* \"#utility.yul\":6633:6745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6751:6973   */\n    tag_80:\n        /* \"#utility.yul\":6844:6848   */\n      0x00\n        /* \"#utility.yul\":6882:6884   */\n      0x20\n        /* \"#utility.yul\":6871:6880   */\n      dup3\n        /* \"#utility.yul\":6867:6885   */\n      add\n        /* \"#utility.yul\":6859:6885   */\n      swap1\n      pop\n        /* \"#utility.yul\":6895:6966   */\n      tag_389\n        /* \"#utility.yul\":6963:6964   */\n      0x00\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6965   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6966   */\n      tag_317\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6751:6973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6979:7189   */\n    tag_38:\n        /* \"#utility.yul\":7066:7070   */\n      0x00\n        /* \"#utility.yul\":7104:7106   */\n      0x20\n        /* \"#utility.yul\":7093:7102   */\n      dup3\n        /* \"#utility.yul\":7089:7107   */\n      add\n        /* \"#utility.yul\":7081:7107   */\n      swap1\n      pop\n        /* \"#utility.yul\":7117:7182   */\n      tag_391\n        /* \"#utility.yul\":7179:7180   */\n      0x00\n        /* \"#utility.yul\":7168:7177   */\n      dup4\n        /* \"#utility.yul\":7164:7181   */\n      add\n        /* \"#utility.yul\":7155:7161   */\n      dup5\n        /* \"#utility.yul\":7117:7182   */\n      tag_321\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6979:7189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7508   */\n    tag_32:\n        /* \"#utility.yul\":7308:7312   */\n      0x00\n        /* \"#utility.yul\":7346:7348   */\n      0x20\n        /* \"#utility.yul\":7335:7344   */\n      dup3\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7323:7349   */\n      swap1\n      pop\n        /* \"#utility.yul\":7395:7404   */\n      dup2\n        /* \"#utility.yul\":7389:7393   */\n      dup2\n        /* \"#utility.yul\":7385:7405   */\n      sub\n        /* \"#utility.yul\":7381:7382   */\n      0x00\n        /* \"#utility.yul\":7370:7379   */\n      dup4\n        /* \"#utility.yul\":7366:7383   */\n      add\n        /* \"#utility.yul\":7359:7406   */\n      mstore\n        /* \"#utility.yul\":7423:7501   */\n      tag_393\n        /* \"#utility.yul\":7496:7500   */\n      dup2\n        /* \"#utility.yul\":7487:7493   */\n      dup5\n        /* \"#utility.yul\":7423:7501   */\n      tag_325\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7415:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7195:7508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7933   */\n    tag_234:\n        /* \"#utility.yul\":7680:7684   */\n      0x00\n        /* \"#utility.yul\":7718:7720   */\n      0x20\n        /* \"#utility.yul\":7707:7716   */\n      dup3\n        /* \"#utility.yul\":7703:7721   */\n      add\n        /* \"#utility.yul\":7695:7721   */\n      swap1\n      pop\n        /* \"#utility.yul\":7767:7776   */\n      dup2\n        /* \"#utility.yul\":7761:7765   */\n      dup2\n        /* \"#utility.yul\":7757:7777   */\n      sub\n        /* \"#utility.yul\":7753:7754   */\n      0x00\n        /* \"#utility.yul\":7742:7751   */\n      dup4\n        /* \"#utility.yul\":7738:7755   */\n      add\n        /* \"#utility.yul\":7731:7778   */\n      mstore\n        /* \"#utility.yul\":7795:7926   */\n      tag_395\n        /* \"#utility.yul\":7921:7925   */\n      dup2\n        /* \"#utility.yul\":7795:7926   */\n      tag_335\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7787:7926   */\n      swap1\n      pop\n        /* \"#utility.yul\":7514:7933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7939:8358   */\n    tag_226:\n        /* \"#utility.yul\":8105:8109   */\n      0x00\n        /* \"#utility.yul\":8143:8145   */\n      0x20\n        /* \"#utility.yul\":8132:8141   */\n      dup3\n        /* \"#utility.yul\":8128:8146   */\n      add\n        /* \"#utility.yul\":8120:8146   */\n      swap1\n      pop\n        /* \"#utility.yul\":8192:8201   */\n      dup2\n        /* \"#utility.yul\":8186:8190   */\n      dup2\n        /* \"#utility.yul\":8182:8202   */\n      sub\n        /* \"#utility.yul\":8178:8179   */\n      0x00\n        /* \"#utility.yul\":8167:8176   */\n      dup4\n        /* \"#utility.yul\":8163:8180   */\n      add\n        /* \"#utility.yul\":8156:8203   */\n      mstore\n        /* \"#utility.yul\":8220:8351   */\n      tag_397\n        /* \"#utility.yul\":8346:8350   */\n      dup2\n        /* \"#utility.yul\":8220:8351   */\n      tag_340\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8212:8351   */\n      swap1\n      pop\n        /* \"#utility.yul\":7939:8358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8364:8783   */\n    tag_220:\n        /* \"#utility.yul\":8530:8534   */\n      0x00\n        /* \"#utility.yul\":8568:8570   */\n      0x20\n        /* \"#utility.yul\":8557:8566   */\n      dup3\n        /* \"#utility.yul\":8553:8571   */\n      add\n        /* \"#utility.yul\":8545:8571   */\n      swap1\n      pop\n        /* \"#utility.yul\":8617:8626   */\n      dup2\n        /* \"#utility.yul\":8611:8615   */\n      dup2\n        /* \"#utility.yul\":8607:8627   */\n      sub\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8592:8601   */\n      dup4\n        /* \"#utility.yul\":8588:8605   */\n      add\n        /* \"#utility.yul\":8581:8628   */\n      mstore\n        /* \"#utility.yul\":8645:8776   */\n      tag_399\n        /* \"#utility.yul\":8771:8775   */\n      dup2\n        /* \"#utility.yul\":8645:8776   */\n      tag_345\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8637:8776   */\n      swap1\n      pop\n        /* \"#utility.yul\":8364:8783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8789:9208   */\n    tag_270:\n        /* \"#utility.yul\":8955:8959   */\n      0x00\n        /* \"#utility.yul\":8993:8995   */\n      0x20\n        /* \"#utility.yul\":8982:8991   */\n      dup3\n        /* \"#utility.yul\":8978:8996   */\n      add\n        /* \"#utility.yul\":8970:8996   */\n      swap1\n      pop\n        /* \"#utility.yul\":9042:9051   */\n      dup2\n        /* \"#utility.yul\":9036:9040   */\n      dup2\n        /* \"#utility.yul\":9032:9052   */\n      sub\n        /* \"#utility.yul\":9028:9029   */\n      0x00\n        /* \"#utility.yul\":9017:9026   */\n      dup4\n        /* \"#utility.yul\":9013:9030   */\n      add\n        /* \"#utility.yul\":9006:9053   */\n      mstore\n        /* \"#utility.yul\":9070:9201   */\n      tag_401\n        /* \"#utility.yul\":9196:9200   */\n      dup2\n        /* \"#utility.yul\":9070:9201   */\n      tag_350\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9062:9201   */\n      swap1\n      pop\n        /* \"#utility.yul\":8789:9208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9633   */\n    tag_152:\n        /* \"#utility.yul\":9380:9384   */\n      0x00\n        /* \"#utility.yul\":9418:9420   */\n      0x20\n        /* \"#utility.yul\":9407:9416   */\n      dup3\n        /* \"#utility.yul\":9403:9421   */\n      add\n        /* \"#utility.yul\":9395:9421   */\n      swap1\n      pop\n        /* \"#utility.yul\":9467:9476   */\n      dup2\n        /* \"#utility.yul\":9461:9465   */\n      dup2\n        /* \"#utility.yul\":9457:9477   */\n      sub\n        /* \"#utility.yul\":9453:9454   */\n      0x00\n        /* \"#utility.yul\":9442:9451   */\n      dup4\n        /* \"#utility.yul\":9438:9455   */\n      add\n        /* \"#utility.yul\":9431:9478   */\n      mstore\n        /* \"#utility.yul\":9495:9626   */\n      tag_403\n        /* \"#utility.yul\":9621:9625   */\n      dup2\n        /* \"#utility.yul\":9495:9626   */\n      tag_355\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9487:9626   */\n      swap1\n      pop\n        /* \"#utility.yul\":9214:9633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9639:10058   */\n    tag_237:\n        /* \"#utility.yul\":9805:9809   */\n      0x00\n        /* \"#utility.yul\":9843:9845   */\n      0x20\n        /* \"#utility.yul\":9832:9841   */\n      dup3\n        /* \"#utility.yul\":9828:9846   */\n      add\n        /* \"#utility.yul\":9820:9846   */\n      swap1\n      pop\n        /* \"#utility.yul\":9892:9901   */\n      dup2\n        /* \"#utility.yul\":9886:9890   */\n      dup2\n        /* \"#utility.yul\":9882:9902   */\n      sub\n        /* \"#utility.yul\":9878:9879   */\n      0x00\n        /* \"#utility.yul\":9867:9876   */\n      dup4\n        /* \"#utility.yul\":9863:9880   */\n      add\n        /* \"#utility.yul\":9856:9903   */\n      mstore\n        /* \"#utility.yul\":9920:10051   */\n      tag_405\n        /* \"#utility.yul\":10046:10050   */\n      dup2\n        /* \"#utility.yul\":9920:10051   */\n      tag_360\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9912:10051   */\n      swap1\n      pop\n        /* \"#utility.yul\":9639:10058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10064:10483   */\n    tag_262:\n        /* \"#utility.yul\":10230:10234   */\n      0x00\n        /* \"#utility.yul\":10268:10270   */\n      0x20\n        /* \"#utility.yul\":10257:10266   */\n      dup3\n        /* \"#utility.yul\":10253:10271   */\n      add\n        /* \"#utility.yul\":10245:10271   */\n      swap1\n      pop\n        /* \"#utility.yul\":10317:10326   */\n      dup2\n        /* \"#utility.yul\":10311:10315   */\n      dup2\n        /* \"#utility.yul\":10307:10327   */\n      sub\n        /* \"#utility.yul\":10303:10304   */\n      0x00\n        /* \"#utility.yul\":10292:10301   */\n      dup4\n        /* \"#utility.yul\":10288:10305   */\n      add\n        /* \"#utility.yul\":10281:10328   */\n      mstore\n        /* \"#utility.yul\":10345:10476   */\n      tag_407\n        /* \"#utility.yul\":10471:10475   */\n      dup2\n        /* \"#utility.yul\":10345:10476   */\n      tag_365\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10337:10476   */\n      swap1\n      pop\n        /* \"#utility.yul\":10064:10483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10489:10908   */\n    tag_229:\n        /* \"#utility.yul\":10655:10659   */\n      0x00\n        /* \"#utility.yul\":10693:10695   */\n      0x20\n        /* \"#utility.yul\":10682:10691   */\n      dup3\n        /* \"#utility.yul\":10678:10696   */\n      add\n        /* \"#utility.yul\":10670:10696   */\n      swap1\n      pop\n        /* \"#utility.yul\":10742:10751   */\n      dup2\n        /* \"#utility.yul\":10736:10740   */\n      dup2\n        /* \"#utility.yul\":10732:10752   */\n      sub\n        /* \"#utility.yul\":10728:10729   */\n      0x00\n        /* \"#utility.yul\":10717:10726   */\n      dup4\n        /* \"#utility.yul\":10713:10730   */\n      add\n        /* \"#utility.yul\":10706:10753   */\n      mstore\n        /* \"#utility.yul\":10770:10901   */\n      tag_409\n        /* \"#utility.yul\":10896:10900   */\n      dup2\n        /* \"#utility.yul\":10770:10901   */\n      tag_370\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10762:10901   */\n      swap1\n      pop\n        /* \"#utility.yul\":10489:10908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10914:11333   */\n    tag_132:\n        /* \"#utility.yul\":11080:11084   */\n      0x00\n        /* \"#utility.yul\":11118:11120   */\n      0x20\n        /* \"#utility.yul\":11107:11116   */\n      dup3\n        /* \"#utility.yul\":11103:11121   */\n      add\n        /* \"#utility.yul\":11095:11121   */\n      swap1\n      pop\n        /* \"#utility.yul\":11167:11176   */\n      dup2\n        /* \"#utility.yul\":11161:11165   */\n      dup2\n        /* \"#utility.yul\":11157:11177   */\n      sub\n        /* \"#utility.yul\":11153:11154   */\n      0x00\n        /* \"#utility.yul\":11142:11151   */\n      dup4\n        /* \"#utility.yul\":11138:11155   */\n      add\n        /* \"#utility.yul\":11131:11178   */\n      mstore\n        /* \"#utility.yul\":11195:11326   */\n      tag_411\n        /* \"#utility.yul\":11321:11325   */\n      dup2\n        /* \"#utility.yul\":11195:11326   */\n      tag_375\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11187:11326   */\n      swap1\n      pop\n        /* \"#utility.yul\":10914:11333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11561   */\n    tag_42:\n        /* \"#utility.yul\":11432:11436   */\n      0x00\n        /* \"#utility.yul\":11470:11472   */\n      0x20\n        /* \"#utility.yul\":11459:11468   */\n      dup3\n        /* \"#utility.yul\":11455:11473   */\n      add\n        /* \"#utility.yul\":11447:11473   */\n      swap1\n      pop\n        /* \"#utility.yul\":11483:11554   */\n      tag_413\n        /* \"#utility.yul\":11551:11552   */\n      0x00\n        /* \"#utility.yul\":11540:11549   */\n      dup4\n        /* \"#utility.yul\":11536:11553   */\n      add\n        /* \"#utility.yul\":11527:11533   */\n      dup5\n        /* \"#utility.yul\":11483:11554   */\n      tag_380\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11339:11561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11567:11781   */\n    tag_51:\n        /* \"#utility.yul\":11656:11660   */\n      0x00\n        /* \"#utility.yul\":11694:11696   */\n      0x20\n        /* \"#utility.yul\":11683:11692   */\n      dup3\n        /* \"#utility.yul\":11679:11697   */\n      add\n        /* \"#utility.yul\":11671:11697   */\n      swap1\n      pop\n        /* \"#utility.yul\":11707:11774   */\n      tag_415\n        /* \"#utility.yul\":11771:11772   */\n      0x00\n        /* \"#utility.yul\":11760:11769   */\n      dup4\n        /* \"#utility.yul\":11756:11773   */\n      add\n        /* \"#utility.yul\":11747:11753   */\n      dup5\n        /* \"#utility.yul\":11707:11774   */\n      tag_384\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11567:11781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11868:11967   */\n    tag_328:\n        /* \"#utility.yul\":11920:11926   */\n      0x00\n        /* \"#utility.yul\":11954:11959   */\n      dup2\n        /* \"#utility.yul\":11948:11960   */\n      mload\n        /* \"#utility.yul\":11938:11960   */\n      swap1\n      pop\n        /* \"#utility.yul\":11868:11967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11973:12142   */\n    tag_330:\n        /* \"#utility.yul\":12057:12068   */\n      0x00\n        /* \"#utility.yul\":12091:12097   */\n      dup3\n        /* \"#utility.yul\":12086:12089   */\n      dup3\n        /* \"#utility.yul\":12079:12098   */\n      mstore\n        /* \"#utility.yul\":12131:12135   */\n      0x20\n        /* \"#utility.yul\":12126:12129   */\n      dup3\n        /* \"#utility.yul\":12122:12136   */\n      add\n        /* \"#utility.yul\":12107:12136   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:12142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12148:12453   */\n    tag_258:\n        /* \"#utility.yul\":12188:12191   */\n      0x00\n        /* \"#utility.yul\":12207:12227   */\n      tag_421\n        /* \"#utility.yul\":12225:12226   */\n      dup3\n        /* \"#utility.yul\":12207:12227   */\n      tag_383\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12202:12227   */\n      swap2\n      pop\n        /* \"#utility.yul\":12241:12261   */\n      tag_422\n        /* \"#utility.yul\":12259:12260   */\n      dup4\n        /* \"#utility.yul\":12241:12261   */\n      tag_383\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12236:12261   */\n      swap3\n      pop\n        /* \"#utility.yul\":12395:12396   */\n      dup3\n        /* \"#utility.yul\":12327:12393   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12323:12397   */\n      sub\n        /* \"#utility.yul\":12320:12321   */\n      dup3\n        /* \"#utility.yul\":12317:12398   */\n      gt\n        /* \"#utility.yul\":12314:12421   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":12401:12419   */\n      tag_424\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12314:12421   */\n    tag_423:\n        /* \"#utility.yul\":12445:12446   */\n      dup3\n        /* \"#utility.yul\":12442:12443   */\n      dup3\n        /* \"#utility.yul\":12438:12447   */\n      add\n        /* \"#utility.yul\":12431:12447   */\n      swap1\n      pop\n        /* \"#utility.yul\":12148:12453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12459:12644   */\n    tag_279:\n        /* \"#utility.yul\":12499:12500   */\n      0x00\n        /* \"#utility.yul\":12516:12536   */\n      tag_427\n        /* \"#utility.yul\":12534:12535   */\n      dup3\n        /* \"#utility.yul\":12516:12536   */\n      tag_383\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12511:12536   */\n      swap2\n      pop\n        /* \"#utility.yul\":12550:12570   */\n      tag_428\n        /* \"#utility.yul\":12568:12569   */\n      dup4\n        /* \"#utility.yul\":12550:12570   */\n      tag_383\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12545:12570   */\n      swap3\n      pop\n        /* \"#utility.yul\":12589:12590   */\n      dup3\n        /* \"#utility.yul\":12579:12614   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":12594:12612   */\n      tag_430\n      tag_431\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12579:12614   */\n    tag_429:\n        /* \"#utility.yul\":12636:12637   */\n      dup3\n        /* \"#utility.yul\":12633:12634   */\n      dup3\n        /* \"#utility.yul\":12629:12638   */\n      div\n        /* \"#utility.yul\":12624:12638   */\n      swap1\n      pop\n        /* \"#utility.yul\":12459:12644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12650:12998   */\n    tag_276:\n        /* \"#utility.yul\":12690:12697   */\n      0x00\n        /* \"#utility.yul\":12713:12733   */\n      tag_433\n        /* \"#utility.yul\":12731:12732   */\n      dup3\n        /* \"#utility.yul\":12713:12733   */\n      tag_383\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12708:12733   */\n      swap2\n      pop\n        /* \"#utility.yul\":12747:12767   */\n      tag_434\n        /* \"#utility.yul\":12765:12766   */\n      dup4\n        /* \"#utility.yul\":12747:12767   */\n      tag_383\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12742:12767   */\n      swap3\n      pop\n        /* \"#utility.yul\":12935:12936   */\n      dup2\n        /* \"#utility.yul\":12867:12933   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12863:12937   */\n      div\n        /* \"#utility.yul\":12860:12861   */\n      dup4\n        /* \"#utility.yul\":12857:12938   */\n      gt\n        /* \"#utility.yul\":12852:12853   */\n      dup3\n        /* \"#utility.yul\":12845:12854   */\n      iszero\n        /* \"#utility.yul\":12838:12855   */\n      iszero\n        /* \"#utility.yul\":12834:12939   */\n      and\n        /* \"#utility.yul\":12831:12962   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":12942:12960   */\n      tag_436\n      tag_425\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12831:12962   */\n    tag_435:\n        /* \"#utility.yul\":12990:12991   */\n      dup3\n        /* \"#utility.yul\":12987:12988   */\n      dup3\n        /* \"#utility.yul\":12983:12992   */\n      mul\n        /* \"#utility.yul\":12972:12992   */\n      swap1\n      pop\n        /* \"#utility.yul\":12650:12998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13004:13195   */\n    tag_282:\n        /* \"#utility.yul\":13044:13048   */\n      0x00\n        /* \"#utility.yul\":13064:13084   */\n      tag_438\n        /* \"#utility.yul\":13082:13083   */\n      dup3\n        /* \"#utility.yul\":13064:13084   */\n      tag_383\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13059:13084   */\n      swap2\n      pop\n        /* \"#utility.yul\":13098:13118   */\n      tag_439\n        /* \"#utility.yul\":13116:13117   */\n      dup4\n        /* \"#utility.yul\":13098:13118   */\n      tag_383\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13093:13118   */\n      swap3\n      pop\n        /* \"#utility.yul\":13137:13138   */\n      dup3\n        /* \"#utility.yul\":13134:13135   */\n      dup3\n        /* \"#utility.yul\":13131:13139   */\n      lt\n        /* \"#utility.yul\":13128:13162   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":13142:13160   */\n      tag_441\n      tag_425\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13128:13162   */\n    tag_440:\n        /* \"#utility.yul\":13187:13188   */\n      dup3\n        /* \"#utility.yul\":13184:13185   */\n      dup3\n        /* \"#utility.yul\":13180:13189   */\n      sub\n        /* \"#utility.yul\":13172:13189   */\n      swap1\n      pop\n        /* \"#utility.yul\":13004:13195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13201:13297   */\n    tag_320:\n        /* \"#utility.yul\":13238:13245   */\n      0x00\n        /* \"#utility.yul\":13267:13291   */\n      tag_443\n        /* \"#utility.yul\":13285:13290   */\n      dup3\n        /* \"#utility.yul\":13267:13291   */\n      tag_444\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13256:13291   */\n      swap1\n      pop\n        /* \"#utility.yul\":13201:13297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13303:13393   */\n    tag_324:\n        /* \"#utility.yul\":13337:13344   */\n      0x00\n        /* \"#utility.yul\":13380:13385   */\n      dup2\n        /* \"#utility.yul\":13373:13386   */\n      iszero\n        /* \"#utility.yul\":13366:13387   */\n      iszero\n        /* \"#utility.yul\":13355:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13303:13393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:13525   */\n    tag_444:\n        /* \"#utility.yul\":13436:13443   */\n      0x00\n        /* \"#utility.yul\":13476:13518   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13469:13474   */\n      dup3\n        /* \"#utility.yul\":13465:13519   */\n      and\n        /* \"#utility.yul\":13454:13519   */\n      swap1\n      pop\n        /* \"#utility.yul\":13399:13525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13531:13608   */\n    tag_383:\n        /* \"#utility.yul\":13568:13575   */\n      0x00\n        /* \"#utility.yul\":13597:13602   */\n      dup2\n        /* \"#utility.yul\":13586:13602   */\n      swap1\n      pop\n        /* \"#utility.yul\":13531:13608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13614:13700   */\n    tag_387:\n        /* \"#utility.yul\":13649:13656   */\n      0x00\n        /* \"#utility.yul\":13689:13693   */\n      0xff\n        /* \"#utility.yul\":13682:13687   */\n      dup3\n        /* \"#utility.yul\":13678:13694   */\n      and\n        /* \"#utility.yul\":13667:13694   */\n      swap1\n      pop\n        /* \"#utility.yul\":13614:13700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13706:14013   */\n    tag_332:\n        /* \"#utility.yul\":13774:13775   */\n      0x00\n        /* \"#utility.yul\":13784:13897   */\n    tag_450:\n        /* \"#utility.yul\":13798:13804   */\n      dup4\n        /* \"#utility.yul\":13795:13796   */\n      dup2\n        /* \"#utility.yul\":13792:13805   */\n      lt\n        /* \"#utility.yul\":13784:13897   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":13883:13884   */\n      dup1\n        /* \"#utility.yul\":13878:13881   */\n      dup3\n        /* \"#utility.yul\":13874:13885   */\n      add\n        /* \"#utility.yul\":13868:13886   */\n      mload\n        /* \"#utility.yul\":13864:13865   */\n      dup2\n        /* \"#utility.yul\":13859:13862   */\n      dup5\n        /* \"#utility.yul\":13855:13866   */\n      add\n        /* \"#utility.yul\":13848:13887   */\n      mstore\n        /* \"#utility.yul\":13820:13822   */\n      0x20\n        /* \"#utility.yul\":13817:13818   */\n      dup2\n        /* \"#utility.yul\":13813:13823   */\n      add\n        /* \"#utility.yul\":13808:13823   */\n      swap1\n      pop\n        /* \"#utility.yul\":13784:13897   */\n      jump(tag_450)\n    tag_452:\n        /* \"#utility.yul\":13915:13921   */\n      dup4\n        /* \"#utility.yul\":13912:13913   */\n      dup2\n        /* \"#utility.yul\":13909:13922   */\n      gt\n        /* \"#utility.yul\":13906:14007   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":13995:13996   */\n      0x00\n        /* \"#utility.yul\":13986:13992   */\n      dup5\n        /* \"#utility.yul\":13981:13984   */\n      dup5\n        /* \"#utility.yul\":13977:13993   */\n      add\n        /* \"#utility.yul\":13970:13997   */\n      mstore\n        /* \"#utility.yul\":13906:14007   */\n    tag_453:\n        /* \"#utility.yul\":13755:14013   */\n      pop\n        /* \"#utility.yul\":13706:14013   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14019:14339   */\n    tag_118:\n        /* \"#utility.yul\":14063:14069   */\n      0x00\n        /* \"#utility.yul\":14100:14101   */\n      0x02\n        /* \"#utility.yul\":14094:14098   */\n      dup3\n        /* \"#utility.yul\":14090:14102   */\n      div\n        /* \"#utility.yul\":14080:14102   */\n      swap1\n      pop\n        /* \"#utility.yul\":14147:14148   */\n      0x01\n        /* \"#utility.yul\":14141:14145   */\n      dup3\n        /* \"#utility.yul\":14137:14149   */\n      and\n        /* \"#utility.yul\":14168:14186   */\n      dup1\n        /* \"#utility.yul\":14158:14239   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":14224:14228   */\n      0x7f\n        /* \"#utility.yul\":14216:14222   */\n      dup3\n        /* \"#utility.yul\":14212:14229   */\n      and\n        /* \"#utility.yul\":14202:14229   */\n      swap2\n      pop\n        /* \"#utility.yul\":14158:14239   */\n    tag_455:\n        /* \"#utility.yul\":14286:14288   */\n      0x20\n        /* \"#utility.yul\":14278:14284   */\n      dup3\n        /* \"#utility.yul\":14275:14289   */\n      lt\n        /* \"#utility.yul\":14255:14273   */\n      dup2\n        /* \"#utility.yul\":14252:14290   */\n      eq\n        /* \"#utility.yul\":14249:14333   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":14305:14323   */\n      tag_457\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":14249:14333   */\n    tag_456:\n        /* \"#utility.yul\":14070:14339   */\n      pop\n        /* \"#utility.yul\":14019:14339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14345:14525   */\n    tag_425:\n        /* \"#utility.yul\":14393:14470   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14390:14391   */\n      0x00\n        /* \"#utility.yul\":14383:14471   */\n      mstore\n        /* \"#utility.yul\":14490:14494   */\n      0x11\n        /* \"#utility.yul\":14487:14488   */\n      0x04\n        /* \"#utility.yul\":14480:14495   */\n      mstore\n        /* \"#utility.yul\":14514:14518   */\n      0x24\n        /* \"#utility.yul\":14511:14512   */\n      0x00\n        /* \"#utility.yul\":14504:14519   */\n      revert\n        /* \"#utility.yul\":14531:14711   */\n    tag_431:\n        /* \"#utility.yul\":14579:14656   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14576:14577   */\n      0x00\n        /* \"#utility.yul\":14569:14657   */\n      mstore\n        /* \"#utility.yul\":14676:14680   */\n      0x12\n        /* \"#utility.yul\":14673:14674   */\n      0x04\n        /* \"#utility.yul\":14666:14681   */\n      mstore\n        /* \"#utility.yul\":14700:14704   */\n      0x24\n        /* \"#utility.yul\":14697:14698   */\n      0x00\n        /* \"#utility.yul\":14690:14705   */\n      revert\n        /* \"#utility.yul\":14717:14897   */\n    tag_458:\n        /* \"#utility.yul\":14765:14842   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14762:14763   */\n      0x00\n        /* \"#utility.yul\":14755:14843   */\n      mstore\n        /* \"#utility.yul\":14862:14866   */\n      0x22\n        /* \"#utility.yul\":14859:14860   */\n      0x04\n        /* \"#utility.yul\":14852:14867   */\n      mstore\n        /* \"#utility.yul\":14886:14890   */\n      0x24\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14876:14891   */\n      revert\n        /* \"#utility.yul\":15026:15143   */\n    tag_295:\n        /* \"#utility.yul\":15135:15136   */\n      0x00\n        /* \"#utility.yul\":15132:15133   */\n      dup1\n        /* \"#utility.yul\":15125:15137   */\n      revert\n        /* \"#utility.yul\":15149:15251   */\n    tag_334:\n        /* \"#utility.yul\":15190:15196   */\n      0x00\n        /* \"#utility.yul\":15241:15243   */\n      0x1f\n        /* \"#utility.yul\":15237:15244   */\n      not\n        /* \"#utility.yul\":15232:15234   */\n      0x1f\n        /* \"#utility.yul\":15225:15230   */\n      dup4\n        /* \"#utility.yul\":15221:15235   */\n      add\n        /* \"#utility.yul\":15217:15245   */\n      and\n        /* \"#utility.yul\":15207:15245   */\n      swap1\n      pop\n        /* \"#utility.yul\":15149:15251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15257:15481   */\n    tag_339:\n        /* \"#utility.yul\":15397:15431   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":15393:15394   */\n      0x00\n        /* \"#utility.yul\":15385:15391   */\n      dup3\n        /* \"#utility.yul\":15381:15395   */\n      add\n        /* \"#utility.yul\":15374:15432   */\n      mstore\n        /* \"#utility.yul\":15466:15473   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15461:15463   */\n      0x20\n        /* \"#utility.yul\":15453:15459   */\n      dup3\n        /* \"#utility.yul\":15449:15464   */\n      add\n        /* \"#utility.yul\":15442:15474   */\n      mstore\n        /* \"#utility.yul\":15257:15481   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15487:15710   */\n    tag_344:\n        /* \"#utility.yul\":15627:15661   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":15623:15624   */\n      0x00\n        /* \"#utility.yul\":15615:15621   */\n      dup3\n        /* \"#utility.yul\":15611:15625   */\n      add\n        /* \"#utility.yul\":15604:15662   */\n      mstore\n        /* \"#utility.yul\":15696:15702   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15691:15693   */\n      0x20\n        /* \"#utility.yul\":15683:15689   */\n      dup3\n        /* \"#utility.yul\":15679:15694   */\n      add\n        /* \"#utility.yul\":15672:15703   */\n      mstore\n        /* \"#utility.yul\":15487:15710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15716:15941   */\n    tag_349:\n        /* \"#utility.yul\":15856:15890   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15852:15853   */\n      0x00\n        /* \"#utility.yul\":15844:15850   */\n      dup3\n        /* \"#utility.yul\":15840:15854   */\n      add\n        /* \"#utility.yul\":15833:15891   */\n      mstore\n        /* \"#utility.yul\":15925:15933   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15920:15922   */\n      0x20\n        /* \"#utility.yul\":15912:15918   */\n      dup3\n        /* \"#utility.yul\":15908:15923   */\n      add\n        /* \"#utility.yul\":15901:15934   */\n      mstore\n        /* \"#utility.yul\":15716:15941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15947:16128   */\n    tag_354:\n        /* \"#utility.yul\":16087:16120   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":16083:16084   */\n      0x00\n        /* \"#utility.yul\":16075:16081   */\n      dup3\n        /* \"#utility.yul\":16071:16085   */\n      add\n        /* \"#utility.yul\":16064:16121   */\n      mstore\n        /* \"#utility.yul\":15947:16128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16134:16316   */\n    tag_359:\n        /* \"#utility.yul\":16274:16308   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16270:16271   */\n      0x00\n        /* \"#utility.yul\":16262:16268   */\n      dup3\n        /* \"#utility.yul\":16258:16272   */\n      add\n        /* \"#utility.yul\":16251:16309   */\n      mstore\n        /* \"#utility.yul\":16134:16316   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16322:16544   */\n    tag_364:\n        /* \"#utility.yul\":16462:16496   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":16458:16459   */\n      0x00\n        /* \"#utility.yul\":16450:16456   */\n      dup3\n        /* \"#utility.yul\":16446:16460   */\n      add\n        /* \"#utility.yul\":16439:16497   */\n      mstore\n        /* \"#utility.yul\":16531:16536   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16526:16528   */\n      0x20\n        /* \"#utility.yul\":16518:16524   */\n      dup3\n        /* \"#utility.yul\":16514:16529   */\n      add\n        /* \"#utility.yul\":16507:16537   */\n      mstore\n        /* \"#utility.yul\":16322:16544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16550:16770   */\n    tag_369:\n        /* \"#utility.yul\":16690:16724   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":16686:16687   */\n      0x00\n        /* \"#utility.yul\":16678:16684   */\n      dup3\n        /* \"#utility.yul\":16674:16688   */\n      add\n        /* \"#utility.yul\":16667:16725   */\n      mstore\n        /* \"#utility.yul\":16759:16762   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16754:16756   */\n      0x20\n        /* \"#utility.yul\":16746:16752   */\n      dup3\n        /* \"#utility.yul\":16742:16757   */\n      add\n        /* \"#utility.yul\":16735:16763   */\n      mstore\n        /* \"#utility.yul\":16550:16770   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16776:16997   */\n    tag_374:\n        /* \"#utility.yul\":16916:16950   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":16912:16913   */\n      0x00\n        /* \"#utility.yul\":16904:16910   */\n      dup3\n        /* \"#utility.yul\":16900:16914   */\n      add\n        /* \"#utility.yul\":16893:16951   */\n      mstore\n        /* \"#utility.yul\":16985:16989   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16980:16982   */\n      0x20\n        /* \"#utility.yul\":16972:16978   */\n      dup3\n        /* \"#utility.yul\":16968:16983   */\n      add\n        /* \"#utility.yul\":16961:16990   */\n      mstore\n        /* \"#utility.yul\":16776:16997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17003:17228   */\n    tag_379:\n        /* \"#utility.yul\":17143:17177   */\n      0x4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061\n        /* \"#utility.yul\":17139:17140   */\n      0x00\n        /* \"#utility.yul\":17131:17137   */\n      dup3\n        /* \"#utility.yul\":17127:17141   */\n      add\n        /* \"#utility.yul\":17120:17178   */\n      mstore\n        /* \"#utility.yul\":17212:17220   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17207:17209   */\n      0x20\n        /* \"#utility.yul\":17199:17205   */\n      dup3\n        /* \"#utility.yul\":17195:17210   */\n      add\n        /* \"#utility.yul\":17188:17221   */\n      mstore\n        /* \"#utility.yul\":17003:17228   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17234:17356   */\n    tag_287:\n        /* \"#utility.yul\":17307:17331   */\n      tag_476\n        /* \"#utility.yul\":17325:17330   */\n      dup2\n        /* \"#utility.yul\":17307:17331   */\n      tag_320\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17300:17305   */\n      dup2\n        /* \"#utility.yul\":17297:17332   */\n      eq\n        /* \"#utility.yul\":17287:17350   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":17346:17347   */\n      0x00\n        /* \"#utility.yul\":17343:17344   */\n      dup1\n        /* \"#utility.yul\":17336:17348   */\n      revert\n        /* \"#utility.yul\":17287:17350   */\n    tag_477:\n        /* \"#utility.yul\":17234:17356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17362:17484   */\n    tag_291:\n        /* \"#utility.yul\":17435:17459   */\n      tag_479\n        /* \"#utility.yul\":17453:17458   */\n      dup2\n        /* \"#utility.yul\":17435:17459   */\n      tag_383\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17428:17433   */\n      dup2\n        /* \"#utility.yul\":17425:17460   */\n      eq\n        /* \"#utility.yul\":17415:17478   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":17474:17475   */\n      0x00\n        /* \"#utility.yul\":17471:17472   */\n      dup1\n        /* \"#utility.yul\":17464:17476   */\n      revert\n        /* \"#utility.yul\":17415:17478   */\n    tag_480:\n        /* \"#utility.yul\":17362:17484   */\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n\n    auxdata: 0xa2646970667358221220c53a1e6553795ecf2eaba179491b208f2ec647458c335609ab9971fd44835dce64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": 522,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 530,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:951:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:5",
														"type": ""
													}
												],
												"src": "7:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:5",
														"type": ""
													}
												],
												"src": "131:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:5",
														"type": ""
													}
												],
												"src": "359:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "503:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "517:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "564:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "538:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "625:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "639:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "635:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "625:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "591:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:26:5"
															},
															"nodeType": "YulIf",
															"src": "581:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "728:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "728:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "728:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "678:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:38:5"
															},
															"nodeType": "YulIf",
															"src": "672:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "477:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "486:6:5",
														"type": ""
													}
												],
												"src": "442:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:5"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052732c40b38ef349aea24aa48ed1a6ed3db3860effa3600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50620000876200007b6200020a60201b60201c565b6200021260201b60201c565b6040518060400160405280600981526020017f48616c6f206e6f6465000000000000000000000000000000000000000000000081525060069080519060200190620000d4929190620002d6565b506040518060400160405280600481526020017f48616c6f000000000000000000000000000000000000000000000000000000008152506005908051906020019062000122929190620002d6565b506012600460006101000a81548160ff021916908360ff1602179055506d04ee2d6d415b85acef8100000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600354604051620001fc919062000397565b60405180910390a362000423565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620002e490620003be565b90600052602060002090601f01602090048101928262000308576000855562000354565b82601f106200032357805160ff191683800117855562000354565b8280016001018555821562000354579182015b828111156200035357825182559160200191906001019062000336565b5b50905062000363919062000367565b5090565b5b808211156200038257600081600090555060010162000368565b5090565b6200039181620003b4565b82525050565b6000602082019050620003ae600083018462000386565b92915050565b6000819050919050565b60006002820490506001821680620003d757607f821691505b60208210811415620003ee57620003ed620003f4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61268580620004336000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146103a4578063a9059cbb146103d4578063b09f126614610404578063d28d885214610422578063dd62ed3e14610440578063f2fde38b146104705761014d565b8063715018a6146102f2578063893d20e8146102fc5780638da5cb5b1461031a57806395d89b4114610338578063a0712d6814610356578063a2179ab0146103865761014d565b806332424aa31161011557806332424aa31461020c578063395093511461022a578063417c73a71461025a57806342966c68146102765780634a49ac4c146102a657806370a08231146102c25761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be578063313ce567146101ee575b600080fd5b61015a61048c565b6040516101679190611f0b565b60405180910390f35b61018a60048036038101906101859190611cb8565b61051e565b6040516101979190611ef0565b60405180910390f35b6101a861053c565b6040516101b5919061204d565b60405180910390f35b6101d860048036038101906101d39190611c65565b610546565b6040516101e59190611ef0565b60405180910390f35b6101f66106b1565b6040516102039190612068565b60405180910390f35b6102146106c8565b6040516102219190612068565b60405180910390f35b610244600480360381019061023f9190611cb8565b6106db565b6040516102519190611ef0565b60405180910390f35b610274600480360381019061026f9190611bf8565b61078e565b005b610290600480360381019061028b9190611cf8565b610865565b60405161029d9190611ef0565b60405180910390f35b6102c060048036038101906102bb9190611bf8565b610881565b005b6102dc60048036038101906102d79190611bf8565b610958565b6040516102e9919061204d565b60405180910390f35b6102fa6109a1565b005b610304610a29565b6040516103119190611ed5565b60405180910390f35b610322610a38565b60405161032f9190611ed5565b60405180910390f35b610340610a61565b60405161034d9190611f0b565b60405180910390f35b610370600480360381019061036b9190611cf8565b610af3565b60405161037d9190611ef0565b60405180910390f35b61038e610b8b565b60405161039b9190611ed5565b60405180910390f35b6103be60048036038101906103b99190611cb8565b610bb1565b6040516103cb9190611ef0565b60405180910390f35b6103ee60048036038101906103e99190611cb8565b610c7e565b6040516103fb9190611ef0565b60405180910390f35b61040c610d2e565b6040516104199190611f0b565b60405180910390f35b61042a610dbc565b6040516104379190611f0b565b60405180910390f35b61045a60048036038101906104559190611c25565b610e4a565b604051610467919061204d565b60405180910390f35b61048a60048036038101906104859190611bf8565b610ed1565b005b60606006805461049b9061223c565b80601f01602080910402602001604051908101604052809291908181526020018280546104c79061223c565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050905090565b600061053261052b610fc9565b8484610fd1565b6001905092915050565b6000600354905090565b6000801515600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d19061202d565b60405180910390fd5b6105e584848461119c565b6106a6846105f1610fc9565b6106a1856040518060600160405280602881526020016125bb60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610657610fc9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172f9092919063ffffffff16565b610fd1565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b60006107846106e8610fc9565b8461077f85600260006106f9610fc9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178490919063ffffffff16565b610fd1565b6001905092915050565b610796610fc9565b73ffffffffffffffffffffffffffffffffffffffff166107b4610a38565b73ffffffffffffffffffffffffffffffffffffffff161461080a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080190611fad565b60405180910390fd5b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000610878610872610fc9565b8361179a565b60019050919050565b610889610fc9565b73ffffffffffffffffffffffffffffffffffffffff166108a7610a38565b73ffffffffffffffffffffffffffffffffffffffff16146108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f490611fad565b60405180910390fd5b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109a9610fc9565b73ffffffffffffffffffffffffffffffffffffffff166109c7610a38565b73ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611fad565b60405180910390fd5b610a27600061193e565b565b6000610a33610a38565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610a709061223c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9c9061223c565b8015610ae95780601f10610abe57610100808354040283529160200191610ae9565b820191906000526020600020905b815481529060010190602001808311610acc57829003601f168201915b5050505050905090565b6000610afd610fc9565b73ffffffffffffffffffffffffffffffffffffffff16610b1b610a38565b73ffffffffffffffffffffffffffffffffffffffff1614610b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6890611fad565b60405180910390fd5b610b82610b7c610fc9565b83611a02565b60019050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610c74610bbe610fc9565b84610c6f856040518060600160405280602581526020016126096025913960026000610be8610fc9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172f9092919063ffffffff16565b610fd1565b6001905092915050565b6000801515600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d099061202d565b60405180910390fd5b610d24610d1d610fc9565b848461119c565b6001905092915050565b60058054610d3b9061223c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d679061223c565b8015610db45780601f10610d8957610100808354040283529160200191610db4565b820191906000526020600020905b815481529060010190602001808311610d9757829003601f168201915b505050505081565b60068054610dc99061223c565b80601f0160208091040260200160405190810160405280929190818152602001828054610df59061223c565b8015610e425780601f10610e1757610100808354040283529160200191610e42565b820191906000526020600020905b815481529060010190602001808311610e2557829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610ed9610fc9565b73ffffffffffffffffffffffffffffffffffffffff16610ef7610a38565b73ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490611fad565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb490611f6d565b60405180910390fd5b610fc68161193e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103890611f4d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a89061200d565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161118f919061204d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561120c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120390611f2d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390611fcd565b60405180910390fd5b6112e8816040518060600160405280602681526020016125e360269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172f9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461162f5760006113a9606461139b600a85611b8c90919063ffffffff16565b611ba290919063ffffffff16565b905061140f6113c18284611bb890919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6114b48486611bb890919063ffffffff16565b6040516114c1919061204d565b60405180910390a361153d8160016000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178490919063ffffffff16565b60016000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611621919061204d565b60405180910390a35061172a565b61168181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611721919061204d565b60405180910390a35b505050565b6000838311158290611777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176e9190611f0b565b60405180910390fd5b5082840390509392505050565b60008183611792919061209f565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561180a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180190611fed565b60405180910390fd5b6118768160405180606001604052806022815260200161262e60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172f9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118ce81600354611bb890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611932919061204d565b60405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6990611f8d565b60405180910390fd5b611a878160035461178490919063ffffffff16565b600381905550611adf81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b80919061204d565b60405180910390a35050565b60008183611b9a9190612126565b905092915050565b60008183611bb091906120f5565b905092915050565b60008183611bc69190612180565b905092915050565b600081359050611bdd8161258c565b92915050565b600081359050611bf2816125a3565b92915050565b600060208284031215611c0e57611c0d6122fb565b5b6000611c1c84828501611bce565b91505092915050565b60008060408385031215611c3c57611c3b6122fb565b5b6000611c4a85828601611bce565b9250506020611c5b85828601611bce565b9150509250929050565b600080600060608486031215611c7e57611c7d6122fb565b5b6000611c8c86828701611bce565b9350506020611c9d86828701611bce565b9250506040611cae86828701611be3565b9150509250925092565b60008060408385031215611ccf57611cce6122fb565b5b6000611cdd85828601611bce565b9250506020611cee85828601611be3565b9150509250929050565b600060208284031215611d0e57611d0d6122fb565b5b6000611d1c84828501611be3565b91505092915050565b611d2e816121b4565b82525050565b611d3d816121c6565b82525050565b6000611d4e82612083565b611d58818561208e565b9350611d68818560208601612209565b611d7181612300565b840191505092915050565b6000611d8960258361208e565b9150611d9482612311565b604082019050919050565b6000611dac60248361208e565b9150611db782612360565b604082019050919050565b6000611dcf60268361208e565b9150611dda826123af565b604082019050919050565b6000611df2601f8361208e565b9150611dfd826123fe565b602082019050919050565b6000611e1560208361208e565b9150611e2082612427565b602082019050919050565b6000611e3860238361208e565b9150611e4382612450565b604082019050919050565b6000611e5b60218361208e565b9150611e668261249f565b604082019050919050565b6000611e7e60228361208e565b9150611e89826124ee565b604082019050919050565b6000611ea160268361208e565b9150611eac8261253d565b604082019050919050565b611ec0816121f2565b82525050565b611ecf816121fc565b82525050565b6000602082019050611eea6000830184611d25565b92915050565b6000602082019050611f056000830184611d34565b92915050565b60006020820190508181036000830152611f258184611d43565b905092915050565b60006020820190508181036000830152611f4681611d7c565b9050919050565b60006020820190508181036000830152611f6681611d9f565b9050919050565b60006020820190508181036000830152611f8681611dc2565b9050919050565b60006020820190508181036000830152611fa681611de5565b9050919050565b60006020820190508181036000830152611fc681611e08565b9050919050565b60006020820190508181036000830152611fe681611e2b565b9050919050565b6000602082019050818103600083015261200681611e4e565b9050919050565b6000602082019050818103600083015261202681611e71565b9050919050565b6000602082019050818103600083015261204681611e94565b9050919050565b60006020820190506120626000830184611eb7565b92915050565b600060208201905061207d6000830184611ec6565b92915050565b600081519050919050565b600082825260208201905092915050565b60006120aa826121f2565b91506120b5836121f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120ea576120e961226e565b5b828201905092915050565b6000612100826121f2565b915061210b836121f2565b92508261211b5761211a61229d565b5b828204905092915050565b6000612131826121f2565b915061213c836121f2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121755761217461226e565b5b828202905092915050565b600061218b826121f2565b9150612196836121f2565b9250828210156121a9576121a861226e565b5b828203905092915050565b60006121bf826121d2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561222757808201518184015260208101905061220c565b83811115612236576000848401525b50505050565b6000600282049050600182168061225457607f821691505b60208210811415612268576122676122cc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4572726f723a207472616e736665722066726f6d20626c61636b6c697374206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b612595816121b4565b81146125a057600080fd5b50565b6125ac816121f2565b81146125b757600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220c53a1e6553795ecf2eaba179491b208f2ec647458c335609ab9971fd44835dce64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x2C40B38EF349AEA24AA48ED1A6ED3DB3860EFFA3 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x87 PUSH3 0x7B PUSH3 0x20A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x212 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48616C6F206E6F64650000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x2D6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48616C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x122 SWAP3 SWAP2 SWAP1 PUSH3 0x2D6 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x1FC SWAP2 SWAP1 PUSH3 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2E4 SWAP1 PUSH3 0x3BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x308 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x354 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x323 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x354 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x354 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x353 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x336 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x363 SWAP2 SWAP1 PUSH3 0x367 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x382 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x368 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x391 DUP2 PUSH3 0x3B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3AE PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3EE JUMPI PUSH3 0x3ED PUSH3 0x3F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2685 DUP1 PUSH3 0x433 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x470 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA2179AB0 EQ PUSH2 0x386 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x417C73A7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x4A49AC4C EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C2 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x532 PUSH2 0x52B PUSH2 0xFC9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x6A6 DUP5 PUSH2 0x5F1 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x6A1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25BB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x657 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 PUSH2 0x6E8 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0x77F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x6F9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x796 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B4 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x878 PUSH2 0x872 PUSH2 0xFC9 JUMP JUMPDEST DUP4 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x889 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8A7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9C7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 PUSH1 0x0 PUSH2 0x193E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0xA70 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9C SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1B PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB68 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB82 PUSH2 0xB7C PUSH2 0xFC9 JUMP JUMPDEST DUP4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH2 0xBBE PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xC6F DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2609 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xBE8 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 PUSH2 0xD1D PUSH2 0xFC9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xD3B SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD67 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD89 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD97 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xDC9 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDF5 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE42 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE25 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xED9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB4 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0x193E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1038 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A8 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x120C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x162F JUMPI PUSH1 0x0 PUSH2 0x13A9 PUSH1 0x64 PUSH2 0x139B PUSH1 0xA DUP6 PUSH2 0x1B8C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x140F PUSH2 0x13C1 DUP3 DUP5 PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x14B4 DUP5 DUP7 PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C1 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x153D DUP2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1621 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1681 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1721 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1792 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1801 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18CE DUP2 PUSH1 0x3 SLOAD PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1ADF DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B80 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BC6 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDD DUP2 PUSH2 0x258C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF2 DUP2 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3C JUMPI PUSH2 0x1C3B PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4A DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5B DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8C DUP7 DUP3 DUP8 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C9D DUP7 DUP3 DUP8 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CAE DUP7 DUP3 DUP8 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CEE DUP6 DUP3 DUP7 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x21B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3D DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4E DUP3 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1D58 DUP2 DUP6 PUSH2 0x208E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D68 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D89 PUSH1 0x25 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH1 0x24 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x2360 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCF PUSH1 0x26 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 PUSH1 0x1F DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x20 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x23 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5B PUSH1 0x21 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E66 DUP3 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x22 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x26 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC0 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ECF DUP2 PUSH2 0x21FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 DUP5 PUSH2 0x1D43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F46 DUP2 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F66 DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F86 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC6 DUP2 PUSH2 0x1E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2006 DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2026 DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2046 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2062 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20EA JUMPI PUSH2 0x20E9 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2100 DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x210B DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x211B JUMPI PUSH2 0x211A PUSH2 0x229D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2131 DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x213C DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BF DUP3 PUSH2 0x21D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2227 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x220C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2268 JUMPI PUSH2 0x2267 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2595 DUP2 PUSH2 0x21B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25AC DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x25B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xC5 GASPRICE 0x1E PUSH6 0x53795ECF2EAB LOG1 PUSH26 0x491B208F2EC647458C335609AB9971FD44835DCE64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "3217:9006:4:-:0;;;3583:42;3544:82;;;;;;;;;;;;;;;;;;;;3683:241;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;3704:19:4;;;;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;:::i;:::-;;3730:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;3765:2;3753:9;;:14;;;;;;;;;;;;;;;;;;3789:26;3774:12;:41;;;;3846:12;;3822:9;:21;3832:10;3822:21;;;;;;;;;;;;;;;:36;;;;3893:10;3872:46;;3889:1;3872:46;;;3905:12;;3872:46;;;;;;:::i;:::-;;;;;;;;3217:9006;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;3217:9006:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:5:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:320::-;486:6;523:1;517:4;513:12;503:22;;570:1;564:4;560:12;591:18;581:81;;647:4;639:6;635:17;625:27;;581:81;709:2;701:6;698:14;678:18;675:38;672:84;;;728:18;;:::i;:::-;672:84;493:269;442:320;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;3217:9006:4;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1216": {
									"entryPoint": 4049,
									"id": 1216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1171": {
									"entryPoint": 6042,
									"id": 1171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_decimals_605": {
									"entryPoint": 1736,
									"id": 605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1124": {
									"entryPoint": 6658,
									"id": 1124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": 4041,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_name_609": {
									"entryPoint": 3516,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_symbol_607": {
									"entryPoint": 3374,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 6462,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1078": {
									"entryPoint": 4508,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToBlackList_674": {
									"entryPoint": 1934,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_342": {
									"entryPoint": 6020,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_801": {
									"entryPoint": 3658,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_822": {
									"entryPoint": 1310,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_753": {
									"entryPoint": 2392,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_962": {
									"entryPoint": 2149,
									"id": 962,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_709": {
									"entryPoint": 1713,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_926": {
									"entryPoint": 2993,
									"id": 926,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_387": {
									"entryPoint": 7074,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_699": {
									"entryPoint": 2601,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_897": {
									"entryPoint": 1755,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@managerWallet_615": {
									"entryPoint": 2955,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_945": {
									"entryPoint": 2803,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_372": {
									"entryPoint": 7052,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_729": {
									"entryPoint": 1164,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2616,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlackList_688": {
									"entryPoint": 2177,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2465,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_357": {
									"entryPoint": 7096,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_427": {
									"entryPoint": 5935,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_719": {
									"entryPoint": 2657,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_739": {
									"entryPoint": 1340,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_869": {
									"entryPoint": 1350,
									"id": 869,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 3793,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_783": {
									"entryPoint": 3198,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 9056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 9214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 9296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855": {
									"entryPoint": 9375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 9454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17487:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:5"
															},
															"nodeType": "YulIf",
															"src": "1222:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:5",
														"type": ""
													}
												],
												"src": "1112:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:5"
															},
															"nodeType": "YulIf",
															"src": "1830:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													}
												],
												"src": "1737:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2331:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:5"
															},
															"nodeType": "YulIf",
															"src": "2293:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2422:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2437:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2441:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2466:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2501:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2497:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2497:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2521:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2476:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2466:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:5",
														"type": ""
													}
												],
												"src": "2217:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2617:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2634:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2639:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2627:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2605:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2612:3:5",
														"type": ""
													}
												],
												"src": "2552:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2752:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2772:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2757:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2745:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2745:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2730:3:5",
														"type": ""
													}
												],
												"src": "2676:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2893:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2940:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2907:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2897:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2955:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2962:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3068:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3075:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3042:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3103:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3114:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3141:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3119:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2871:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:5",
														"type": ""
													}
												],
												"src": "2791:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3307:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3317:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3383:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3324:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3317:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3489:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "3400:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3513:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3295:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3303:3:5",
														"type": ""
													}
												],
												"src": "3161:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3689:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3755:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3696:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "3772:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3874:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3667:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3675:3:5",
														"type": ""
													}
												],
												"src": "3533:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4051:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4061:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4127:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4132:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4068:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4233:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4144:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4144:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4246:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4257:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4262:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4039:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4047:3:5",
														"type": ""
													}
												],
												"src": "3905:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4423:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4433:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4499:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4504:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4440:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "4516:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4516:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4618:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4411:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4419:3:5",
														"type": ""
													}
												],
												"src": "4277:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4795:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4805:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4812:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4977:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4888:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4888:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4990:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5001:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5006:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4783:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4791:3:5",
														"type": ""
													}
												],
												"src": "4649:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5167:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5177:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5248:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5184:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "5260:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5260:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5362:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5373:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5155:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5163:3:5",
														"type": ""
													}
												],
												"src": "5021:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5549:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5615:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5556:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																	"nodeType": "YulIdentifier",
																	"src": "5632:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5632:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5734:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5745:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5527:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5535:3:5",
														"type": ""
													}
												],
												"src": "5393:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5921:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5987:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5992:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5928:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5921:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6093:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "6004:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6004:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6106:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6117:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5907:3:5",
														"type": ""
													}
												],
												"src": "5765:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6293:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6359:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6364:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6300:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6293:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6465:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																	"nodeType": "YulIdentifier",
																	"src": "6376:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6376:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6478:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6489:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6485:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6485:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6478:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6271:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6279:3:5",
														"type": ""
													}
												],
												"src": "6137:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6574:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6614:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6596:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6596:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6584:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6562:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6569:3:5",
														"type": ""
													}
												],
												"src": "6509:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6694:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6711:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6732:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6716:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6716:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6704:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6704:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6682:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6689:3:5",
														"type": ""
													}
												],
												"src": "6633:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6849:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6859:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6867:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6859:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6963:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6948:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6895:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6895:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6833:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6844:4:5",
														"type": ""
													}
												],
												"src": "6751:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7081:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7081:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7155:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7179:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7117:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7117:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7043:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7055:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7066:4:5",
														"type": ""
													}
												],
												"src": "6979:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7313:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7323:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7335:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7323:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7389:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7359:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7415:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7487:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7496:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7423:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7415:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7285:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7297:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7308:4:5",
														"type": ""
													}
												],
												"src": "7195:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7695:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7707:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7695:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7753:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7761:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7757:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7731:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7787:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7921:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7795:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7787:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7665:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7680:4:5",
														"type": ""
													}
												],
												"src": "7514:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8110:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8120:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8132:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8143:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8128:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8120:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8167:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8163:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8186:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8192:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8182:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8156:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8156:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8212:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8346:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8220:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8212:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8090:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8105:4:5",
														"type": ""
													}
												],
												"src": "7939:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8535:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8545:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8553:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8553:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8545:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8592:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8603:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8588:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8588:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8611:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8617:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8581:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8581:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8637:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8771:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8645:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8645:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8637:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8515:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8530:4:5",
														"type": ""
													}
												],
												"src": "8364:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8960:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8970:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8982:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8978:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8978:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8970:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9017:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9028:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9013:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9036:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9032:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9032:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9006:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9006:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9062:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9196:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9070:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9062:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8940:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8955:4:5",
														"type": ""
													}
												],
												"src": "8789:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9385:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9395:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9407:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9418:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9403:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9403:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9395:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9442:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9453:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9438:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9438:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9461:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9457:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9431:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9487:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9621:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9495:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9487:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9365:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9380:4:5",
														"type": ""
													}
												],
												"src": "9214:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9810:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9820:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9832:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9843:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9828:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9867:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9878:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9863:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9863:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9886:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9892:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9882:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9912:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10046:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9920:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9912:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9790:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9805:4:5",
														"type": ""
													}
												],
												"src": "9639:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10235:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10245:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10257:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10268:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10245:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10292:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10303:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10288:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10311:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10317:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10281:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10281:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10337:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10471:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10345:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10345:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10337:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10215:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10230:4:5",
														"type": ""
													}
												],
												"src": "10064:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10660:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10670:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10682:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10693:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10678:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10678:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10670:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10717:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10728:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10713:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10736:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10742:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10732:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10706:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10706:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10762:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10896:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10770:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10762:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10640:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10655:4:5",
														"type": ""
													}
												],
												"src": "10489:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11085:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11095:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11107:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11118:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11095:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11142:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11153:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11138:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11138:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11161:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11167:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11157:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11131:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11131:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11187:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11321:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11195:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11187:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11065:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11080:4:5",
														"type": ""
													}
												],
												"src": "10914:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11437:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11447:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11459:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11470:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11455:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11455:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11447:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11527:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11540:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11536:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11536:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11483:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11483:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11409:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11421:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11432:4:5",
														"type": ""
													}
												],
												"src": "11339:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11661:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11671:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11683:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11679:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11679:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11671:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11747:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11760:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11771:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11707:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11707:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11707:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11633:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11645:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11656:4:5",
														"type": ""
													}
												],
												"src": "11567:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11827:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11837:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11853:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11847:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11837:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11820:6:5",
														"type": ""
													}
												],
												"src": "11787:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11927:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11938:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11954:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11948:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11938:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11910:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11920:6:5",
														"type": ""
													}
												],
												"src": "11868:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12069:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12086:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12091:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12079:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12079:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12107:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12126:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12131:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12122:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12107:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12041:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12046:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12057:11:5",
														"type": ""
													}
												],
												"src": "11973:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12192:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12202:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12225:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12207:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12207:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12202:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12236:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12259:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12241:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12241:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12236:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12399:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12401:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12401:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12401:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12320:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12327:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12395:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12323:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12323:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12317:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:81:5"
															},
															"nodeType": "YulIf",
															"src": "12314:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12431:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12442:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12445:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12431:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12179:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12182:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12188:3:5",
														"type": ""
													}
												],
												"src": "12148:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12501:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12511:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12534:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12516:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12511:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12545:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12568:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12550:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12550:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12545:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12592:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12594:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12594:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12594:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12589:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12582:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12582:9:5"
															},
															"nodeType": "YulIf",
															"src": "12579:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12624:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12633:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12636:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12629:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12624:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12490:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12493:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12499:1:5",
														"type": ""
													}
												],
												"src": "12459:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12698:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12708:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12731:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12713:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12708:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12742:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12765:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12747:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12747:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12742:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12940:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12942:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12942:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12942:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12852:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12845:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12845:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12838:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12838:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12860:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12867:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12935:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12863:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12863:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12857:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12857:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:105:5"
															},
															"nodeType": "YulIf",
															"src": "12831:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12972:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12987:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12990:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12983:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12972:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12681:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12684:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12690:7:5",
														"type": ""
													}
												],
												"src": "12650:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13049:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13059:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13082:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13064:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13064:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13059:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13093:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13116:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13098:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13098:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13093:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13140:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13142:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13142:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13142:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13134:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13137:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13131:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13131:8:5"
															},
															"nodeType": "YulIf",
															"src": "13128:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13172:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13184:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13187:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13180:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13172:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13035:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13038:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13044:4:5",
														"type": ""
													}
												],
												"src": "13004:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13246:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13256:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13285:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13267:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13267:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13256:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13228:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13238:7:5",
														"type": ""
													}
												],
												"src": "13201:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13345:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13355:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13380:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13373:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13373:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13366:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13355:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13327:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13337:7:5",
														"type": ""
													}
												],
												"src": "13303:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13444:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13454:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13469:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13476:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13465:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13465:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13454:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13426:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13436:7:5",
														"type": ""
													}
												],
												"src": "13399:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13576:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13586:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13597:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13586:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13558:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13568:7:5",
														"type": ""
													}
												],
												"src": "13531:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13657:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13667:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13682:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13689:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13678:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13678:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13667:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13639:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13649:7:5",
														"type": ""
													}
												],
												"src": "13614:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13755:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13765:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13774:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13769:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13834:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13859:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13864:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13855:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13855:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13878:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13883:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13874:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13874:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13868:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13868:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13848:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13848:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13848:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13795:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13798:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13792:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13806:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13808:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13817:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13820:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13813:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13813:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13808:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13788:3:5",
																"statements": []
															},
															"src": "13784:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13931:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13981:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13986:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13977:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13977:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13995:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13970:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13970:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13970:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13912:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13915:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13909:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:13:5"
															},
															"nodeType": "YulIf",
															"src": "13906:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13737:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13742:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13747:6:5",
														"type": ""
													}
												],
												"src": "13706:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14070:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14080:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14094:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14100:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14090:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14090:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14111:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14141:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14147:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14137:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14137:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14115:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14188:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14202:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14216:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14224:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14212:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14202:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14168:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14161:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14161:26:5"
															},
															"nodeType": "YulIf",
															"src": "14158:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14291:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "14305:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14305:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14305:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14255:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14278:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14286:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14275:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14275:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:38:5"
															},
															"nodeType": "YulIf",
															"src": "14249:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14054:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14063:6:5",
														"type": ""
													}
												],
												"src": "14019:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14373:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14390:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14393:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14383:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14487:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14490:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14480:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14480:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14511:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14514:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14504:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14504:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14504:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14345:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14559:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14576:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14579:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14569:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14569:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14569:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14673:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14676:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14666:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14666:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14666:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14697:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14700:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14690:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14690:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14531:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14745:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14762:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14765:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14755:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14755:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14859:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14862:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14852:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14852:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14852:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14886:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14876:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14876:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "14717:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14992:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15009:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15012:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15002:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15002:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15002:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "14903:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15115:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15132:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15135:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15125:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15125:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15125:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15026:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15197:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15207:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15225:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15232:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15221:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15221:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15241:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15237:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15217:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15217:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15207:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15180:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15190:6:5",
														"type": ""
													}
												],
												"src": "15149:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15363:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15385:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15393:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15381:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15381:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15397:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15374:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15374:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15374:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15453:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15461:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15449:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15449:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15466:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15442:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15442:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15442:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15355:6:5",
														"type": ""
													}
												],
												"src": "15257:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15593:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15615:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15623:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15611:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15627:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15604:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15683:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15691:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15679:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15696:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15585:6:5",
														"type": ""
													}
												],
												"src": "15487:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15822:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15844:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15852:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15840:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15856:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15833:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15833:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15912:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15920:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15908:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15925:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15901:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15901:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15901:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15814:6:5",
														"type": ""
													}
												],
												"src": "15716:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16053:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16075:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16083:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16071:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16071:14:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16087:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16064:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16064:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16064:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16045:6:5",
														"type": ""
													}
												],
												"src": "15947:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16240:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16262:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16270:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16258:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16274:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16251:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16251:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16232:6:5",
														"type": ""
													}
												],
												"src": "16134:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16428:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16450:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16458:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16446:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16446:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16462:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16439:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16439:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16439:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16518:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16526:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16514:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16514:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16531:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16507:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16507:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16507:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16420:6:5",
														"type": ""
													}
												],
												"src": "16322:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16656:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16678:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16686:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16674:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16674:14:5"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16690:34:5",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16667:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16667:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16746:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16754:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16742:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16742:15:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16759:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16735:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16735:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16735:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16648:6:5",
														"type": ""
													}
												],
												"src": "16550:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16882:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16904:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16912:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16900:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16916:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16893:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16893:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16972:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16980:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16968:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16968:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16961:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16961:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16874:6:5",
														"type": ""
													}
												],
												"src": "16776:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17109:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17131:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17139:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17127:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17127:14:5"
																	},
																	{
																		"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17143:34:5",
																		"type": "",
																		"value": "Error: transfer from blacklist a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17120:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17120:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17199:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17207:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17195:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17212:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17188:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17188:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17188:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17101:6:5",
														"type": ""
													}
												],
												"src": "17003:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17277:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17334:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17343:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17346:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17336:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17336:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17336:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17300:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17325:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17307:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17307:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17297:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17297:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17290:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17290:43:5"
															},
															"nodeType": "YulIf",
															"src": "17287:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17270:5:5",
														"type": ""
													}
												],
												"src": "17234:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17405:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17462:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17471:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17474:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17464:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17464:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17464:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17428:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17453:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17435:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17435:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17425:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17425:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17418:43:5"
															},
															"nodeType": "YulIf",
															"src": "17415:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17398:5:5",
														"type": ""
													}
												],
												"src": "17362:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: transfer from blacklist a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x470 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA2179AB0 EQ PUSH2 0x386 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x417C73A7 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x4A49AC4C EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C2 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x9A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x514 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x514 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x532 PUSH2 0x52B PUSH2 0xFC9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x6A6 DUP5 PUSH2 0x5F1 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x6A1 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25BB PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x657 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 PUSH2 0x6E8 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0x77F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x6F9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x796 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B4 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x878 PUSH2 0x872 PUSH2 0xFC9 JUMP JUMPDEST DUP4 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x889 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8A7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9C7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 PUSH1 0x0 PUSH2 0x193E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0xA70 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9C SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1B PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB68 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB82 PUSH2 0xB7C PUSH2 0xFC9 JUMP JUMPDEST DUP4 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH2 0xBBE PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xC6F DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2609 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xBE8 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 PUSH2 0xD1D PUSH2 0xFC9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xD3B SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD67 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD89 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD97 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xDC9 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDF5 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE42 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE25 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xED9 PUSH2 0xFC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEF7 PUSH2 0xA38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF44 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB4 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0x193E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1038 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A8 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x120C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x162F JUMPI PUSH1 0x0 PUSH2 0x13A9 PUSH1 0x64 PUSH2 0x139B PUSH1 0xA DUP6 PUSH2 0x1B8C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1BA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x140F PUSH2 0x13C1 DUP3 DUP5 PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH2 0x14B4 DUP5 DUP7 PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C1 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x153D DUP2 PUSH1 0x1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1621 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1681 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1721 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1792 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1801 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1876 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x172F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18CE DUP2 PUSH1 0x3 SLOAD PUSH2 0x1BB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1ADF DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1784 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B80 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BC6 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDD DUP2 PUSH2 0x258C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF2 DUP2 PUSH2 0x25A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3C JUMPI PUSH2 0x1C3B PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4A DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C5B DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8C DUP7 DUP3 DUP8 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C9D DUP7 DUP3 DUP8 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CAE DUP7 DUP3 DUP8 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDD DUP6 DUP3 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CEE DUP6 DUP3 DUP7 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x22FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2E DUP2 PUSH2 0x21B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3D DUP2 PUSH2 0x21C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4E DUP3 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1D58 DUP2 DUP6 PUSH2 0x208E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D68 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x2300 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D89 PUSH1 0x25 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D94 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAC PUSH1 0x24 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x2360 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCF PUSH1 0x26 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDA DUP3 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF2 PUSH1 0x1F DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFD DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E15 PUSH1 0x20 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E20 DUP3 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x23 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5B PUSH1 0x21 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E66 DUP3 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x22 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x26 DUP4 PUSH2 0x208E JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC0 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ECF DUP2 PUSH2 0x21FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 DUP5 PUSH2 0x1D43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F46 DUP2 PUSH2 0x1D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F66 DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F86 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC6 DUP2 PUSH2 0x1E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2006 DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2026 DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2046 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2062 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B5 DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20EA JUMPI PUSH2 0x20E9 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2100 DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x210B DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x211B JUMPI PUSH2 0x211A PUSH2 0x229D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2131 DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x213C DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218B DUP3 PUSH2 0x21F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2196 DUP4 PUSH2 0x21F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x226E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BF DUP3 PUSH2 0x21D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2227 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x220C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2268 JUMPI PUSH2 0x2267 PUSH2 0x22CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2595 DUP2 PUSH2 0x21B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25AC DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x25B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 0xC5 GASPRICE 0x1E PUSH6 0x53795ECF2EAB LOG1 PUSH26 0x491B208F2EC647458C335609AB9971FD44835DCE64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "3217:9006:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4637:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5809:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4781:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6407:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4347:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3459:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7177:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3932:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8505:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4038:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4931:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;4200:88:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4492:92:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8300:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3544:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7849:251;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5240:246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3486:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3512:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5540:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4637:88:4;4685:13;4714:5;4707:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4637:88;:::o;5809:153::-;5886:4;5899:39;5908:12;:10;:12::i;:::-;5922:7;5931:6;5899:8;:39::i;:::-;5952:4;5945:11;;5809:153;;;;:::o;4781:96::-;4836:7;4859:12;;4852:19;;4781:96;:::o;6407:388::-;6507:4;6552:5;6528:29;;:9;:20;6538:9;6528:20;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;6520:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;6607:36;6617:6;6625:9;6636:6;6607:9;:36::i;:::-;6650:121;6659:6;6667:12;:10;:12::i;:::-;6681:89;6719:6;6681:89;;;;;;;;;;;;;;;;;:11;:19;6693:6;6681:19;;;;;;;;;;;;;;;:33;6701:12;:10;:12::i;:::-;6681:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;6650:8;:121::i;:::-;6785:4;6778:11;;6407:388;;;;;:::o;4347:88::-;4399:5;4420:9;;;;;;;;;;;4413:16;;4347:88;:::o;3459:22::-;;;;;;;;;;;;;:::o;7177:200::-;7257:4;7270:83;7279:12;:10;:12::i;:::-;7293:7;7302:50;7341:10;7302:11;:25;7314:12;:10;:12::i;:::-;7302:25;;;;;;;;;;;;;;;:34;7328:7;7302:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;7270:8;:83::i;:::-;7367:4;7360:11;;7177:200;;;;:::o;3932:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4018:4:4::1;3997:9;:18;4007:7;3997:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3932:96:::0;:::o;8505:110::-;8551:4;8564:27;8570:12;:10;:12::i;:::-;8584:6;8564:5;:27::i;:::-;8605:4;8598:11;;8505:110;;;:::o;4038:102::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4129:5:4::1;4108:9;:18;4118:7;4108:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;4038:102:::0;:::o;4931:115::-;4999:7;5022:9;:18;5032:7;5022:18;;;;;;;;;;;;;;;;5015:25;;4931:115;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4200:88:4:-;4252:7;4275;:5;:7::i;:::-;4268:14;;4200:88;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;4492:92:4:-;4542:13;4571:7;4564:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4492:92;:::o;8300:120::-;8356:4;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8369:27:4::1;8375:12;:10;:12::i;:::-;8389:6;8369:5;:27::i;:::-;8410:4;8403:11;;8300:120:::0;;;:::o;3544:82::-;;;;;;;;;;;;;:::o;7849:251::-;7934:4;7947:129;7956:12;:10;:12::i;:::-;7970:7;7979:96;8018:15;7979:96;;;;;;;;;;;;;;;;;:11;:25;7991:12;:10;:12::i;:::-;7979:25;;;;;;;;;;;;;;;:34;8005:7;7979:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;7947:8;:129::i;:::-;8090:4;8083:11;;7849:251;;;;:::o;5240:246::-;5320:4;5365:5;5341:29;;:9;:20;5351:9;5341:20;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;5333:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:42;5430:12;:10;:12::i;:::-;5444:9;5455:6;5420:9;:42::i;:::-;5476:4;5469:11;;5240:246;;;;:::o;3486:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3512:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5540:139::-;5623:7;5646:11;:18;5658:5;5646:18;;;;;;;;;;;;;;;:27;5665:7;5646:27;;;;;;;;;;;;;;;;5639:34;;5540:139;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;11506:320:4:-;11613:1;11596:19;;:5;:19;;;;11588:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11690:1;11671:21;;:7;:21;;;;11663:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11770:6;11740:11;:18;11752:5;11740:18;;;;;;;;;;;;;;;:27;11759:7;11740:27;;;;;;;;;;;;;;;:36;;;;11804:7;11788:32;;11797:5;11788:32;;;11813:6;11788:32;;;;;;:::i;:::-;;;;;;;;11506:320;;;:::o;9075:832::-;9187:1;9169:20;;:6;:20;;;;9161:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;9267:1;9246:23;;:9;:23;;;;9238:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9336;9358:6;9336:71;;;;;;;;;;;;;;;;;:9;:17;9346:6;9336:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;9316:9;:17;9326:6;9316:17;;;;;;;;;;;;;;;:91;;;;9430:13;;;;;;;;;;;9417:26;;:9;:26;;;9414:379;;9453:17;9473:23;9492:3;9473:14;9484:2;9473:6;:10;;:14;;;;:::i;:::-;:18;;:23;;;;:::i;:::-;9453:43;;9528:47;9553:21;9564:9;9553:6;:10;;:21;;;;:::i;:::-;9528:9;:20;9538:9;9528:20;;;;;;;;;;;;;;;;:24;;:47;;;;:::i;:::-;9505:9;:20;9515:9;9505:20;;;;;;;;;;;;;;;:70;;;;9606:9;9589:50;;9598:6;9589:50;;;9617:21;9628:9;9617:6;:10;;:21;;;;:::i;:::-;9589:50;;;;;;:::i;:::-;;;;;;;;9675:39;9704:9;9675;:24;9685:13;;;;;;;;;;;9675:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;9648:9;:24;9658:13;;;;;;;;;;;9648:24;;;;;;;;;;;;;;;:66;;;;9745:13;;;;;;;;;;;9728:42;;9737:6;9728:42;;;9760:9;9728:42;;;;;;:::i;:::-;;;;;;;;9779:7;;;9414:379;9822:32;9847:6;9822:9;:20;9832:9;9822:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;9799:9;:20;9809:9;9799:20;;;;;;;;;;;;;;;:55;;;;9883:9;9866:35;;9875:6;9866:35;;;9894:6;9866:35;;;;;;:::i;:::-;;;;;;;;9075:832;;;;:::o;4945:231:3:-;5061:7;5117:1;5112;:6;;5120:12;5104:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5158:1;5154;:5;5147:12;;4945:231;;;;;:::o;2741:96::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;10764:330:4:-;10855:1;10836:21;;:7;:21;;;;10828:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10925:68;10948:6;10925:68;;;;;;;;;;;;;;;;;:9;:18;10935:7;10925:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;10904:9;:18;10914:7;10904:18;;;;;;;;;;;;;;;:89;;;;11015:24;11032:6;11015:12;;:16;;:24;;;;:::i;:::-;11000:12;:39;;;;11077:1;11051:37;;11060:7;11051:37;;;11081:6;11051:37;;;;;;:::i;:::-;;;;;;;;10764:330;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;10166:290:4:-;10257:1;10238:21;;:7;:21;;;;10230:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10319:24;10336:6;10319:12;;:16;;:24;;;;:::i;:::-;10304:12;:39;;;;10371:30;10394:6;10371:9;:18;10381:7;10371:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;10350:9;:18;10360:7;10350:18;;;;;;;;;;;;;;;:51;;;;10434:7;10413:37;;10430:1;10413:37;;;10443:6;10413:37;;;;;;:::i;:::-;;;;;;;;10166:290;;:::o;3451:96:3:-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3108:::-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:329::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:119;;;2331:79;;:::i;:::-;2293:119;2451:1;2476:53;2521:7;2512:6;2501:9;2497:22;2476:53;:::i;:::-;2466:63;;2422:117;2217:329;;;;:::o;2552:118::-;2639:24;2657:5;2639:24;:::i;:::-;2634:3;2627:37;2552:118;;:::o;2676:109::-;2757:21;2772:5;2757:21;:::i;:::-;2752:3;2745:34;2676:109;;:::o;2791:364::-;2879:3;2907:39;2940:5;2907:39;:::i;:::-;2962:71;3026:6;3021:3;2962:71;:::i;:::-;2955:78;;3042:52;3087:6;3082:3;3075:4;3068:5;3064:16;3042:52;:::i;:::-;3119:29;3141:6;3119:29;:::i;:::-;3114:3;3110:39;3103:46;;2883:272;2791:364;;;;:::o;3161:366::-;3303:3;3324:67;3388:2;3383:3;3324:67;:::i;:::-;3317:74;;3400:93;3489:3;3400:93;:::i;:::-;3518:2;3513:3;3509:12;3502:19;;3161:366;;;:::o;3533:::-;3675:3;3696:67;3760:2;3755:3;3696:67;:::i;:::-;3689:74;;3772:93;3861:3;3772:93;:::i;:::-;3890:2;3885:3;3881:12;3874:19;;3533:366;;;:::o;3905:::-;4047:3;4068:67;4132:2;4127:3;4068:67;:::i;:::-;4061:74;;4144:93;4233:3;4144:93;:::i;:::-;4262:2;4257:3;4253:12;4246:19;;3905:366;;;:::o;4277:::-;4419:3;4440:67;4504:2;4499:3;4440:67;:::i;:::-;4433:74;;4516:93;4605:3;4516:93;:::i;:::-;4634:2;4629:3;4625:12;4618:19;;4277:366;;;:::o;4649:::-;4791:3;4812:67;4876:2;4871:3;4812:67;:::i;:::-;4805:74;;4888:93;4977:3;4888:93;:::i;:::-;5006:2;5001:3;4997:12;4990:19;;4649:366;;;:::o;5021:::-;5163:3;5184:67;5248:2;5243:3;5184:67;:::i;:::-;5177:74;;5260:93;5349:3;5260:93;:::i;:::-;5378:2;5373:3;5369:12;5362:19;;5021:366;;;:::o;5393:::-;5535:3;5556:67;5620:2;5615:3;5556:67;:::i;:::-;5549:74;;5632:93;5721:3;5632:93;:::i;:::-;5750:2;5745:3;5741:12;5734:19;;5393:366;;;:::o;5765:::-;5907:3;5928:67;5992:2;5987:3;5928:67;:::i;:::-;5921:74;;6004:93;6093:3;6004:93;:::i;:::-;6122:2;6117:3;6113:12;6106:19;;5765:366;;;:::o;6137:::-;6279:3;6300:67;6364:2;6359:3;6300:67;:::i;:::-;6293:74;;6376:93;6465:3;6376:93;:::i;:::-;6494:2;6489:3;6485:12;6478:19;;6137:366;;;:::o;6509:118::-;6596:24;6614:5;6596:24;:::i;:::-;6591:3;6584:37;6509:118;;:::o;6633:112::-;6716:22;6732:5;6716:22;:::i;:::-;6711:3;6704:35;6633:112;;:::o;6751:222::-;6844:4;6882:2;6871:9;6867:18;6859:26;;6895:71;6963:1;6952:9;6948:17;6939:6;6895:71;:::i;:::-;6751:222;;;;:::o;6979:210::-;7066:4;7104:2;7093:9;7089:18;7081:26;;7117:65;7179:1;7168:9;7164:17;7155:6;7117:65;:::i;:::-;6979:210;;;;:::o;7195:313::-;7308:4;7346:2;7335:9;7331:18;7323:26;;7395:9;7389:4;7385:20;7381:1;7370:9;7366:17;7359:47;7423:78;7496:4;7487:6;7423:78;:::i;:::-;7415:86;;7195:313;;;;:::o;7514:419::-;7680:4;7718:2;7707:9;7703:18;7695:26;;7767:9;7761:4;7757:20;7753:1;7742:9;7738:17;7731:47;7795:131;7921:4;7795:131;:::i;:::-;7787:139;;7514:419;;;:::o;7939:::-;8105:4;8143:2;8132:9;8128:18;8120:26;;8192:9;8186:4;8182:20;8178:1;8167:9;8163:17;8156:47;8220:131;8346:4;8220:131;:::i;:::-;8212:139;;7939:419;;;:::o;8364:::-;8530:4;8568:2;8557:9;8553:18;8545:26;;8617:9;8611:4;8607:20;8603:1;8592:9;8588:17;8581:47;8645:131;8771:4;8645:131;:::i;:::-;8637:139;;8364:419;;;:::o;8789:::-;8955:4;8993:2;8982:9;8978:18;8970:26;;9042:9;9036:4;9032:20;9028:1;9017:9;9013:17;9006:47;9070:131;9196:4;9070:131;:::i;:::-;9062:139;;8789:419;;;:::o;9214:::-;9380:4;9418:2;9407:9;9403:18;9395:26;;9467:9;9461:4;9457:20;9453:1;9442:9;9438:17;9431:47;9495:131;9621:4;9495:131;:::i;:::-;9487:139;;9214:419;;;:::o;9639:::-;9805:4;9843:2;9832:9;9828:18;9820:26;;9892:9;9886:4;9882:20;9878:1;9867:9;9863:17;9856:47;9920:131;10046:4;9920:131;:::i;:::-;9912:139;;9639:419;;;:::o;10064:::-;10230:4;10268:2;10257:9;10253:18;10245:26;;10317:9;10311:4;10307:20;10303:1;10292:9;10288:17;10281:47;10345:131;10471:4;10345:131;:::i;:::-;10337:139;;10064:419;;;:::o;10489:::-;10655:4;10693:2;10682:9;10678:18;10670:26;;10742:9;10736:4;10732:20;10728:1;10717:9;10713:17;10706:47;10770:131;10896:4;10770:131;:::i;:::-;10762:139;;10489:419;;;:::o;10914:::-;11080:4;11118:2;11107:9;11103:18;11095:26;;11167:9;11161:4;11157:20;11153:1;11142:9;11138:17;11131:47;11195:131;11321:4;11195:131;:::i;:::-;11187:139;;10914:419;;;:::o;11339:222::-;11432:4;11470:2;11459:9;11455:18;11447:26;;11483:71;11551:1;11540:9;11536:17;11527:6;11483:71;:::i;:::-;11339:222;;;;:::o;11567:214::-;11656:4;11694:2;11683:9;11679:18;11671:26;;11707:67;11771:1;11760:9;11756:17;11747:6;11707:67;:::i;:::-;11567:214;;;;:::o;11868:99::-;11920:6;11954:5;11948:12;11938:22;;11868:99;;;:::o;11973:169::-;12057:11;12091:6;12086:3;12079:19;12131:4;12126:3;12122:14;12107:29;;11973:169;;;;:::o;12148:305::-;12188:3;12207:20;12225:1;12207:20;:::i;:::-;12202:25;;12241:20;12259:1;12241:20;:::i;:::-;12236:25;;12395:1;12327:66;12323:74;12320:1;12317:81;12314:107;;;12401:18;;:::i;:::-;12314:107;12445:1;12442;12438:9;12431:16;;12148:305;;;;:::o;12459:185::-;12499:1;12516:20;12534:1;12516:20;:::i;:::-;12511:25;;12550:20;12568:1;12550:20;:::i;:::-;12545:25;;12589:1;12579:35;;12594:18;;:::i;:::-;12579:35;12636:1;12633;12629:9;12624:14;;12459:185;;;;:::o;12650:348::-;12690:7;12713:20;12731:1;12713:20;:::i;:::-;12708:25;;12747:20;12765:1;12747:20;:::i;:::-;12742:25;;12935:1;12867:66;12863:74;12860:1;12857:81;12852:1;12845:9;12838:17;12834:105;12831:131;;;12942:18;;:::i;:::-;12831:131;12990:1;12987;12983:9;12972:20;;12650:348;;;;:::o;13004:191::-;13044:4;13064:20;13082:1;13064:20;:::i;:::-;13059:25;;13098:20;13116:1;13098:20;:::i;:::-;13093:25;;13137:1;13134;13131:8;13128:34;;;13142:18;;:::i;:::-;13128:34;13187:1;13184;13180:9;13172:17;;13004:191;;;;:::o;13201:96::-;13238:7;13267:24;13285:5;13267:24;:::i;:::-;13256:35;;13201:96;;;:::o;13303:90::-;13337:7;13380:5;13373:13;13366:21;13355:32;;13303:90;;;:::o;13399:126::-;13436:7;13476:42;13469:5;13465:54;13454:65;;13399:126;;;:::o;13531:77::-;13568:7;13597:5;13586:16;;13531:77;;;:::o;13614:86::-;13649:7;13689:4;13682:5;13678:16;13667:27;;13614:86;;;:::o;13706:307::-;13774:1;13784:113;13798:6;13795:1;13792:13;13784:113;;;13883:1;13878:3;13874:11;13868:18;13864:1;13859:3;13855:11;13848:39;13820:2;13817:1;13813:10;13808:15;;13784:113;;;13915:6;13912:1;13909:13;13906:101;;;13995:1;13986:6;13981:3;13977:16;13970:27;13906:101;13755:258;13706:307;;;:::o;14019:320::-;14063:6;14100:1;14094:4;14090:12;14080:22;;14147:1;14141:4;14137:12;14168:18;14158:81;;14224:4;14216:6;14212:17;14202:27;;14158:81;14286:2;14278:6;14275:14;14255:18;14252:38;14249:84;;;14305:18;;:::i;:::-;14249:84;14070:269;14019:320;;;:::o;14345:180::-;14393:77;14390:1;14383:88;14490:4;14487:1;14480:15;14514:4;14511:1;14504:15;14531:180;14579:77;14576:1;14569:88;14676:4;14673:1;14666:15;14700:4;14697:1;14690:15;14717:180;14765:77;14762:1;14755:88;14862:4;14859:1;14852:15;14886:4;14883:1;14876:15;15026:117;15135:1;15132;15125:12;15149:102;15190:6;15241:2;15237:7;15232:2;15225:5;15221:14;15217:28;15207:38;;15149:102;;;:::o;15257:224::-;15397:34;15393:1;15385:6;15381:14;15374:58;15466:7;15461:2;15453:6;15449:15;15442:32;15257:224;:::o;15487:223::-;15627:34;15623:1;15615:6;15611:14;15604:58;15696:6;15691:2;15683:6;15679:15;15672:31;15487:223;:::o;15716:225::-;15856:34;15852:1;15844:6;15840:14;15833:58;15925:8;15920:2;15912:6;15908:15;15901:33;15716:225;:::o;15947:181::-;16087:33;16083:1;16075:6;16071:14;16064:57;15947:181;:::o;16134:182::-;16274:34;16270:1;16262:6;16258:14;16251:58;16134:182;:::o;16322:222::-;16462:34;16458:1;16450:6;16446:14;16439:58;16531:5;16526:2;16518:6;16514:15;16507:30;16322:222;:::o;16550:220::-;16690:34;16686:1;16678:6;16674:14;16667:58;16759:3;16754:2;16746:6;16742:15;16735:28;16550:220;:::o;16776:221::-;16916:34;16912:1;16904:6;16900:14;16893:58;16985:4;16980:2;16972:6;16968:15;16961:29;16776:221;:::o;17003:225::-;17143:34;17139:1;17131:6;17127:14;17120:58;17212:8;17207:2;17199:6;17195:15;17188:33;17003:225;:::o;17234:122::-;17307:24;17325:5;17307:24;:::i;:::-;17300:5;17297:35;17287:63;;17346:1;17343;17336:12;17287:63;17234:122;:::o;17362:::-;17435:24;17453:5;17435:24;:::i;:::-;17428:5;17425:35;17415:63;;17474:1;17471;17464:12;17415:63;17362:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1972200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "2494",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"addToBlackList(address)": "27119",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2974",
								"burn(uint256)": "infinite",
								"decimals()": "2591",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2602",
								"increaseAllowance(address,uint256)": "infinite",
								"managerWallet()": "2647",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2589",
								"removeFromBlackList(address)": "27163",
								"renounceOwnership()": "30397",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30855"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3583,
									"end": 3625,
									"name": "PUSH",
									"source": 4,
									"value": "2C40B38EF349AEA24AA48ED1A6ED3DB3860EFFA3"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3544,
									"end": 3626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3683,
									"end": 3924,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "48616C6F206E6F64650000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3709,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3704,
									"end": 3723,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "48616C6F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3737,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3730,
									"end": 3746,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3765,
									"end": 3767,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3753,
									"end": 3762,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3753,
									"end": 3762,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3753,
									"end": 3767,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3789,
									"end": 3815,
									"name": "PUSH",
									"source": 4,
									"value": "4EE2D6D415B85ACEF8100000000"
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3774,
									"end": 3815,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3774,
									"end": 3815,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3774,
									"end": 3815,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3774,
									"end": 3815,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3846,
									"end": 3858,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3846,
									"end": 3858,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3831,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3832,
									"end": 3842,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3822,
									"end": 3843,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3858,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3858,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3858,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3822,
									"end": 3858,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3893,
									"end": 3903,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3889,
									"end": 3890,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3905,
									"end": 3917,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3905,
									"end": 3917,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3872,
									"end": 3918,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 112,
									"end": 117,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 89,
									"end": 92,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 82,
									"end": 119,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 228,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 247,
									"end": 265,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 341,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 328,
									"end": 345,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 396,
									"end": 403,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 430,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 430,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 430,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 359,
									"end": 436,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 517,
									"end": 521,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 513,
									"end": 525,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 503,
									"end": 525,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 503,
									"end": 525,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 568,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 560,
									"end": 572,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 581,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 647,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 639,
									"end": 645,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 635,
									"end": 652,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 625,
									"end": 652,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 625,
									"end": 652,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 581,
									"end": 662,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 709,
									"end": 711,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 707,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 712,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 678,
									"end": 696,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 675,
									"end": 713,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 672,
									"end": 756,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 672,
									"end": 756,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 672,
									"end": 756,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 493,
									"end": 762,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 442,
									"end": 762,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3217,
									"end": 12223,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c53a1e6553795ecf2eaba179491b208f2ec647458c335609ab9971fd44835dce64736f6c63430008070033",
									".code": [
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "B09F1266"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "D28D8852"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "893D20E8"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "A0712D68"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "A2179AB0"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "32424AA3"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "32424AA3"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "417C73A7"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "4A49AC4C"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 12223,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4698,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4714,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4725,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5890,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5908,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5908,
											"end": 5920,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5908,
											"end": 5920,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5908,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5922,
											"end": 5929,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5931,
											"end": 5937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5899,
											"end": 5938,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5899,
											"end": 5938,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5899,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5945,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5962,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4871,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4859,
											"end": 4871,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4877,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6547,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6528,
											"end": 6548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6528,
											"end": 6557,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6520,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6642,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6659,
											"end": 6665,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6667,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6667,
											"end": 6679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6667,
											"end": 6679,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6667,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6719,
											"end": 6725,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH data",
											"source": 4,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6701,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6714,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6681,
											"end": 6718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6681,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6650,
											"end": 6771,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6650,
											"end": 6771,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6650,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6778,
											"end": 6789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6795,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4413,
											"end": 4429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4413,
											"end": 4429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4435,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7279,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7313,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7314,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7327,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7335,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7302,
											"end": 7340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7302,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7270,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7270,
											"end": 7353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7270,
											"end": 7353,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7270,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7360,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7360,
											"end": 7371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4028,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8551,
											"end": 8555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8570,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 8570,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8570,
											"end": 8582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8570,
											"end": 8582,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 8570,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8564,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8564,
											"end": 8591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8564,
											"end": 8591,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8564,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8598,
											"end": 8609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 8609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8505,
											"end": 8615,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4140,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4275,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4288,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4555,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4584,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8375,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8375,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8369,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8369,
											"end": 8396,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8369,
											"end": 8396,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8369,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8403,
											"end": 8414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8300,
											"end": 8420,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 7938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7947,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7956,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 7977,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH data",
											"source": 4,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 7990,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7991,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7991,
											"end": 8003,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8003,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7991,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8012,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8013,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7979,
											"end": 8017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7979,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7947,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7947,
											"end": 8076,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 8076,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7947,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8083,
											"end": 8094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7849,
											"end": 8100,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5350,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5370,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5333,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5430,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5430,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5430,
											"end": 5442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5430,
											"end": 5442,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5430,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5420,
											"end": 5462,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5462,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5420,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5469,
											"end": 5480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5486,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3531,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5663,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5673,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5679,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11596,
											"end": 11601,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11588,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11671,
											"end": 11678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11671,
											"end": 11692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11663,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11770,
											"end": 11776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11751,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11752,
											"end": 11757,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11759,
											"end": 11766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11776,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11804,
											"end": 11811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11813,
											"end": 11819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11820,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11826,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9161,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9267,
											"end": 9268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9255,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9269,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9238,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9358,
											"end": 9364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH data",
											"source": 4,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 9336,
											"end": 9357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9336,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9325,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9332,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9333,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9407,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9407,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9430,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9417,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9417,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9414,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9414,
											"end": 9793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9492,
											"end": 9495,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9484,
											"end": 9486,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 9473,
											"end": 9479,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 9473,
											"end": 9483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9473,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9473,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9564,
											"end": 9573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9553,
											"end": 9563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9553,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9537,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9528,
											"end": 9552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9525,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9575,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9505,
											"end": 9575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9615,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9628,
											"end": 9637,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9639,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9704,
											"end": 9713,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9684,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9675,
											"end": 9703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9675,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9657,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9658,
											"end": 9671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9672,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9714,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9737,
											"end": 9743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9760,
											"end": 9769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9770,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 9779,
											"end": 9786,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9414,
											"end": 9793,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9414,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9841,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9822,
											"end": 9846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9822,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9808,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9854,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9901,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9907,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10764,
											"end": 11094,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10764,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10836,
											"end": 10843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10836,
											"end": 10857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10828,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10948,
											"end": 10954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH data",
											"source": 4,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10934,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10925,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10913,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10921,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10904,
											"end": 10922,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10993,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11032,
											"end": 11038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11027,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11015,
											"end": 11027,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 11015,
											"end": 11031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11015,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11012,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11000,
											"end": 11039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11039,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11060,
											"end": 11067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10764,
											"end": 11094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10764,
											"end": 11094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10764,
											"end": 11094,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10166,
											"end": 10456,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10166,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10245,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10230,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10336,
											"end": 10342,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10331,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10319,
											"end": 10331,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 10319,
											"end": 10335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10319,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10304,
											"end": 10316,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10304,
											"end": 10343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10304,
											"end": 10343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10304,
											"end": 10343,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10304,
											"end": 10343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10394,
											"end": 10400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10380,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10381,
											"end": 10388,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 10371,
											"end": 10393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10371,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10359,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10367,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10368,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10401,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10434,
											"end": 10441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10413,
											"end": 10450,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10166,
											"end": 10456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10166,
											"end": 10456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10166,
											"end": 10456,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2521,
											"end": 2528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 2657,
											"end": 2662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2634,
											"end": 2637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3383,
											"end": 3386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 3489,
											"end": 3492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 4132,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4127,
											"end": 4130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 4233,
											"end": 4236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 4504,
											"end": 4506,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6279,
											"end": 6282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 6364,
											"end": 6366,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 6300,
											"end": 6367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6300,
											"end": 6367,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 6300,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 6465,
											"end": 6468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 6376,
											"end": 6469,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6469,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 6376,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6503,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6509,
											"end": 6627,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 6509,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 6614,
											"end": 6619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6596,
											"end": 6620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 6620,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 6596,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6509,
											"end": 6627,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6633,
											"end": 6745,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 6633,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 6732,
											"end": 6737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6711,
											"end": 6714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6739,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6745,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6895,
											"end": 6966,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6895,
											"end": 6966,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6895,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6973,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7117,
											"end": 7182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7182,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 7117,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 7189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7385,
											"end": 7405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7423,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 7496,
											"end": 7500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7423,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7423,
											"end": 7501,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7423,
											"end": 7501,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 7423,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7415,
											"end": 7501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7415,
											"end": 7501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7508,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7695,
											"end": 7721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7695,
											"end": 7721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7761,
											"end": 7765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7795,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 7921,
											"end": 7925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7795,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 7795,
											"end": 7926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7795,
											"end": 7926,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 7795,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7933,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8132,
											"end": 8141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8120,
											"end": 8146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8202,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8156,
											"end": 8203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 8220,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 8358,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 8626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8607,
											"end": 8627,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8601,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8581,
											"end": 8628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8645,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 8771,
											"end": 8775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8645,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 8645,
											"end": 8776,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8645,
											"end": 8776,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 8645,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8783,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8955,
											"end": 8959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9040,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9052,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9026,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9006,
											"end": 9053,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9196,
											"end": 9200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 9070,
											"end": 9201,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9070,
											"end": 9201,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9070,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8789,
											"end": 9208,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9418,
											"end": 9420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9421,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9442,
											"end": 9451,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9438,
											"end": 9455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9431,
											"end": 9478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 9621,
											"end": 9625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 9495,
											"end": 9626,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9495,
											"end": 9626,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 9495,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9633,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9805,
											"end": 9809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9832,
											"end": 9841,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 9846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9882,
											"end": 9902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 9879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9856,
											"end": 9903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9920,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10046,
											"end": 10050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9920,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 9920,
											"end": 10051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9920,
											"end": 10051,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 9920,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9912,
											"end": 10051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9912,
											"end": 10051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 10058,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10230,
											"end": 10234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10268,
											"end": 10270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10245,
											"end": 10271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10245,
											"end": 10271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10307,
											"end": 10327,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10288,
											"end": 10305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10345,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10471,
											"end": 10475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10345,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 10345,
											"end": 10476,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10345,
											"end": 10476,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10345,
											"end": 10476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10483,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10693,
											"end": 10695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10682,
											"end": 10691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 10696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 10696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 10751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10726,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10713,
											"end": 10730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10706,
											"end": 10753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 10770,
											"end": 10901,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10770,
											"end": 10901,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 10770,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10489,
											"end": 10908,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11118,
											"end": 11120,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11107,
											"end": 11116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11095,
											"end": 11121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11095,
											"end": 11121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11167,
											"end": 11176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11157,
											"end": 11177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11153,
											"end": 11154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11138,
											"end": 11155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11131,
											"end": 11178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 11321,
											"end": 11325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 11195,
											"end": 11326,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11195,
											"end": 11326,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 11195,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11187,
											"end": 11326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10914,
											"end": 11333,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11432,
											"end": 11436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11470,
											"end": 11472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11483,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11536,
											"end": 11553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11483,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 11483,
											"end": 11554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11483,
											"end": 11554,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 11483,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11656,
											"end": 11660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11683,
											"end": 11692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11679,
											"end": 11697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11671,
											"end": 11697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11671,
											"end": 11697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11707,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11747,
											"end": 11753,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11707,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 11707,
											"end": 11774,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11707,
											"end": 11774,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 11707,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11781,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11920,
											"end": 11926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11954,
											"end": 11959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11948,
											"end": 11960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 11960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 11960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11868,
											"end": 11967,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12091,
											"end": 12097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12086,
											"end": 12089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12131,
											"end": 12135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12126,
											"end": 12129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12122,
											"end": 12136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12107,
											"end": 12136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12107,
											"end": 12136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12142,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12188,
											"end": 12191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 12225,
											"end": 12226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12202,
											"end": 12227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12202,
											"end": 12227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 12259,
											"end": 12260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 12241,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12236,
											"end": 12261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12395,
											"end": 12396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12327,
											"end": 12393,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12323,
											"end": 12397,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12317,
											"end": 12398,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12421,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 12314,
											"end": 12421,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12421,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 12314,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12438,
											"end": 12447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12431,
											"end": 12447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12431,
											"end": 12447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12148,
											"end": 12453,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12568,
											"end": 12569,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12550,
											"end": 12570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12550,
											"end": 12570,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12550,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12545,
											"end": 12570,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12545,
											"end": 12570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12579,
											"end": 12614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 12579,
											"end": 12614,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12579,
											"end": 12614,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 12579,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12636,
											"end": 12637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12633,
											"end": 12634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12629,
											"end": 12638,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12624,
											"end": 12638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12624,
											"end": 12638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12690,
											"end": 12697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12731,
											"end": 12732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12713,
											"end": 12733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12713,
											"end": 12733,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12713,
											"end": 12733,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12713,
											"end": 12733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12708,
											"end": 12733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12708,
											"end": 12733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12747,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12747,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12747,
											"end": 12767,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12747,
											"end": 12767,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 12747,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12742,
											"end": 12767,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12742,
											"end": 12767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12867,
											"end": 12933,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12863,
											"end": 12937,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 12861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12857,
											"end": 12938,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12845,
											"end": 12854,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12838,
											"end": 12855,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12834,
											"end": 12939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12962,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 12831,
											"end": 12962,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 12942,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12942,
											"end": 12960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12942,
											"end": 12960,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 12942,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12962,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 12831,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12990,
											"end": 12991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 12972,
											"end": 12992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12972,
											"end": 12992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12998,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13059,
											"end": 13084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 13116,
											"end": 13117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 13098,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13093,
											"end": 13118,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13093,
											"end": 13118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13137,
											"end": 13138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13134,
											"end": 13135,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13131,
											"end": 13139,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 13128,
											"end": 13162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13162,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 13128,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13184,
											"end": 13185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13180,
											"end": 13189,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13172,
											"end": 13189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13172,
											"end": 13189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13195,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13238,
											"end": 13245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13267,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13285,
											"end": 13290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13267,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 13267,
											"end": 13291,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13267,
											"end": 13291,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13267,
											"end": 13291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13256,
											"end": 13291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13256,
											"end": 13291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13297,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13380,
											"end": 13385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13373,
											"end": 13386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13366,
											"end": 13387,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13303,
											"end": 13393,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13476,
											"end": 13518,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13469,
											"end": 13474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13465,
											"end": 13519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13454,
											"end": 13519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13454,
											"end": 13519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13399,
											"end": 13525,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13568,
											"end": 13575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13597,
											"end": 13602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13586,
											"end": 13602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13586,
											"end": 13602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13531,
											"end": 13608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13649,
											"end": 13656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13693,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 13682,
											"end": 13687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13678,
											"end": 13694,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13667,
											"end": 13694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13667,
											"end": 13694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13774,
											"end": 13775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13798,
											"end": 13804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13792,
											"end": 13805,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13878,
											"end": 13881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 13885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13864,
											"end": 13865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13859,
											"end": 13862,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13855,
											"end": 13866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13813,
											"end": 13823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 13784,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13912,
											"end": 13913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13909,
											"end": 13922,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14007,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 13906,
											"end": 14007,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13995,
											"end": 13996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13986,
											"end": 13992,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13981,
											"end": 13984,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13977,
											"end": 13993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13970,
											"end": 13997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14007,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 13906,
											"end": 14007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13755,
											"end": 14013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13706,
											"end": 14013,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14063,
											"end": 14069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14101,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14094,
											"end": 14098,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14102,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 14080,
											"end": 14102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14080,
											"end": 14102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14141,
											"end": 14145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14137,
											"end": 14149,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14158,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 14158,
											"end": 14239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14224,
											"end": 14228,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 14216,
											"end": 14222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14229,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14202,
											"end": 14229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14202,
											"end": 14229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14158,
											"end": 14239,
											"name": "tag",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 14158,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14286,
											"end": 14288,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14275,
											"end": 14289,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14255,
											"end": 14273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14290,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14249,
											"end": 14333,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14249,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 14249,
											"end": 14333,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14305,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 14305,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 14305,
											"end": 14323,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14305,
											"end": 14323,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 14305,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14249,
											"end": 14333,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 14249,
											"end": 14333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14070,
											"end": 14339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14019,
											"end": 14339,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14345,
											"end": 14525,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 14345,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14393,
											"end": 14470,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14390,
											"end": 14391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14471,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14490,
											"end": 14494,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 14487,
											"end": 14488,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14480,
											"end": 14495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14514,
											"end": 14518,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14511,
											"end": 14512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14504,
											"end": 14519,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14531,
											"end": 14711,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 14531,
											"end": 14711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14579,
											"end": 14656,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14576,
											"end": 14577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14569,
											"end": 14657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 14673,
											"end": 14674,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14666,
											"end": 14681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14700,
											"end": 14704,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14697,
											"end": 14698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14690,
											"end": 14705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14717,
											"end": 14897,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 14717,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14842,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14762,
											"end": 14763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 14859,
											"end": 14860,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14852,
											"end": 14867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14886,
											"end": 14890,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14876,
											"end": 14891,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15026,
											"end": 15143,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 15026,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15135,
											"end": 15136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15132,
											"end": 15133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15125,
											"end": 15137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15190,
											"end": 15196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15241,
											"end": 15243,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 15237,
											"end": 15244,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15234,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15221,
											"end": 15235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15217,
											"end": 15245,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15207,
											"end": 15245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15207,
											"end": 15245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15251,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15257,
											"end": 15481,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 15257,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15397,
											"end": 15431,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 15393,
											"end": 15394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15385,
											"end": 15391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15374,
											"end": 15432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15466,
											"end": 15473,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15461,
											"end": 15463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15453,
											"end": 15459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15449,
											"end": 15464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15442,
											"end": 15474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15257,
											"end": 15481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15257,
											"end": 15481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15487,
											"end": 15710,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 15487,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15627,
											"end": 15661,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 15623,
											"end": 15624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15611,
											"end": 15625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15604,
											"end": 15662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15696,
											"end": 15702,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15691,
											"end": 15693,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15679,
											"end": 15694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15672,
											"end": 15703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15487,
											"end": 15710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15487,
											"end": 15710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15716,
											"end": 15941,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 15716,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15856,
											"end": 15890,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15852,
											"end": 15853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15840,
											"end": 15854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15833,
											"end": 15891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15925,
											"end": 15933,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15920,
											"end": 15922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 15918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15908,
											"end": 15923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15901,
											"end": 15934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15716,
											"end": 15941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15716,
											"end": 15941,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15947,
											"end": 16128,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 15947,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16087,
											"end": 16120,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16083,
											"end": 16084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16071,
											"end": 16085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16064,
											"end": 16121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 16128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 16128,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16134,
											"end": 16316,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 16134,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16274,
											"end": 16308,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16270,
											"end": 16271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16262,
											"end": 16268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16258,
											"end": 16272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16251,
											"end": 16309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16134,
											"end": 16316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16134,
											"end": 16316,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16322,
											"end": 16544,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 16322,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16462,
											"end": 16496,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 16458,
											"end": 16459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16450,
											"end": 16456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16446,
											"end": 16460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16439,
											"end": 16497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16531,
											"end": 16536,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16526,
											"end": 16528,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16518,
											"end": 16524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16514,
											"end": 16529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16507,
											"end": 16537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16322,
											"end": 16544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16322,
											"end": 16544,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16550,
											"end": 16770,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 16550,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16690,
											"end": 16724,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 16686,
											"end": 16687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16678,
											"end": 16684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16674,
											"end": 16688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16667,
											"end": 16725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16759,
											"end": 16762,
											"name": "PUSH",
											"source": 5,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16754,
											"end": 16756,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16746,
											"end": 16752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16742,
											"end": 16757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16735,
											"end": 16763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16550,
											"end": 16770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16550,
											"end": 16770,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16776,
											"end": 16997,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 16776,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16916,
											"end": 16950,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 16912,
											"end": 16913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16904,
											"end": 16910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16900,
											"end": 16914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16893,
											"end": 16951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16985,
											"end": 16989,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16980,
											"end": 16982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16972,
											"end": 16978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16968,
											"end": 16983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16961,
											"end": 16990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16776,
											"end": 16997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16776,
											"end": 16997,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17003,
											"end": 17228,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 17003,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17143,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061"
										},
										{
											"begin": 17139,
											"end": 17140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17127,
											"end": 17141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17120,
											"end": 17178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17212,
											"end": 17220,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17199,
											"end": 17205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17195,
											"end": 17210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17188,
											"end": 17221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17003,
											"end": 17228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17003,
											"end": 17228,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17234,
											"end": 17356,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 17234,
											"end": 17356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17307,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 17325,
											"end": 17330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17307,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 17307,
											"end": 17331,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17307,
											"end": 17331,
											"name": "tag",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 17307,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17300,
											"end": 17305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17297,
											"end": 17332,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17287,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 17287,
											"end": 17350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17346,
											"end": 17347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17343,
											"end": 17344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17336,
											"end": 17348,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17287,
											"end": 17350,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 17287,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17234,
											"end": 17356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17234,
											"end": 17356,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17362,
											"end": 17484,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 17362,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17435,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17435,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 17435,
											"end": 17459,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17435,
											"end": 17459,
											"name": "tag",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 17435,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17428,
											"end": 17433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17425,
											"end": 17460,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 17415,
											"end": 17478,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17474,
											"end": 17475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17464,
											"end": 17476,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17478,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 17415,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17362,
											"end": 17484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17362,
											"end": 17484,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"addToBlackList(address)": "417c73a7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"managerWallet()": "a2179ab0",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeFromBlackList(address)": "4a49ac4c",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NEVS.sol\":\"Halo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"NEVS.sol\":{\"keccak256\":\"0xef63b35780066822ff44d0839c61cac6b48ef2595baf1d00d294aa9e2b9dc75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eee906f5ee2feebe1b4c25293523491996fd503215f29b098daf6c32110e91c\",\"dweb:/ipfs/QmaQwaVjNohVi1Q4yx2FPwhpGEvPdZiByEoaFvKe9FDfDQ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NEVS.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"NEVS.sol\":{\"keccak256\":\"0xef63b35780066822ff44d0839c61cac6b48ef2595baf1d00d294aa9e2b9dc75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eee906f5ee2feebe1b4c25293523491996fd503215f29b098daf6c32110e91c\",\"dweb:/ipfs/QmaQwaVjNohVi1Q4yx2FPwhpGEvPdZiByEoaFvKe9FDfDQ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 167,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								166
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 166,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 161,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 160,
												"id": 163,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 166,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							478
						]
					},
					"id": 479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "SafeMath",
							"nameLocation": "475:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "702:140:3",
										"statements": [
											{
												"id": 199,
												"nodeType": "UncheckedBlock",
												"src": "712:124:3",
												"statements": [
													{
														"assignments": [
															182
														],
														"declarations": [
															{
																"constant": false,
																"id": 182,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 199,
																"src": "736:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 186,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 184,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "752:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 187,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "771:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 194,
														"nodeType": "IfStatement",
														"src": "767:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 193,
															"nodeType": "Return",
															"src": "778:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 196,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "823:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 197,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 198,
														"nodeType": "Return",
														"src": "809:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "642:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "653:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:3"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "687:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:3"
									},
									"scope": 478,
									"src": "626:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1064:113:3",
										"statements": [
											{
												"id": 227,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1102:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 214,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "1106:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 220,
														"nodeType": "IfStatement",
														"src": "1098:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 212,
															"id": 219,
															"nodeType": "Return",
															"src": "1109:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 222,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "1154:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 223,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 206,
																		"src": "1158:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 225,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 212,
														"id": 226,
														"nodeType": "Return",
														"src": "1140:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1004:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1015:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:3"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1049:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1055:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:3"
									},
									"scope": 478,
									"src": "988:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1401:417:3",
										"statements": [
											{
												"id": 269,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1669:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 248,
														"nodeType": "IfStatement",
														"src": "1665:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 240,
															"id": 247,
															"nodeType": "Return",
															"src": "1677:16:3"
														}
													},
													{
														"assignments": [
															250
														],
														"declarations": [
															{
																"constant": false,
																"id": 250,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 269,
																"src": "1707:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 249,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 254,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1719:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 252,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1723:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 255,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1742:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 256,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "1746:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1751:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 264,
														"nodeType": "IfStatement",
														"src": "1738:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 240,
															"id": 263,
															"nodeType": "Return",
															"src": "1754:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 266,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1799:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 240,
														"id": 268,
														"nodeType": "Return",
														"src": "1785:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1341:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1352:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1386:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1392:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:3"
									},
									"scope": 478,
									"src": "1325:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2043:114:3",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2081:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "2077:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 289,
															"nodeType": "Return",
															"src": "2089:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 292,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "2134:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 293,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 282,
														"id": 296,
														"nodeType": "Return",
														"src": "2120:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1983:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1994:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2028:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2034:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 478,
									"src": "1967:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2392:114:3",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "2430:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2426:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 310,
															"id": 317,
															"nodeType": "Return",
															"src": "2438:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2483:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 321,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "2487:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 310,
														"id": 324,
														"nodeType": "Return",
														"src": "2469:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2383:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:3"
									},
									"scope": 478,
									"src": "2316:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2808:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2825:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 338,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2829:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 340,
												"nodeType": "Return",
												"src": "2818:12:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2754:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2765:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2799:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:3"
									},
									"scope": 478,
									"src": "2741:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3175:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 352,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3192:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 353,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3196:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "3185:12:3"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3121:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3132:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3166:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:3"
									},
									"scope": 478,
									"src": "3108:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3518:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 367,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "3535:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 368,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "3539:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 370,
												"nodeType": "Return",
												"src": "3528:12:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3464:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3475:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3509:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:3"
									},
									"scope": 478,
									"src": "3451:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3903:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3920:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 383,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "3924:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 381,
												"id": 385,
												"nodeType": "Return",
												"src": "3913:12:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3849:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3860:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3894:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:3"
									},
									"scope": 478,
									"src": "3836:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "4452:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 397,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "4469:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 398,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4473:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 400,
												"nodeType": "Return",
												"src": "4462:12:3"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4398:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4409:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4443:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:3"
									},
									"scope": 478,
									"src": "4385:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "5070:106:3",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "5112:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "5117:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 418,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5120:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 414,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 421,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5154:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 422,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "5158:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 413,
														"id": 424,
														"nodeType": "Return",
														"src": "5147:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4967:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4986:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5005:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5061:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:3"
									},
									"scope": 478,
									"src": "4945:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "5785:105:3",
										"statements": [
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "5827:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 443,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5834:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5868:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "5872:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 438,
														"id": 449,
														"nodeType": "Return",
														"src": "5861:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5682:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5701:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5720:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5776:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:3"
									},
									"scope": 478,
									"src": "5660:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "6661:105:3",
										"statements": [
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 465,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6703:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 468,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6710:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 464,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 470,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "6744:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 472,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "6748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 463,
														"id": 474,
														"nodeType": "Return",
														"src": "6737:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6558:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6577:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6596:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6652:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:3"
									},
									"scope": 478,
									"src": "6536:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 479,
							"src": "467:6301:3",
							"usedErrors": []
						}
					],
					"src": "92:6677:3"
				},
				"id": 3
			},
			"NEVS.sol": {
				"ast": {
					"absolutePath": "NEVS.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"Halo": [
							1247
						],
						"IBEP20": [
							582
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeMath": [
							478
						]
					},
					"id": 1248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 105,
							"src": "62:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 145,
							"src": "116:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 479,
							"src": "180:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IBEP20",
							"nameLocation": "251:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "263:64:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "340:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "377:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:9:4"
									},
									"scope": 582,
									"src": "331:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "392:49:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "454:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "488:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 492,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:7:4"
									},
									"scope": 582,
									"src": "445:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "501:47:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "561:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "593:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "593:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:15:4"
									},
									"scope": 582,
									"src": "552:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "614:43:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "670:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "700:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "700:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:15:4"
									},
									"scope": 582,
									"src": "661:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "721:50:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "784:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:2:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "818:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:9:4"
									},
									"scope": 582,
									"src": "775:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "833:70:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "916:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "934:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "926:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:17:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "966:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:9:4"
									},
									"scope": 582,
									"src": "907:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "981:203:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1197:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1214:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1206:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1233:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1225:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:35:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1259:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1259:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:6:4"
									},
									"scope": 582,
									"src": "1188:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1271:258:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1542:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1560:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1552:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:33:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1608:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:9:4"
									},
									"scope": 582,
									"src": "1533:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "1623:629:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2265:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2281:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2273:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2298:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2290:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:33:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2324:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:6:4"
									},
									"scope": 582,
									"src": "2256:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "2336:288:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2637:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2658:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2650:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2674:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2666:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:51:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2719:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2719:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:6:4"
									},
									"scope": 582,
									"src": "2628:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "2731:153:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 572,
									"name": "Transfer",
									"nameLocation": "2894:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2903:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2925:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2953:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2945:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:57:4"
									},
									"src": "2888:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "2966:145:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 581,
									"name": "Approval",
									"nameLocation": "3121:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3146:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3130:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3153:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3186:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3178:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:63:4"
									},
									"src": "3115:78:4"
								}
							],
							"scope": 1248,
							"src": "241:2955:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 583,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "3234:7:4"
									},
									"id": 584,
									"nodeType": "InheritanceSpecifier",
									"src": "3234:7:4"
								},
								{
									"baseName": {
										"id": 585,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "3243:6:4"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "3243:6:4"
								},
								{
									"baseName": {
										"id": 587,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "3251:7:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "3251:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247,
								104,
								582,
								166
							],
							"name": "Halo",
							"nameLocation": "3226:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 478,
										"src": "3270:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "3264:27:4",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3283:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 595,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "3334:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3297:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 594,
										"keyType": {
											"id": 592,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3306:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3297:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 593,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3317:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 601,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "3408:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3350:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 600,
										"keyType": {
											"id": 596,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3359:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3350:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 599,
											"keyType": {
												"id": 597,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3379:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3370:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 598,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3390:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "3442:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3426:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3426:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 605,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "3472:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3459:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 604,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3459:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 607,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3500:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3486:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 606,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3486:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 609,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3526:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3512:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 608,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3512:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2179ab0",
									"id": 615,
									"mutability": "mutable",
									"name": "managerWallet",
									"nameLocation": "3559:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3544:82:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 610,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3544:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307832633430623338456633343961656132344141343865443161366544334442333836304566464133",
												"id": 613,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3583:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 612,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "3575:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 611,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3575:8:4",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3575:51:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3667:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3633:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 618,
										"keyType": {
											"id": 616,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3642:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3633:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 617,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3653:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3697:227:4",
										"statements": [
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 622,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "3704:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "48616c6f206e6f6465",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e2bcc20e8d11b650a492aec29a516fc8924d578c125fe3893987a81550d989ad",
															"typeString": "literal_string \"Halo node\""
														},
														"value": "Halo node"
													},
													"src": "3704:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "3704:19:4"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 626,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3730:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "48616c6f",
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3740:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3ebdac13a80ed72191914a3e5ac0a9b1138bf601e8ce22bc1b75c62fc1f90f15",
															"typeString": "literal_string \"Halo\""
														},
														"value": "Halo"
													},
													"src": "3730:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "3730:16:4"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 630,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "3753:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3765:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3753:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "3753:14:4"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3774:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030303030303030",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3789:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"value": "100000000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3807:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3813:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3807:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3789:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														}
													},
													"src": "3774:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "3774:41:4"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 642,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3822:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 645,
														"indexExpression": {
															"expression": {
																"id": 643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3832:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3832:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3822:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 646,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3846:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3822:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "3822:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3889:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3881:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3881:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3881:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3893:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3893:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3905:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "3872:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3872:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "EmitStatement",
												"src": "3867:51:4"
											}
										]
									},
									"id": 660,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3694:2:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3697:0:4"
									},
									"scope": 1247,
									"src": "3683:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3990:38:4",
										"statements": [
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 667,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3997:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 669,
														"indexExpression": {
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4007:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3997:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4018:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3997:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3997:25:4"
											}
										]
									},
									"functionSelector": "417c73a7",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3980:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3980:9:4"
										}
									],
									"name": "addToBlackList",
									"nameLocation": "3941:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3964:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3956:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3990:0:4"
									},
									"scope": 1247,
									"src": "3932:96:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "4101:39:4",
										"statements": [
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 681,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4108:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 683,
														"indexExpression": {
															"id": 682,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "4118:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4108:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4129:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4108:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "4108:26:4"
											}
										]
									},
									"functionSelector": "4a49ac4c",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 678,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4091:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4091:9:4"
										}
									],
									"name": "removeFromBlackList",
									"nameLocation": "4047:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4075:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4067:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:17:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4101:0:4"
									},
									"scope": 1247,
									"src": "4038:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										513
									],
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "4261:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "4275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:7:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 694,
												"id": 697,
												"nodeType": "Return",
												"src": "4268:14:4"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "4146:50:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "4209:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 691,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4229:8:4"
									},
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4217:2:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4252:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:9:4"
									},
									"scope": 1247,
									"src": "4200:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										495
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "4406:29:4",
										"statements": [
											{
												"expression": {
													"id": 706,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "4420:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 705,
												"id": 707,
												"nodeType": "Return",
												"src": "4413:16:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "4294:49:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4356:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4376:8:4"
									},
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4364:2:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "4399:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4399:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:7:4"
									},
									"scope": 1247,
									"src": "4347:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										501
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "4557:27:4",
										"statements": [
											{
												"expression": {
													"id": 716,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "4571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 715,
												"id": 717,
												"nodeType": "Return",
												"src": "4564:14:4"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "4441:47:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4501:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4519:8:4"
									},
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4507:2:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4542:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4542:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4541:15:4"
									},
									"scope": 1247,
									"src": "4492:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										507
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4700:25:4",
										"statements": [
											{
												"expression": {
													"id": 726,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 609,
													"src": "4714:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 725,
												"id": 727,
												"nodeType": "Return",
												"src": "4707:12:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4590:43:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4646:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4662:8:4"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4650:2:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4685:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4685:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4684:15:4"
									},
									"scope": 1247,
									"src": "4637:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "4845:32:4",
										"statements": [
											{
												"expression": {
													"id": 736,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 603,
													"src": "4859:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 737,
												"nodeType": "Return",
												"src": "4852:19:4"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4731:46:4",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4790:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4813:8:4"
									},
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4801:2:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "4836:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:9:4"
									},
									"scope": 1247,
									"src": "4781:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "5008:38:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 748,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5022:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 750,
													"indexExpression": {
														"id": 749,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "5032:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5022:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 751,
												"nodeType": "Return",
												"src": "5015:25:4"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "4883:44:4",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4940:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4976:8:4"
									},
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4958:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4950:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4949:17:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4999:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:9:4"
									},
									"scope": 1247,
									"src": "4931:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										531
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "5326:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 765,
																	"name": "blackList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5341:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 767,
																"indexExpression": {
																	"id": 766,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "5351:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5341:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5365:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "5341:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061646472657373",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5372:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															},
															"value": "Error: transfer from blacklist address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5333:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5333:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "5333:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 774,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5430:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5430:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "5444:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "5455:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "5420:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "5420:42:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5476:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 763,
												"id": 781,
												"nodeType": "Return",
												"src": "5469:11:4"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "5052:184:4",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5249:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5302:8:4"
									},
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5266:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5258:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5285:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5277:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:35:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5320:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5320:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5319:6:4"
									},
									"scope": 1247,
									"src": "5240:246:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "5632:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 794,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "5646:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5658:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5646:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 798,
													"indexExpression": {
														"id": 797,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5665:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5646:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 799,
												"nodeType": "Return",
												"src": "5639:34:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "5492:44:4",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5549:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5600:8:4"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5567:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5559:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5582:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5574:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5558:32:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5622:9:4"
									},
									"scope": 1247,
									"src": "5540:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										551
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "5892:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 813,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5908:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5908:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5931:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5899:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "5899:39:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5952:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 811,
												"id": 820,
												"nodeType": "Return",
												"src": "5945:11:4"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "5685:120:4",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5818:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 808,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5868:8:4"
									},
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5834:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5826:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5851:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5843:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5843:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5825:33:4"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5886:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5886:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:6:4"
									},
									"scope": 1247,
									"src": "5809:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "6513:282:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 836,
																	"name": "blackList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6528:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 838,
																"indexExpression": {
																	"id": 837,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "6538:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6528:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6552:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6528:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061646472657373",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6559:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															},
															"value": "Error: transfer from blacklist address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6520:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "6520:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6617:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6625:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6636:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6607:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6607:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "6607:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6659:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 852,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "6667:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6667:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "6719:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6727:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 854,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6681:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 856,
																		"indexExpression": {
																			"id": 855,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "6693:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6681:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 859,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 857,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "6701:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6701:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6681:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "6681:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6681:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "6650:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6650:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "6650:121:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6785:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 834,
												"id": 867,
												"nodeType": "Return",
												"src": "6778:11:4"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "5968:435:4",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6416:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 831,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6489:8:4"
									},
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6437:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6429:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6453:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6445:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6445:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6472:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6464:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6428:51:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6507:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6507:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6506:6:4"
									},
									"scope": 1247,
									"src": "6407:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "7263:114:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 880,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "7279:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7279:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7293:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "7341:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 883,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7302:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 886,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 884,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "7314:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7314:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7302:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 888,
																	"indexExpression": {
																		"id": 887,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "7328:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7302:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 342,
																"src": "7302:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7302:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7270:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7270:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "7270:83:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7367:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 878,
												"id": 895,
												"nodeType": "Return",
												"src": "7360:11:4"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "6801:372:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7186:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7212:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7204:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7229:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7221:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7203:37:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7256:6:4"
									},
									"scope": 1247,
									"src": "7177:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "7940:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 908,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "7956:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7956:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "7970:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 918,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "8018:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8035:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 911,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7979:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 914,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 912,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "7991:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7991:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7979:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 916,
																	"indexExpression": {
																		"id": 915,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "8005:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7979:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "7979:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7979:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7947:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7947:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "7947:129:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8090:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 906,
												"id": 924,
												"nodeType": "Return",
												"src": "8083:11:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "7383:462:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7858:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7901:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7893:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7875:42:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7934:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7934:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7933:6:4"
									},
									"scope": 1247,
									"src": "7849:251:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "8362:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 937,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "8375:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8375:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "8389:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "8369:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8369:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "8369:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8410:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 935,
												"id": 943,
												"nodeType": "Return",
												"src": "8403:11:4"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "8106:190:4",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 931,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8337:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8337:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "8309:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8322:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8313:16:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8356:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8356:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8355:6:4"
									},
									"scope": 1247,
									"src": "8300:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "8557:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 954,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "8570:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8570:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "8584:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "8564:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8564:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "8564:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8605:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 952,
												"id": 960,
												"nodeType": "Return",
												"src": "8598:11:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "8426:75:4",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8514:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8527:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8519:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8518:16:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8551:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8551:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8550:6:4"
									},
									"scope": 1247,
									"src": "8505:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "9154:753:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "9169:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9187:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9179:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9179:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9179:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9169:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9191:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9161:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9161:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "9161:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "9246:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9267:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9259:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 984,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9259:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9259:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9246:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9271:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9238:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9238:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "9238:71:4"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 992,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9316:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 994,
														"indexExpression": {
															"id": 993,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9326:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 999,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "9358:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9366:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 995,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "9336:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 997,
																"indexExpression": {
																	"id": 996,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "9346:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9336:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 427,
															"src": "9336:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9336:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9316:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "9316:91:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "9417:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1005,
														"name": "managerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9430:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9417:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "9414:379:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "9444:349:4",
													"statements": [
														{
															"assignments": [
																1008
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1008,
																	"mutability": "mutable",
																	"name": "taxAmount",
																	"nameLocation": "9461:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1058,
																	"src": "9453:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1007,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9453:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1016,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9492:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9484:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"expression": {
																				"id": 1009,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "9473:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 372,
																			"src": "9473:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9473:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 387,
																	"src": "9473:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9473:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9453:43:4"
														},
														{
															"expression": {
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1017,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "9505:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1019,
																	"indexExpression": {
																		"id": 1018,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "9515:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9505:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1026,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "9564:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1024,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "9553:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 357,
																				"src": "9553:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9553:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1020,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 595,
																				"src": "9528:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1022,
																			"indexExpression": {
																				"id": 1021,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "9538:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9528:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "9528:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9528:47:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9505:70:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1030,
															"nodeType": "ExpressionStatement",
															"src": "9505:70:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1032,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9598:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1033,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "9606:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1036,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "9628:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1034,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "9617:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 357,
																			"src": "9617:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9617:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1031,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "9589:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9589:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "EmitStatement",
															"src": "9584:55:4"
														},
														{
															"expression": {
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1040,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "9648:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1042,
																	"indexExpression": {
																		"id": 1041,
																		"name": "managerWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "9658:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9648:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1047,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "9704:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1043,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 595,
																				"src": "9675:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1045,
																			"indexExpression": {
																				"id": 1044,
																				"name": "managerWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9685:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9675:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "9675:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9675:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9648:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1050,
															"nodeType": "ExpressionStatement",
															"src": "9648:66:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1052,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9737:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "managerWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "9745:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1054,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "9760:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1051,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "9728:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9728:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1056,
															"nodeType": "EmitStatement",
															"src": "9723:47:4"
														},
														{
															"functionReturnParameters": 971,
															"id": 1057,
															"nodeType": "Return",
															"src": "9779:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1060,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9799:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1062,
														"indexExpression": {
															"id": 1061,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9809:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9799:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1067,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "9847:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1063,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "9822:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1065,
																"indexExpression": {
																	"id": 1064,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "9832:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9822:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "9822:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9799:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "9799:55:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9875:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9883:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "9894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "9866:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9866:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "EmitStatement",
												"src": "9861:40:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "8621:450:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "9084:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9102:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9094:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9118:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9110:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9137:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9129:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9093:51:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9154:0:4"
									},
									"scope": 1247,
									"src": "9075:832:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "10223:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "10238:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10257:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10249:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10238:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10261:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10230:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10230:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "10230:65:4"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1096,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "10304:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1099,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "10336:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1097,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "10319:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "10319:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10319:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10304:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "10304:39:4"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1103,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10350:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1105,
														"indexExpression": {
															"id": 1104,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10360:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10350:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1110,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "10394:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1106,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "10371:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1108,
																"indexExpression": {
																	"id": 1107,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "10381:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10371:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "10371:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10371:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10350:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "10350:51:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10430:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10422:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10422:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10422:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10434:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "10443:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10413:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10413:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "10408:42:4"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "9911:251:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10175:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10189:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "10181:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10181:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10206:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "10198:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10180:33:4"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:4"
									},
									"scope": 1247,
									"src": "10166:290:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "10821:273:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "10836:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10855:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10847:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10847:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10847:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10836:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10859:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10828:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "10828:67:4"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1142,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10904:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "10914:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10904:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1149,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10948:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10956:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1145,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "10925:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1147,
																"indexExpression": {
																	"id": 1146,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "10935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10925:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 427,
															"src": "10925:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10925:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10904:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "10904:89:4"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "11000:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "11032:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1155,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "11015:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 357,
															"src": "11015:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11015:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11000:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "11000:39:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11060:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11069:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1163,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11069:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11069:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "11081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "11051:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11051:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "11046:42:4"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "10462:298:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10773:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10787:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "10779:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10804:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "10796:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10778:33:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10821:0:4"
									},
									"scope": 1247,
									"src": "10764:330:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "11581:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "11596:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11613:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1183,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11605:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11605:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11596:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11617:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11588:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11588:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "11588:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "11671:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11690:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11682:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11682:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11682:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11671:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11694:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11663:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11663:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "11663:68:4"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1201,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "11740:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1204,
															"indexExpression": {
																"id": 1202,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "11752:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11740:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"id": 1203,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "11759:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11740:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1206,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11770:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11740:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "11740:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1210,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "11797:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "11804:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11813:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "11788:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11788:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "11783:37:4"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "11100:402:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11515:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11524:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11547:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11539:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11539:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11564:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11523:48:4"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11581:0:4"
									},
									"scope": 1247,
									"src": "11506:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "12059:161:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "12066:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12066:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "12066:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1231,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "12113:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12113:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1240,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "12166:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12174:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1233,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "12127:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1235,
																		"indexExpression": {
																			"id": 1234,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12139:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12127:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1238,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "12148:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12148:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12127:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "12127:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12127:86:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "12095:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12095:119:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "12095:119:4"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "11832:162:4",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "12007:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12025:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12017:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12017:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12042:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12034:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12016:33:4"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12059:0:4"
									},
									"scope": 1247,
									"src": "11998:222:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1248,
							"src": "3217:9006:4",
							"usedErrors": []
						}
					],
					"src": "35:12188:4"
				},
				"id": 4
			}
		}
	}
}