{
	"id": "c3e0a5029e3ac8b621f4a24f3e7920d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"HaloNode.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// Halo Node  \r\ncontract HaloNode is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  \r\n\r\n  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3);\r\n\r\n  mapping (address => bool) private blackList;\r\n\r\n  constructor() {\r\n    _name = \"Halo node\";\r\n    _symbol = \"Halo\";\r\n    _decimals = 18;\r\n    _totalSupply = 100000000000000 * 10 ** 18;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n  \r\n  function addToBlackList(address account) public onlyOwner {\r\n    blackList[account] = true;\r\n  }\r\n    \r\n  function removeFromBlackList(address account) public onlyOwner {\r\n    blackList[account] = false;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external override view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external override view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    require(blackList[recipient] == false, \"Error: transfer from blacklist address\");\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    require(blackList[recipient] == false, \"Error: transfer from blacklist address\");\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    if(recipient != managerWallet){\r\n      uint256 taxAmount = amount.mul(10).div(100);\r\n      _balances[recipient] = _balances[recipient].add(amount.sub(taxAmount));\r\n      emit Transfer(sender, recipient, amount.sub(taxAmount));\r\n      _balances[managerWallet] = _balances[managerWallet].add(taxAmount);\r\n      emit Transfer(sender, managerWallet, taxAmount);\r\n      return;\r\n    }\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209156e4c911a3d84567b10d7edbaab37ccabc2bb57882642d6802a67259463b1e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209156e4c911a3d84567b10d7edbaab37ccabc2bb57882642d6802a67259463b1e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 JUMP 0xE4 0xC9 GT LOG3 0xD8 GASLIMIT PUSH8 0xB10D7EDBAAB37CCA 0xBC 0x2B 0xB5 PUSH25 0x82642D6802A67259463B1E64736F6C63430008070033000000 ",
							"sourceMap": "467:6301:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209156e4c911a3d84567b10d7edbaab37ccabc2bb57882642d6802a67259463b1e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 JUMP 0xE4 0xC9 GT LOG3 0xD8 GASLIMIT PUSH8 0xB10D7EDBAAB37CCA 0xBC 0x2B 0xB5 PUSH25 0x82642D6802A67259463B1E64736F6C63430008070033000000 ",
							"sourceMap": "467:6301:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209156e4c911a3d84567b10d7edbaab37ccabc2bb57882642d6802a67259463b1e64736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HaloNode.sol": {
				"HaloNode": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "managerWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlackList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HaloNode.sol\":3216:12226  contract HaloNode is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"HaloNode.sol\":3547:3629  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"HaloNode.sol\":3586:3628  0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3 */\n  0x2c40b38ef349aea24aa48ed1a6ed3db3860effa3\n    /* \"HaloNode.sol\":3547:3629  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n  or\n  swap1\n  sstore\n    /* \"HaloNode.sol\":3686:3927  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"HaloNode.sol\":3707:3726  _name = \"Halo node\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x09\n  dup1\n  dup3\n  mstore\n  shl(0xb8, 0x48616c6f206e6f6465)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"HaloNode.sol\":3707:3712  _name */\n  0x06\n  swap2\n    /* \"HaloNode.sol\":3707:3726  _name = \"Halo node\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"HaloNode.sol\":3733:3749  _symbol = \"Halo\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x48616c6f)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"HaloNode.sol\":3733:3740  _symbol */\n  0x05\n  swap2\n    /* \"HaloNode.sol\":3733:3749  _symbol = \"Halo\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"HaloNode.sol\":3756:3765  _decimals */\n  0x04\n    /* \"HaloNode.sol\":3756:3770  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"HaloNode.sol\":3768:3770  18 */\n  0x12\n    /* \"HaloNode.sol\":3756:3770  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"HaloNode.sol\":3792:3818  100000000000000 * 10 ** 18 */\n  0x04ee2d6d415b85acef8100000000\n    /* \"HaloNode.sol\":3777:3789  _totalSupply */\n  0x03\n    /* \"HaloNode.sol\":3777:3818  _totalSupply = 100000000000000 * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n    /* \"HaloNode.sol\":3835:3845  msg.sender */\n  caller\n    /* \"HaloNode.sol\":3756:3765  _decimals */\n  0x00\n    /* \"HaloNode.sol\":3825:3846  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"HaloNode.sol\":3756:3770  _decimals = 18 */\n  0x01\n    /* \"HaloNode.sol\":3825:3846  _balances[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"HaloNode.sol\":3825:3861  _balances[msg.sender] = _totalSupply */\n  dup5\n  swap1\n  sstore\n    /* \"HaloNode.sol\":3875:3921  Transfer(address(0), msg.sender, _totalSupply) */\n  mload\n    /* \"HaloNode.sol\":3835:3845  msg.sender */\n  swap2\n  swap3\n    /* \"HaloNode.sol\":3756:3765  _decimals */\n  swap1\n  swap2\n    /* \"HaloNode.sol\":3875:3921  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_13\n  swap2\n    /* \"#utility.yul\":160:185   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":148:150   */\n  0x20\n    /* \"#utility.yul\":133:151   */\n  add\n  swap1\n    /* \"#utility.yul\":14:191   */\n  jump\n    /* \"HaloNode.sol\":3875:3921  Transfer(address(0), msg.sender, _totalSupply) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"HaloNode.sol\":3216:12226  contract HaloNode is Context, IBEP20, Ownable {\r... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"HaloNode.sol\":3216:12226  contract HaloNode is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":196:576   */\ntag_19:\n    /* \"#utility.yul\":275:276   */\n  0x01\n    /* \"#utility.yul\":271:283   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":318:330   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":339:400   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":393:397   */\n  0x7f\n    /* \"#utility.yul\":385:391   */\n  dup3\n    /* \"#utility.yul\":381:398   */\n  and\n    /* \"#utility.yul\":371:398   */\n  swap2\n  pop\n    /* \"#utility.yul\":339:400   */\ntag_32:\n    /* \"#utility.yul\":446:448   */\n  0x20\n    /* \"#utility.yul\":438:444   */\n  dup3\n    /* \"#utility.yul\":435:449   */\n  lt\n    /* \"#utility.yul\":415:433   */\n  dup2\n    /* \"#utility.yul\":412:450   */\n  eq\n    /* \"#utility.yul\":409:570   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":492:502   */\n  0x4e487b71\n    /* \"#utility.yul\":487:490   */\n  0xe0\n    /* \"#utility.yul\":483:503   */\n  shl\n    /* \"#utility.yul\":480:481   */\n  0x00\n    /* \"#utility.yul\":473:504   */\n  mstore\n    /* \"#utility.yul\":527:531   */\n  0x22\n    /* \"#utility.yul\":524:525   */\n  0x04\n    /* \"#utility.yul\":517:532   */\n  mstore\n    /* \"#utility.yul\":555:559   */\n  0x24\n    /* \"#utility.yul\":552:553   */\n  0x00\n    /* \"#utility.yul\":545:560   */\n  revert\n    /* \"#utility.yul\":409:570   */\ntag_33:\n  pop\n    /* \"#utility.yul\":196:576   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_29:\n    /* \"HaloNode.sol\":3216:12226  contract HaloNode is Context, IBEP20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HaloNode.sol\":3216:12226  contract HaloNode is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa2179ab0\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x32424aa3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x417c73a7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4a49ac4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"HaloNode.sol\":4640:4728  function name() external override view returns (string memory) {\r... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HaloNode.sol\":5812:5965  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1798:1812   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1791:1813   */\n      iszero\n        /* \"#utility.yul\":1773:1814   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1746:1764   */\n      add\n        /* \"HaloNode.sol\":5812:5965  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      tag_31\n        /* \"#utility.yul\":1633:1820   */\n      jump\n        /* \"HaloNode.sol\":4784:4880  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n        /* \"HaloNode.sol\":4862:4874  _totalSupply */\n      sload(0x03)\n        /* \"HaloNode.sol\":4784:4880  function totalSupply() external override view returns (uint256) {\r... */\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":6128:6153   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6101:6119   */\n      add\n        /* \"HaloNode.sol\":4784:4880  function totalSupply() external override view returns (uint256) {\r... */\n      tag_31\n        /* \"#utility.yul\":5982:6159   */\n      jump\n        /* \"HaloNode.sol\":6410:6798  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_33\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"HaloNode.sol\":4350:4438  function decimals() external override view returns (uint8) {\r... */\n    tag_7:\n        /* \"HaloNode.sol\":4423:4432  _decimals */\n      and(0xff, sload(0x04))\n        /* \"HaloNode.sol\":4350:4438  function decimals() external override view returns (uint8) {\r... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":6336:6340   */\n      0xff\n        /* \"#utility.yul\":6324:6341   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6306:6342   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6294:6296   */\n      0x20\n        /* \"#utility.yul\":6279:6297   */\n      add\n        /* \"HaloNode.sol\":4350:4438  function decimals() external override view returns (uint8) {\r... */\n      tag_31\n        /* \"#utility.yul\":6164:6348   */\n      jump\n        /* \"HaloNode.sol\":3462:3484  uint8 public _decimals */\n    tag_8:\n      sload(0x04)\n      tag_48\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"HaloNode.sol\":7180:7380  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_33\n      tag_56\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"HaloNode.sol\":3935:4031  function addToBlackList(address account) public onlyOwner {\r... */\n    tag_10:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"HaloNode.sol\":8508:8618  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_11:\n      tag_33\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"HaloNode.sol\":4041:4143  function removeFromBlackList(address account) public onlyOwner {\r... */\n    tag_12:\n      tag_59\n      tag_69\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"HaloNode.sol\":4934:5049  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_13:\n      tag_39\n      tag_72\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":5025:5043  _balances[account] */\n      and\n        /* \"HaloNode.sol\":5002:5009  uint256 */\n      0x00\n        /* \"HaloNode.sol\":5025:5043  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":5025:5034  _balances */\n      0x01\n        /* \"HaloNode.sol\":5025:5043  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"HaloNode.sol\":4934:5049  function balanceOf(address account) external override view returns (uint256) {\r... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_59\n      tag_76\n      jump\t// in\n        /* \"HaloNode.sol\":4203:4291  function getOwner() external override view returns (address) {\r... */\n    tag_15:\n        /* \"HaloNode.sol\":4255:4262  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"HaloNode.sol\":4203:4291  function getOwner() external override view returns (address) {\r... */\n    tag_77:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1589:1621   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1571:1622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"HaloNode.sol\":4203:4291  function getOwner() external override view returns (address) {\r... */\n      tag_31\n        /* \"#utility.yul\":1425:1628   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_77)\n        /* \"HaloNode.sol\":4495:4587  function symbol() external override view returns (string memory) {\r... */\n    tag_17:\n      tag_29\n      tag_85\n      jump\t// in\n        /* \"HaloNode.sol\":8303:8423  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_18:\n      tag_33\n      tag_88\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"HaloNode.sol\":3547:3629  address public managerWallet = payable(0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3) */\n    tag_19:\n      sload(0x07)\n      tag_77\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"HaloNode.sol\":7852:8103  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_20:\n      tag_33\n      tag_95\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"HaloNode.sol\":5243:5489  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_21:\n      tag_33\n      tag_99\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"HaloNode.sol\":3489:3510  string public _symbol */\n    tag_22:\n      tag_29\n      tag_103\n      jump\t// in\n        /* \"HaloNode.sol\":3515:3534  string public _name */\n    tag_23:\n      tag_29\n      tag_106\n      jump\t// in\n        /* \"HaloNode.sol\":5543:5682  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_24:\n      tag_39\n      tag_109\n      calldatasize\n      0x04\n      tag_110\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":5649:5667  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"HaloNode.sol\":5626:5633  uint256 */\n      0x00\n        /* \"HaloNode.sol\":5649:5667  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":5649:5660  _allowances */\n      0x02\n        /* \"HaloNode.sol\":5649:5667  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"HaloNode.sol\":5649:5676  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"HaloNode.sol\":5543:5682  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_59\n      tag_114\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"HaloNode.sol\":4640:4728  function name() external override view returns (string memory) {\r... */\n    tag_30:\n        /* \"HaloNode.sol\":4688:4701  string memory */\n      0x60\n        /* \"HaloNode.sol\":4717:4722  _name */\n      0x06\n        /* \"HaloNode.sol\":4710:4722  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"HaloNode.sol\":4640:4728  function name() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"HaloNode.sol\":5812:5965  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_36:\n        /* \"HaloNode.sol\":5889:5893  bool */\n      0x00\n        /* \"HaloNode.sol\":5902:5941  _approve(_msgSender(), spender, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":5925:5932  spender */\n      dup5\n        /* \"HaloNode.sol\":5934:5940  amount */\n      dup5\n        /* \"HaloNode.sol\":5902:5910  _approve */\n      tag_127\n        /* \"HaloNode.sol\":5902:5941  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_124:\n      pop\n        /* \"HaloNode.sol\":5955:5959  true */\n      0x01\n        /* \"HaloNode.sol\":5812:5965  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":6410:6798  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":6531:6551  blackList[recipient] */\n      dup3\n      and\n        /* \"HaloNode.sol\":6510:6514  bool */\n      0x00\n        /* \"HaloNode.sol\":6531:6551  blackList[recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":6531:6540  blackList */\n      0x08\n        /* \"HaloNode.sol\":6531:6551  blackList[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"HaloNode.sol\":6531:6560  blackList[recipient] == false */\n      iszero\n        /* \"HaloNode.sol\":6523:6603  require(blackList[recipient] == false, \"Error: transfer from blacklist address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"HaloNode.sol\":6610:6646  _transfer(sender, recipient, amount) */\n      tag_133\n        /* \"HaloNode.sol\":6620:6626  sender */\n      dup5\n        /* \"HaloNode.sol\":6628:6637  recipient */\n      dup5\n        /* \"HaloNode.sol\":6639:6645  amount */\n      dup5\n        /* \"HaloNode.sol\":6610:6619  _transfer */\n      tag_134\n        /* \"HaloNode.sol\":6610:6646  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"HaloNode.sol\":6653:6774  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_135\n        /* \"HaloNode.sol\":6662:6668  sender */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":6684:6773  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_137\n        /* \"HaloNode.sol\":6722:6728  amount */\n      dup6\n        /* \"HaloNode.sol\":6684:6773  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":6684:6703  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":6684:6695  _allowances */\n      0x02\n        /* \"HaloNode.sol\":6684:6703  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":6684:6717  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"HaloNode.sol\":6684:6721  _allowances[sender][_msgSender()].sub */\n      tag_139\n        /* \"HaloNode.sol\":6684:6773  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_137:\n        /* \"HaloNode.sol\":6653:6661  _approve */\n      tag_127\n        /* \"HaloNode.sol\":6653:6774  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"HaloNode.sol\":6788:6792  true */\n      0x01\n        /* \"HaloNode.sol\":6410:6798  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":7180:7380  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":7260:7264  bool */\n      0x00\n        /* \"HaloNode.sol\":7305:7330  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":7305:7316  _allowances */\n      0x02\n        /* \"HaloNode.sol\":7305:7330  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":7305:7339  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"HaloNode.sol\":7260:7264  bool */\n      swap1\n      swap2\n        /* \"HaloNode.sol\":7273:7356  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_124\n      swap2\n        /* \"HaloNode.sol\":7296:7303  spender */\n      dup6\n      swap1\n        /* \"HaloNode.sol\":7305:7355  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_137\n      swap1\n        /* \"HaloNode.sol\":7344:7354  addedValue */\n      dup7\n        /* \"HaloNode.sol\":7305:7343  _allowances[_msgSender()][spender].add */\n      tag_146\n        /* \"HaloNode.sol\":7305:7355  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"HaloNode.sol\":3935:4031  function addToBlackList(address account) public onlyOwner {\r... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_152\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":4000:4018  blackList[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":4000:4009  blackList */\n      0x08\n        /* \"HaloNode.sol\":4000:4018  blackList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":4000:4025  blackList[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"HaloNode.sol\":4021:4025  true */\n      0x01\n        /* \"HaloNode.sol\":4000:4025  blackList[account] = true */\n      or\n      swap1\n      sstore\n        /* \"HaloNode.sol\":3935:4031  function addToBlackList(address account) public onlyOwner {\r... */\n      jump\t// out\n        /* \"HaloNode.sol\":8508:8618  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_66:\n        /* \"HaloNode.sol\":8554:8558  bool */\n      0x00\n        /* \"HaloNode.sol\":8567:8594  _burn(_msgSender(), amount) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":8587:8593  amount */\n      dup4\n        /* \"HaloNode.sol\":8567:8572  _burn */\n      tag_157\n        /* \"HaloNode.sol\":8567:8594  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"HaloNode.sol\":8608:8612  true */\n      0x01\n      swap2\n        /* \"HaloNode.sol\":8508:8618  function burn(uint256 amount) public returns (bool) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":4041:4143  function removeFromBlackList(address account) public onlyOwner {\r... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_152\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":4111:4129  blackList[account] */\n      and\n        /* \"HaloNode.sol\":4132:4137  false */\n      0x00\n        /* \"HaloNode.sol\":4111:4129  blackList[account] */\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":4111:4120  blackList */\n      0x08\n        /* \"HaloNode.sol\":4111:4129  blackList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":4111:4137  blackList[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"HaloNode.sol\":4041:4143  function removeFromBlackList(address account) public onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_152\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"HaloNode.sol\":4495:4587  function symbol() external override view returns (string memory) {\r... */\n    tag_85:\n        /* \"HaloNode.sol\":4545:4558  string memory */\n      0x60\n        /* \"HaloNode.sol\":4574:4581  _symbol */\n      0x05\n        /* \"HaloNode.sol\":4567:4581  return _symbol */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n        /* \"HaloNode.sol\":8303:8423  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_89:\n        /* \"HaloNode.sol\":8359:8363  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_152\n      jump\t// in\n    tag_185:\n        /* \"HaloNode.sol\":8372:8399  _mint(_msgSender(), amount) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":8392:8398  amount */\n      dup4\n        /* \"HaloNode.sol\":8372:8377  _mint */\n      tag_190\n        /* \"HaloNode.sol\":8372:8399  _mint(_msgSender(), amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1318:1319  _ */\n    tag_187:\n        /* \"HaloNode.sol\":8303:8423  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":7852:8103  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_96:\n        /* \"HaloNode.sol\":7937:7941  bool */\n      0x00\n        /* \"HaloNode.sol\":7950:8079  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":7973:7980  spender */\n      dup5\n        /* \"HaloNode.sol\":7982:8078  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_137\n        /* \"HaloNode.sol\":8021:8036  subtractedValue */\n      dup6\n        /* \"HaloNode.sol\":7982:8078  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":7982:8007  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":7982:7993  _allowances */\n      0x02\n        /* \"HaloNode.sol\":7982:8007  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":7982:8016  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"HaloNode.sol\":7982:8020  _allowances[_msgSender()][spender].sub */\n      tag_139\n        /* \"HaloNode.sol\":7982:8078  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"HaloNode.sol\":5243:5489  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":5344:5364  blackList[recipient] */\n      dup3\n      and\n        /* \"HaloNode.sol\":5323:5327  bool */\n      0x00\n        /* \"HaloNode.sol\":5344:5364  blackList[recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":5344:5353  blackList */\n      0x08\n        /* \"HaloNode.sol\":5344:5364  blackList[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"HaloNode.sol\":5344:5373  blackList[recipient] == false */\n      iszero\n        /* \"HaloNode.sol\":5336:5416  require(blackList[recipient] == false, \"Error: transfer from blacklist address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_197:\n        /* \"HaloNode.sol\":5423:5465  _transfer(_msgSender(), recipient, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"HaloNode.sol\":5447:5456  recipient */\n      dup5\n        /* \"HaloNode.sol\":5458:5464  amount */\n      dup5\n        /* \"HaloNode.sol\":5423:5432  _transfer */\n      tag_134\n        /* \"HaloNode.sol\":5423:5465  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"HaloNode.sol\":3489:3510  string public _symbol */\n    tag_103:\n      0x05\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_118\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_118\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"HaloNode.sol\":3515:3534  string public _name */\n    tag_106:\n      0x06\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_152\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3481   */\n      0x26\n        /* \"#utility.yul\":3459:3477   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3452:3482   */\n      mstore\n        /* \"#utility.yul\":3518:3552   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3498:3516   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3491:3553   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3569:3587   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3562:3598   */\n      mstore\n        /* \"#utility.yul\":3615:3634   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n        /* \"#utility.yul\":3238:3640   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":11509:11829  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":11599:11618  owner != address(0) */\n      dup4\n      and\n        /* \"HaloNode.sol\":11591:11659  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"HaloNode.sol\":11591:11659  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3017:3038   */\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x24\n        /* \"#utility.yul\":3054:3072   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3047:3077   */\n      mstore\n        /* \"#utility.yul\":3113:3147   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3093:3111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3086:3148   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3164:3182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3157:3191   */\n      mstore\n        /* \"#utility.yul\":3208:3227   */\n      0x84\n      add\n        /* \"HaloNode.sol\":11591:11659  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":2833:3233   */\n      jump\n        /* \"HaloNode.sol\":11591:11659  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":11674:11695  spender != address(0) */\n      dup3\n      and\n        /* \"HaloNode.sol\":11666:11734  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5374:5376   */\n      0x20\n        /* \"HaloNode.sol\":11666:11734  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5356:5377   */\n      mstore\n        /* \"#utility.yul\":5413:5415   */\n      0x22\n        /* \"#utility.yul\":5393:5411   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5386:5416   */\n      mstore\n        /* \"#utility.yul\":5452:5486   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5432:5450   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5425:5487   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5503:5521   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5496:5528   */\n      mstore\n        /* \"#utility.yul\":5545:5564   */\n      0x84\n      add\n        /* \"HaloNode.sol\":11666:11734  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":5172:5570   */\n      jump\n        /* \"HaloNode.sol\":11666:11734  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":11743:11761  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":11743:11754  _allowances */\n      0x02\n        /* \"HaloNode.sol\":11743:11761  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"HaloNode.sol\":11743:11770  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":11743:11779  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"HaloNode.sol\":11791:11823  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6128:6153   */\n      dup5\n      dup2\n      mstore\n        /* \"HaloNode.sol\":11791:11823  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6101:6119   */\n      add\n        /* \"HaloNode.sol\":11791:11823  Approval(owner, spender, amount) */\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"HaloNode.sol\":11509:11829  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":9078:9910  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9172:9192  sender != address(0) */\n      dup4\n      and\n        /* \"HaloNode.sol\":9164:9234  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2629:2631   */\n      0x20\n        /* \"HaloNode.sol\":9164:9234  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2611:2632   */\n      mstore\n        /* \"#utility.yul\":2668:2670   */\n      0x25\n        /* \"#utility.yul\":2648:2666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2641:2671   */\n      mstore\n        /* \"#utility.yul\":2707:2741   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":2687:2705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2680:2742   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":2758:2776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2751:2786   */\n      mstore\n        /* \"#utility.yul\":2803:2822   */\n      0x84\n      add\n        /* \"HaloNode.sol\":9164:9234  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":2427:2828   */\n      jump\n        /* \"HaloNode.sol\":9164:9234  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9249:9272  recipient != address(0) */\n      dup3\n      and\n        /* \"HaloNode.sol\":9241:9312  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4568:4570   */\n      0x20\n        /* \"HaloNode.sol\":9241:9312  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4550:4571   */\n      mstore\n        /* \"#utility.yul\":4607:4609   */\n      0x23\n        /* \"#utility.yul\":4587:4605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4580:4610   */\n      mstore\n        /* \"#utility.yul\":4646:4680   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4626:4644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4619:4681   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4697:4715   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4690:4723   */\n      mstore\n        /* \"#utility.yul\":4740:4759   */\n      0x84\n      add\n        /* \"HaloNode.sol\":9241:9312  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4366:4765   */\n      jump\n        /* \"HaloNode.sol\":9241:9312  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_235:\n        /* \"HaloNode.sol\":9339:9410  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_238\n        /* \"HaloNode.sol\":9361:9367  amount */\n      dup2\n        /* \"HaloNode.sol\":9339:9410  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9339:9356  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9339:9348  _balances */\n      0x01\n        /* \"HaloNode.sol\":9339:9356  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"HaloNode.sol\":9339:9410  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n        /* \"HaloNode.sol\":9339:9360  _balances[sender].sub */\n      tag_139\n        /* \"HaloNode.sol\":9339:9410  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9319:9336  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9319:9328  _balances */\n      0x01\n        /* \"HaloNode.sol\":9319:9336  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":9319:9410  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"HaloNode.sol\":9433:9446  managerWallet */\n      sload(0x07)\n        /* \"HaloNode.sol\":9420:9446  recipient != managerWallet */\n      dup4\n      dup3\n      and\n        /* \"HaloNode.sol\":9433:9446  managerWallet */\n      swap2\n      and\n        /* \"HaloNode.sol\":9420:9446  recipient != managerWallet */\n      eq\n        /* \"HaloNode.sol\":9417:9796  if(recipient != managerWallet){\r... */\n      tag_239\n      jumpi\n        /* \"HaloNode.sol\":9456:9473  uint256 taxAmount */\n      0x00\n        /* \"HaloNode.sol\":9476:9499  amount.mul(10).div(100) */\n      tag_240\n        /* \"HaloNode.sol\":9495:9498  100 */\n      0x64\n        /* \"HaloNode.sol\":9476:9490  amount.mul(10) */\n      tag_241\n        /* \"HaloNode.sol\":9476:9482  amount */\n      dup5\n        /* \"HaloNode.sol\":9487:9489  10 */\n      0x0a\n        /* \"HaloNode.sol\":9476:9486  amount.mul */\n      tag_242\n        /* \"HaloNode.sol\":9476:9490  amount.mul(10) */\n      jump\t// in\n    tag_241:\n        /* \"HaloNode.sol\":9476:9494  amount.mul(10).div */\n      swap1\n      tag_243\n        /* \"HaloNode.sol\":9476:9499  amount.mul(10).div(100) */\n      jump\t// in\n    tag_240:\n        /* \"HaloNode.sol\":9456:9499  uint256 taxAmount = amount.mul(10).div(100) */\n      swap1\n      pop\n        /* \"HaloNode.sol\":9531:9578  _balances[recipient].add(amount.sub(taxAmount)) */\n      tag_244\n        /* \"HaloNode.sol\":9556:9577  amount.sub(taxAmount) */\n      tag_245\n        /* \"HaloNode.sol\":9556:9562  amount */\n      dup4\n        /* \"HaloNode.sol\":9456:9499  uint256 taxAmount = amount.mul(10).div(100) */\n      dup4\n        /* \"HaloNode.sol\":9556:9566  amount.sub */\n      tag_246\n        /* \"HaloNode.sol\":9556:9577  amount.sub(taxAmount) */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9531:9551  _balances[recipient] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9531:9540  _balances */\n      0x01\n        /* \"HaloNode.sol\":9531:9551  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"HaloNode.sol\":9531:9555  _balances[recipient].add */\n      tag_146\n        /* \"HaloNode.sol\":9531:9578  _balances[recipient].add(amount.sub(taxAmount)) */\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9508:9528  _balances[recipient] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9508:9517  _balances */\n      0x01\n        /* \"HaloNode.sol\":9508:9528  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":9508:9578  _balances[recipient] = _balances[recipient].add(amount.sub(taxAmount)) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"HaloNode.sol\":9592:9642  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      dup6\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"HaloNode.sol\":9620:9641  amount.sub(taxAmount) */\n      tag_247\n        /* \"HaloNode.sol\":9620:9626  amount */\n      dup6\n        /* \"HaloNode.sol\":9631:9640  taxAmount */\n      dup6\n        /* \"HaloNode.sol\":9620:9630  amount.sub */\n      tag_246\n        /* \"HaloNode.sol\":9620:9641  amount.sub(taxAmount) */\n      jump\t// in\n    tag_247:\n        /* \"HaloNode.sol\":9592:9642  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      mload(0x40)\n        /* \"#utility.yul\":6128:6153   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6101:6119   */\n      add\n        /* \"HaloNode.sol\":9592:9642  Transfer(sender, recipient, amount.sub(taxAmount)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"HaloNode.sol\":9688:9701  managerWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"HaloNode.sol\":9678:9702  _balances[managerWallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9678:9687  _balances */\n      0x01\n        /* \"HaloNode.sol\":9678:9702  _balances[managerWallet] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"HaloNode.sol\":9678:9717  _balances[managerWallet].add(taxAmount) */\n      tag_249\n      swap1\n        /* \"HaloNode.sol\":9707:9716  taxAmount */\n      dup3\n        /* \"HaloNode.sol\":9678:9706  _balances[managerWallet].add */\n      tag_146\n        /* \"HaloNode.sol\":9678:9717  _balances[managerWallet].add(taxAmount) */\n      jump\t// in\n    tag_249:\n        /* \"HaloNode.sol\":9661:9674  managerWallet */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"HaloNode.sol\":9651:9675  _balances[managerWallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9651:9660  _balances */\n      0x01\n        /* \"HaloNode.sol\":9651:9675  _balances[managerWallet] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":9651:9717  _balances[managerWallet] = _balances[managerWallet].add(taxAmount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"HaloNode.sol\":9748:9761  managerWallet */\n      swap2\n      sload\n        /* \"HaloNode.sol\":9731:9773  Transfer(sender, managerWallet, taxAmount) */\n      swap2\n      mload\n        /* \"#utility.yul\":6128:6153   */\n      dup5\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9748:9761  managerWallet */\n      swap2\n      dup2\n      and\n      swap3\n        /* \"HaloNode.sol\":9731:9773  Transfer(sender, managerWallet, taxAmount) */\n      swap1\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"#utility.yul\":6101:6119   */\n      add\n        /* \"HaloNode.sol\":9731:9773  Transfer(sender, managerWallet, taxAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"HaloNode.sol\":9782:9789  return; */\n      pop\n        /* \"HaloNode.sol\":9078:9910  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":9417:9796  if(recipient != managerWallet){\r... */\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9825:9845  _balances[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9825:9834  _balances */\n      0x01\n        /* \"HaloNode.sol\":9825:9845  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"HaloNode.sol\":9825:9857  _balances[recipient].add(amount) */\n      tag_251\n      swap1\n        /* \"HaloNode.sol\":9850:9856  amount */\n      dup3\n        /* \"HaloNode.sol\":9825:9849  _balances[recipient].add */\n      tag_146\n        /* \"HaloNode.sol\":9825:9857  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":9802:9822  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":9802:9811  _balances */\n      0x01\n        /* \"HaloNode.sol\":9802:9822  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":9802:9857  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"HaloNode.sol\":9869:9904  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      tag_230\n      swap1\n        /* \"HaloNode.sol\":9897:9903  amount */\n      dup6\n        /* \"#utility.yul\":6128:6153   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6101:6119   */\n      add\n      swap1\n        /* \"#utility.yul\":5982:6159   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5061:5068  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5120:5132  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5112:5118  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5133  require(b <= a, errorMessage) */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_254:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5154:5159  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4945:5176  function sub(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":10767:11097  function _burn(address account, uint256 amount) internal {\r... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10839:10860  account != address(0) */\n      dup3\n      and\n        /* \"HaloNode.sol\":10831:10898  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4972:4974   */\n      0x20\n        /* \"HaloNode.sol\":10831:10898  require(account != address(0), \"BEP20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4954:4975   */\n      mstore\n        /* \"#utility.yul\":5011:5013   */\n      0x21\n        /* \"#utility.yul\":4991:5009   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4984:5014   */\n      mstore\n        /* \"#utility.yul\":5050:5084   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":5030:5048   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5023:5085   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":5101:5119   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5094:5125   */\n      mstore\n        /* \"#utility.yul\":5142:5161   */\n      0x84\n      add\n        /* \"HaloNode.sol\":10831:10898  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_131\n        /* \"#utility.yul\":4770:5167   */\n      jump\n        /* \"HaloNode.sol\":10831:10898  require(account != address(0), \"BEP20: burn from the zero address\") */\n    tag_260:\n        /* \"HaloNode.sol\":10928:10996  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_263\n        /* \"HaloNode.sol\":10951:10957  amount */\n      dup2\n        /* \"HaloNode.sol\":10928:10996  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10928:10946  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":10928:10937  _balances */\n      0x01\n        /* \"HaloNode.sol\":10928:10946  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"HaloNode.sol\":10928:10996  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap1\n        /* \"HaloNode.sol\":10928:10950  _balances[account].sub */\n      tag_139\n        /* \"HaloNode.sol\":10928:10996  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10907:10925  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":10907:10916  _balances */\n      0x01\n        /* \"HaloNode.sol\":10907:10925  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"HaloNode.sol\":10907:10996  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      sstore\n        /* \"HaloNode.sol\":11018:11030  _totalSupply */\n      sload(0x03)\n        /* \"HaloNode.sol\":11018:11042  _totalSupply.sub(amount) */\n      tag_264\n      swap1\n        /* \"HaloNode.sol\":11035:11041  amount */\n      dup3\n        /* \"HaloNode.sol\":11018:11034  _totalSupply.sub */\n      tag_246\n        /* \"HaloNode.sol\":11018:11042  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_264:\n        /* \"HaloNode.sol\":11003:11015  _totalSupply */\n      0x03\n        /* \"HaloNode.sol\":11003:11042  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"HaloNode.sol\":11054:11091  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6128:6153   */\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":11080:11081  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":11054:11091  Transfer(account, address(0), amount) */\n      dup5\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6101:6119   */\n      add\n        /* \"HaloNode.sol\":11054:11091  Transfer(account, address(0), amount) */\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"HaloNode.sol\":10767:11097  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"HaloNode.sol\":10169:10459  function _mint(address account, uint256 amount) internal {\r... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10241:10262  account != address(0) */\n      dup3\n      and\n        /* \"HaloNode.sol\":10233:10298  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x20\n        /* \"HaloNode.sol\":10233:10298  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3829:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3888   */\n      0x1f\n        /* \"#utility.yul\":3866:3884   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3859:3889   */\n      mstore\n        /* \"#utility.yul\":3925:3958   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":3905:3923   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3898:3959   */\n      mstore\n        /* \"#utility.yul\":3976:3994   */\n      0x64\n      add\n        /* \"HaloNode.sol\":10233:10298  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":3645:4000   */\n      jump\n        /* \"HaloNode.sol\":10233:10298  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_268:\n        /* \"HaloNode.sol\":10322:10334  _totalSupply */\n      sload(0x03)\n        /* \"HaloNode.sol\":10322:10346  _totalSupply.add(amount) */\n      tag_271\n      swap1\n        /* \"HaloNode.sol\":10339:10345  amount */\n      dup3\n        /* \"HaloNode.sol\":10322:10338  _totalSupply.add */\n      tag_146\n        /* \"HaloNode.sol\":10322:10346  _totalSupply.add(amount) */\n      jump\t// in\n    tag_271:\n        /* \"HaloNode.sol\":10307:10319  _totalSupply */\n      0x03\n        /* \"HaloNode.sol\":10307:10346  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10374:10392  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"HaloNode.sol\":10374:10383  _balances */\n      0x01\n        /* \"HaloNode.sol\":10374:10392  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"HaloNode.sol\":10374:10404  _balances[account].add(amount) */\n      tag_272\n      swap1\n        /* \"HaloNode.sol\":10397:10403  amount */\n      dup3\n        /* \"HaloNode.sol\":10374:10396  _balances[account].add */\n      tag_146\n        /* \"HaloNode.sol\":10374:10404  _balances[account].add(amount) */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"HaloNode.sol\":10353:10371  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"HaloNode.sol\":10353:10362  _balances */\n      0x01\n        /* \"HaloNode.sol\":10353:10371  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"HaloNode.sol\":10353:10404  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"HaloNode.sol\":10416:10453  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"HaloNode.sol\":10353:10371  _balances[account] */\n      swap1\n      swap2\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"HaloNode.sol\":10416:10453  Transfer(address(0), account, amount) */\n      swap1\n      tag_265\n      swap1\n        /* \"HaloNode.sol\":10446:10452  amount */\n      dup6\n        /* \"#utility.yul\":6128:6153   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6116:6118   */\n      0x20\n        /* \"#utility.yul\":6101:6119   */\n      add\n      swap1\n        /* \"#utility.yul\":5982:6159   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_276\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_279\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_282\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_284:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:378   */\n    tag_61:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_288:\n        /* \"#utility.yul\":343:372   */\n      tag_257\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_110:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_291:\n        /* \"#utility.yul\":551:580   */\n      tag_292\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_284\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_293\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_284\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_45:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_295:\n        /* \"#utility.yul\":833:862   */\n      tag_296\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_284\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_297\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_284\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_35:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_299:\n        /* \"#utility.yul\":1149:1178   */\n      tag_300\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_284\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:1420   */\n    tag_65:\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1340:1349   */\n      dup3\n        /* \"#utility.yul\":1331:1338   */\n      dup5\n        /* \"#utility.yul\":1327:1350   */\n      sub\n        /* \"#utility.yul\":1323:1355   */\n      slt\n        /* \"#utility.yul\":1320:1372   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1320:1372   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":1391:1414   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1240:1420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:2422   */\n    tag_32:\n        /* \"#utility.yul\":1937:1941   */\n      0x00\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1995:1997   */\n      dup1\n        /* \"#utility.yul\":1984:1993   */\n      dup4\n        /* \"#utility.yul\":1977:1998   */\n      mstore\n        /* \"#utility.yul\":2027:2033   */\n      dup4\n        /* \"#utility.yul\":2021:2034   */\n      mload\n        /* \"#utility.yul\":2070:2076   */\n      dup1\n        /* \"#utility.yul\":2065:2067   */\n      dup3\n        /* \"#utility.yul\":2054:2063   */\n      dup6\n        /* \"#utility.yul\":2050:2068   */\n      add\n        /* \"#utility.yul\":2043:2077   */\n      mstore\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2105:2245   */\n    tag_306:\n        /* \"#utility.yul\":2119:2125   */\n      dup2\n        /* \"#utility.yul\":2116:2117   */\n      dup2\n        /* \"#utility.yul\":2113:2126   */\n      lt\n        /* \"#utility.yul\":2105:2245   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2214:2228   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2210:2233   */\n      dup4\n      add\n        /* \"#utility.yul\":2204:2234   */\n      mload\n        /* \"#utility.yul\":2180:2197   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2176:2202   */\n      add\n        /* \"#utility.yul\":2169:2235   */\n      mstore\n        /* \"#utility.yul\":2134:2144   */\n      dup3\n      add\n        /* \"#utility.yul\":2105:2245   */\n      jump(tag_306)\n    tag_308:\n        /* \"#utility.yul\":2263:2269   */\n      dup2\n        /* \"#utility.yul\":2260:2261   */\n      dup2\n        /* \"#utility.yul\":2257:2270   */\n      gt\n        /* \"#utility.yul\":2254:2345   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2328:2330   */\n      0x40\n        /* \"#utility.yul\":2319:2325   */\n      dup4\n        /* \"#utility.yul\":2308:2317   */\n      dup8\n        /* \"#utility.yul\":2304:2326   */\n      add\n        /* \"#utility.yul\":2300:2331   */\n      add\n        /* \"#utility.yul\":2293:2335   */\n      mstore\n        /* \"#utility.yul\":2254:2345   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":2406:2408   */\n      0x1f\n        /* \"#utility.yul\":2385:2400   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2381:2410   */\n      and\n        /* \"#utility.yul\":2366:2411   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2362:2416   */\n      add\n      swap4\n        /* \"#utility.yul\":1825:2422   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4005:4361   */\n    tag_152:\n        /* \"#utility.yul\":4207:4209   */\n      0x20\n        /* \"#utility.yul\":4189:4210   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4226:4244   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4219:4249   */\n      mstore\n        /* \"#utility.yul\":4285:4319   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4280:4282   */\n      0x40\n        /* \"#utility.yul\":4265:4283   */\n      dup3\n      add\n        /* \"#utility.yul\":4258:4320   */\n      mstore\n        /* \"#utility.yul\":4352:4354   */\n      0x60\n        /* \"#utility.yul\":4337:4355   */\n      add\n      swap1\n        /* \"#utility.yul\":4005:4361   */\n      jump\t// out\n        /* \"#utility.yul\":5575:5977   */\n    tag_132:\n        /* \"#utility.yul\":5777:5779   */\n      0x20\n        /* \"#utility.yul\":5759:5780   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5816:5818   */\n      0x26\n        /* \"#utility.yul\":5796:5814   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5789:5819   */\n      mstore\n        /* \"#utility.yul\":5855:5889   */\n      0x4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061\n        /* \"#utility.yul\":5850:5852   */\n      0x40\n        /* \"#utility.yul\":5835:5853   */\n      dup3\n      add\n        /* \"#utility.yul\":5828:5890   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5921:5923   */\n      0x60\n        /* \"#utility.yul\":5906:5924   */\n      dup3\n      add\n        /* \"#utility.yul\":5899:5935   */\n      mstore\n        /* \"#utility.yul\":5967:5970   */\n      0x80\n        /* \"#utility.yul\":5952:5971   */\n      add\n      swap1\n        /* \"#utility.yul\":5575:5977   */\n      jump\t// out\n        /* \"#utility.yul\":6353:6481   */\n    tag_258:\n        /* \"#utility.yul\":6393:6396   */\n      0x00\n        /* \"#utility.yul\":6424:6425   */\n      dup3\n        /* \"#utility.yul\":6420:6426   */\n      not\n        /* \"#utility.yul\":6417:6418   */\n      dup3\n        /* \"#utility.yul\":6414:6427   */\n      gt\n        /* \"#utility.yul\":6411:6450   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":6430:6448   */\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n      pop\n        /* \"#utility.yul\":6466:6475   */\n      add\n      swap1\n        /* \"#utility.yul\":6353:6481   */\n      jump\t// out\n        /* \"#utility.yul\":6486:6703   */\n    tag_279:\n        /* \"#utility.yul\":6526:6527   */\n      0x00\n        /* \"#utility.yul\":6552:6553   */\n      dup3\n        /* \"#utility.yul\":6542:6674   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":6596:6606   */\n      0x4e487b71\n        /* \"#utility.yul\":6591:6594   */\n      0xe0\n        /* \"#utility.yul\":6587:6607   */\n      shl\n        /* \"#utility.yul\":6584:6585   */\n      0x00\n        /* \"#utility.yul\":6577:6608   */\n      mstore\n        /* \"#utility.yul\":6631:6635   */\n      0x12\n        /* \"#utility.yul\":6628:6629   */\n      0x04\n        /* \"#utility.yul\":6621:6636   */\n      mstore\n        /* \"#utility.yul\":6659:6663   */\n      0x24\n        /* \"#utility.yul\":6656:6657   */\n      0x00\n        /* \"#utility.yul\":6649:6664   */\n      revert\n        /* \"#utility.yul\":6542:6674   */\n    tag_326:\n      pop\n        /* \"#utility.yul\":6688:6697   */\n      div\n      swap1\n        /* \"#utility.yul\":6486:6703   */\n      jump\t// out\n        /* \"#utility.yul\":6708:6876   */\n    tag_276:\n        /* \"#utility.yul\":6748:6755   */\n      0x00\n        /* \"#utility.yul\":6814:6815   */\n      dup2\n        /* \"#utility.yul\":6810:6811   */\n      0x00\n        /* \"#utility.yul\":6806:6812   */\n      not\n        /* \"#utility.yul\":6802:6816   */\n      div\n        /* \"#utility.yul\":6799:6800   */\n      dup4\n        /* \"#utility.yul\":6796:6817   */\n      gt\n        /* \"#utility.yul\":6791:6792   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      iszero\n        /* \"#utility.yul\":6777:6794   */\n      iszero\n        /* \"#utility.yul\":6773:6818   */\n      and\n        /* \"#utility.yul\":6770:6841   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":6821:6839   */\n      tag_329\n      tag_324\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":6861:6870   */\n      mul\n      swap1\n        /* \"#utility.yul\":6708:6876   */\n      jump\t// out\n        /* \"#utility.yul\":6881:7006   */\n    tag_282:\n        /* \"#utility.yul\":6921:6925   */\n      0x00\n        /* \"#utility.yul\":6949:6950   */\n      dup3\n        /* \"#utility.yul\":6946:6947   */\n      dup3\n        /* \"#utility.yul\":6943:6951   */\n      lt\n        /* \"#utility.yul\":6940:6974   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6954:6972   */\n      tag_332\n      tag_324\n      jump\t// in\n    tag_332:\n      pop\n        /* \"#utility.yul\":6991:7000   */\n      sub\n      swap1\n        /* \"#utility.yul\":6881:7006   */\n      jump\t// out\n        /* \"#utility.yul\":7011:7391   */\n    tag_118:\n        /* \"#utility.yul\":7090:7091   */\n      0x01\n        /* \"#utility.yul\":7086:7098   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7133:7145   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7154:7215   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7208:7212   */\n      0x7f\n        /* \"#utility.yul\":7200:7206   */\n      dup3\n        /* \"#utility.yul\":7196:7213   */\n      and\n        /* \"#utility.yul\":7186:7213   */\n      swap2\n      pop\n        /* \"#utility.yul\":7154:7215   */\n    tag_334:\n        /* \"#utility.yul\":7261:7263   */\n      0x20\n        /* \"#utility.yul\":7253:7259   */\n      dup3\n        /* \"#utility.yul\":7250:7264   */\n      lt\n        /* \"#utility.yul\":7230:7248   */\n      dup2\n        /* \"#utility.yul\":7227:7265   */\n      eq\n        /* \"#utility.yul\":7224:7385   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7307:7317   */\n      0x4e487b71\n        /* \"#utility.yul\":7302:7305   */\n      0xe0\n        /* \"#utility.yul\":7298:7318   */\n      shl\n        /* \"#utility.yul\":7295:7296   */\n      0x00\n        /* \"#utility.yul\":7288:7319   */\n      mstore\n        /* \"#utility.yul\":7342:7346   */\n      0x22\n        /* \"#utility.yul\":7339:7340   */\n      0x04\n        /* \"#utility.yul\":7332:7347   */\n      mstore\n        /* \"#utility.yul\":7370:7374   */\n      0x24\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7360:7375   */\n      revert\n        /* \"#utility.yul\":7224:7385   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":7011:7391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:7523   */\n    tag_324:\n        /* \"#utility.yul\":7457:7467   */\n      0x4e487b71\n        /* \"#utility.yul\":7452:7455   */\n      0xe0\n        /* \"#utility.yul\":7448:7468   */\n      shl\n        /* \"#utility.yul\":7445:7446   */\n      0x00\n        /* \"#utility.yul\":7438:7469   */\n      mstore\n        /* \"#utility.yul\":7488:7492   */\n      0x11\n        /* \"#utility.yul\":7485:7486   */\n      0x04\n        /* \"#utility.yul\":7478:7493   */\n      mstore\n        /* \"#utility.yul\":7512:7516   */\n      0x24\n        /* \"#utility.yul\":7509:7510   */\n      0x00\n        /* \"#utility.yul\":7502:7517   */\n      revert\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n\n    auxdata: 0xa26469706673582212208f71437f442daa7037d9300683f7d3cdc49ce3475c2dadc381403ebe07359ffb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 283,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:578:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "251:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "261:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "278:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "322:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "296:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "369:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "371:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "385:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "393:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "381:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "381:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "371:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "349:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:26:5"
															},
															"nodeType": "YulIf",
															"src": "339:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "459:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "480:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "487:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "492:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "483:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "483:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "473:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "473:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "524:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "517:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "517:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "552:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "555:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "415:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "438:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "446:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "435:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "412:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:38:5"
															},
															"nodeType": "YulIf",
															"src": "409:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "231:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "240:6:5",
														"type": ""
													}
												],
												"src": "196:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600780546001600160a01b031916732c40b38ef349aea24aa48ed1a6ed3db3860effa31790553480156200003757600080fd5b5062000043336200011b565b6040805180820190915260098082526848616c6f206e6f646560b81b602090920191825262000075916006916200016b565b506040805180820190915260048082526348616c6f60e01b6020909201918252620000a3916005916200016b565b506004805460ff191660121790556d04ee2d6d415b85acef810000000060038190553360008181526001602052604080822084905551919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916200010d9190815260200190565b60405180910390a36200024e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001799062000211565b90600052602060002090601f0160209004810192826200019d5760008555620001e8565b82601f10620001b857805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e8578251825591602001919060010190620001cb565b50620001f6929150620001fa565b5090565b5b80821115620001f65760008155600101620001fb565b600181811c908216806200022657607f821691505b602082108114156200024857634e487b7160e01b600052602260045260246000fd5b50919050565b611152806200025e6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146102c1578063a9059cbb146102d4578063b09f1266146102e7578063d28d8852146102ef578063dd62ed3e146102f7578063f2fde38b1461033057600080fd5b8063715018a614610255578063893d20e81461025d5780638da5cb5b1461028257806395d89b4114610293578063a0712d681461029b578063a2179ab0146102ae57600080fd5b806332424aa31161011557806332424aa3146101d157806339509351146101de578063417c73a7146101f157806342966c68146102065780634a49ac4c1461021957806370a082311461022c57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a610343565b6040516101679190610ed6565b60405180910390f35b61018361017e366004610e93565b6103d5565b6040519015158152602001610167565b6003545b604051908152602001610167565b6101836101b3366004610e57565b6103eb565b60045460ff165b60405160ff9091168152602001610167565b6004546101bf9060ff1681565b6101836101ec366004610e93565b610494565b6102046101ff366004610e09565b6104ca565b005b610183610214366004610ebd565b610518565b610204610227366004610e09565b61052c565b61019761023a366004610e09565b6001600160a01b031660009081526001602052604090205490565b610204610577565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6000546001600160a01b031661026a565b61015a6105ad565b6101836102a9366004610ebd565b6105bc565b60075461026a906001600160a01b031681565b6101836102cf366004610e93565b6105f6565b6101836102e2366004610e93565b610645565b61015a610689565b61015a610717565b610197610305366004610e24565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020461033e366004610e09565b610724565b60606006805461035290611016565b80601f016020809104026020016040519081016040528092919081815260200182805461037e90611016565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b5050505050905090565b60006103e23384846107bf565b50600192915050565b6001600160a01b03821660009081526008602052604081205460ff161561042d5760405162461bcd60e51b815260040161042490610f60565b60405180910390fd5b6104388484846108e4565b61048a843361048585604051806060016040528060288152602001611068602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610b7d565b6107bf565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103e29185906104859086610ba9565b6000546001600160a01b031633146104f45760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b60006105243383610bbc565b506001919050565b6000546001600160a01b031633146105565760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6000546001600160a01b031633146105a15760405162461bcd60e51b815260040161042490610f2b565b6105ab6000610cb6565b565b60606005805461035290611016565b600080546001600160a01b031633146105e75760405162461bcd60e51b815260040161042490610f2b565b6105243383610d06565b919050565b60006103e23384610485856040518060600160405280602581526020016110d6602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610b7d565b6001600160a01b03821660009081526008602052604081205460ff161561067e5760405162461bcd60e51b815260040161042490610f60565b6103e23384846108e4565b6005805461069690611016565b80601f01602080910402602001604051908101604052809291908181526020018280546106c290611016565b801561070f5780601f106106e45761010080835404028352916020019161070f565b820191906000526020600020905b8154815290600101906020018083116106f257829003601f168201915b505050505081565b6006805461069690611016565b6000546001600160a01b0316331461074e5760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b0381166107b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610424565b6107bc81610cb6565b50565b6001600160a01b0383166108215760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166109485760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610424565b6001600160a01b0382166109aa5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b6109e781604051806060016040528060268152602001611090602691396001600160a01b0386166000908152600160205260409020549190610b7d565b6001600160a01b03808516600090815260016020526040902091909155600754838216911614610b18576000610a296064610a2384600a610dce565b90610dda565b9050610a57610a388383610de6565b6001600160a01b03851660009081526001602052604090205490610ba9565b6001600160a01b0380851660008181526001602052604090209290925585166000805160206110b6833981519152610a8f8585610de6565b60405190815260200160405180910390a36007546001600160a01b0316600090815260016020526040902054610ac59082610ba9565b600780546001600160a01b03908116600090815260016020908152604091829020949094559154915184815291811692908716916000805160206110b6833981519152910160405180910390a350505050565b6001600160a01b038216600090815260016020526040902054610b3b9082610ba9565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206110b6833981519152906108d79085815260200190565b60008184841115610ba15760405162461bcd60e51b81526004016104249190610ed6565b505050900390565b6000610bb58284610fa6565b9392505050565b6001600160a01b038216610c1c5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610424565b610c59816040518060600160405280602281526020016110fb602291396001600160a01b0385166000908152600160205260409020549190610b7d565b6001600160a01b038316600090815260016020526040902055600354610c7f9082610de6565b6003556040518181526000906001600160a01b038416906000805160206110b6833981519152906020015b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610d5c5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610424565b600354610d699082610ba9565b6003556001600160a01b038216600090815260016020526040902054610d8f9082610ba9565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206110b683398151915290610caa9085815260200190565b6000610bb58284610fe0565b6000610bb58284610fbe565b6000610bb58284610fff565b80356001600160a01b03811681146105f157600080fd5b600060208284031215610e1b57600080fd5b610bb582610df2565b60008060408385031215610e3757600080fd5b610e4083610df2565b9150610e4e60208401610df2565b90509250929050565b600080600060608486031215610e6c57600080fd5b610e7584610df2565b9250610e8360208501610df2565b9150604084013590509250925092565b60008060408385031215610ea657600080fd5b610eaf83610df2565b946020939093013593505050565b600060208284031215610ecf57600080fd5b5035919050565b600060208083528351808285015260005b81811015610f0357858101830151858201604001528201610ee7565b81811115610f15576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4572726f723a207472616e736665722066726f6d20626c61636b6c697374206160408201526564647265737360d01b606082015260800190565b60008219821115610fb957610fb9611051565b500190565b600082610fdb57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610ffa57610ffa611051565b500290565b60008282101561101157611011611051565b500390565b600181811c9082168061102a57607f821691505b6020821081141561104b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212208f71437f442daa7037d9300683f7d3cdc49ce3475c2dadc381403ebe07359ffb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x2C40B38EF349AEA24AA48ED1A6ED3DB3860EFFA3 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0x11B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 DUP3 MSTORE PUSH9 0x48616C6F206E6F6465 PUSH1 0xB8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x75 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x16B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x48616C6F PUSH1 0xE0 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xA3 SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x16B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0x10D SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x24E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x179 SWAP1 PUSH3 0x211 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1CB JUMP JUMPDEST POP PUSH3 0x1F6 SWAP3 SWAP2 POP PUSH3 0x1FA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FB JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x226 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1152 DUP1 PUSH3 0x25E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA2179AB0 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x417C73A7 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x4A49AC4C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x197 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x26A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x689 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLER DUP5 DUP5 PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 DUP5 DUP5 DUP5 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x48A DUP5 CALLER PUSH2 0x485 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1068 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3E2 SWAP2 DUP6 SWAP1 PUSH2 0x485 SWAP1 DUP7 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x524 CALLER DUP4 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x5AB PUSH1 0x0 PUSH2 0xCB6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x524 CALLER DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLER DUP5 PUSH2 0x485 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x3E2 CALLER DUP5 DUP5 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x7BC DUP2 PUSH2 0xCB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x9E7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1090 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD DUP4 DUP3 AND SWAP2 AND EQ PUSH2 0xB18 JUMPI PUSH1 0x0 PUSH2 0xA29 PUSH1 0x64 PUSH2 0xA23 DUP5 PUSH1 0xA PUSH2 0xDCE JUMP JUMPDEST SWAP1 PUSH2 0xDDA JUMP JUMPDEST SWAP1 POP PUSH2 0xA57 PUSH2 0xA38 DUP4 DUP4 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA8F DUP6 DUP6 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAC5 SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB3B SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x8D7 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10FB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xC7F SWAP1 DUP3 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD69 SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD8F SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xCAA SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFFF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB5 DUP3 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE40 DUP4 PUSH2 0xDF2 JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E PUSH1 0x20 DUP5 ADD PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP3 POP PUSH2 0xE83 PUSH1 0x20 DUP6 ADD PUSH2 0xDF2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEAF DUP4 PUSH2 0xDF2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF03 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xEE7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB9 PUSH2 0x1051 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1051 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x1051 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x102A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x104B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E6365DDF252AD1BE2C89B69 0xC2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365A2646970 PUSH7 0x73582212208F71 NUMBER PUSH32 0x442DAA7037D9300683F7D3CDC49CE3475C2DADC381403EBE07359FFB64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "3216:9010:4:-:0;;;3547:82;;;-1:-1:-1;;;;;;3547:82:4;3586:42;3547:82;;;3686:241;;;;;;;;;-1:-1:-1;921:32:0;719:10:2;921:18:0;:32::i;:::-;3707:19:4;;;;;;;;;;;;;-1:-1:-1;;;3707:19:4;;;;;;;;;:5;;:19;:::i;:::-;-1:-1:-1;3733:16:4;;;;;;;;;;;;;-1:-1:-1;;;3733:16:4;;;;;;;;;:7;;:16;:::i;:::-;-1:-1:-1;3756:9:4;:14;;-1:-1:-1;;3756:14:4;3768:2;3756:14;;;3792:26;3777:12;:41;;;3835:10;3756:9;3825:21;;;3756:14;3825:21;;;;;;:36;;;3875:46;3835:10;;3756:9;;3875:46;;;;160:25:5;;;148:2;133:18;;14:177;3875:46:4;;;;;;;;3216:9010;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3216:9010:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3216:9010:4;;;-1:-1:-1;3216:9010:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:380:5;275:1;271:12;;;;318;;;339:61;;393:4;385:6;381:17;371:27;;339:61;446:2;438:6;435:14;415:18;412:38;409:161;;;492:10;487:3;483:20;480:1;473:31;527:4;524:1;517:15;555:4;552:1;545:15;409:161;;196:380;;;:::o;:::-;3216:9010:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1216": {
									"entryPoint": 1983,
									"id": 1216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1171": {
									"entryPoint": 3004,
									"id": 1171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_decimals_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1124": {
									"entryPoint": 3334,
									"id": 1124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_name_609": {
									"entryPoint": 1815,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_symbol_607": {
									"entryPoint": 1673,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 3254,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1078": {
									"entryPoint": 2276,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToBlackList_674": {
									"entryPoint": 1226,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_342": {
									"entryPoint": 2985,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_822": {
									"entryPoint": 981,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_962": {
									"entryPoint": 1304,
									"id": 962,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_709": {
									"entryPoint": null,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_926": {
									"entryPoint": 1526,
									"id": 926,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_387": {
									"entryPoint": 3546,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_897": {
									"entryPoint": 1172,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@managerWallet_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_945": {
									"entryPoint": 1468,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_372": {
									"entryPoint": 3534,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_729": {
									"entryPoint": 835,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlackList_688": {
									"entryPoint": 1324,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 1399,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_357": {
									"entryPoint": 3558,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_427": {
									"entryPoint": 2941,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_719": {
									"entryPoint": 1453,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_739": {
									"entryPoint": null,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_869": {
									"entryPoint": 1003,
									"id": 869,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 1828,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_783": {
									"entryPoint": 1605,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7525:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:5"
															},
															"nodeType": "YulIf",
															"src": "762:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:5",
														"type": ""
													}
												],
												"src": "648:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:5"
															},
															"nodeType": "YulIf",
															"src": "1078:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:5",
														"type": ""
													}
												],
												"src": "981:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1310:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1331:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1340:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:32:5"
															},
															"nodeType": "YulIf",
															"src": "1320:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1381:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1276:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1287:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:5",
														"type": ""
													}
												],
												"src": "1240:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1536:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1609:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1614:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1605:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1601:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1601:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1517:4:5",
														"type": ""
													}
												],
												"src": "1425:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1750:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1738:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1798:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1798:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1791:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1697:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1708:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1719:4:5",
														"type": ""
													}
												],
												"src": "1633:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1956:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1966:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1960:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2007:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2027:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2011:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2065:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2086:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2095:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2090:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2184:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2195:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2180:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2180:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2199:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2176:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2218:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2226:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2214:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2214:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2230:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2210:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2210:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2204:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2169:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2119:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2113:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2127:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2129:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2138:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2141:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2134:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2129:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2109:3:5",
																"statements": []
															},
															"src": "2105:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2279:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2308:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2319:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2304:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2300:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2300:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2260:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2263:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2257:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:13:5"
															},
															"nodeType": "YulIf",
															"src": "2254:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2354:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2389:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2397:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2385:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2385:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2402:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2402:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2381:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2381:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2362:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2354:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1926:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1937:4:5",
														"type": ""
													}
												],
												"src": "1825:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2611:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2707:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2795:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2818:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2795:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2592:4:5",
														"type": ""
													}
												],
												"src": "2427:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3024:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3017:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3017:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3069:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3108:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3113:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3086:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3168:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3184:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3157:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3200:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3212:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3200:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2984:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2998:4:5",
														"type": ""
													}
												],
												"src": "2833:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3429:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3422:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3422:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3502:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3513:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3498:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3498:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3518:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3491:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3589:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3562:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3607:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3619:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3615:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3607:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3389:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3403:4:5",
														"type": ""
													}
												],
												"src": "3238:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3819:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3836:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3886:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3909:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3920:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3905:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:18:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3925:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3968:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3980:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3968:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3796:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3810:4:5",
														"type": ""
													}
												],
												"src": "3645:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4179:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4196:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4207:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4189:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4230:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4241:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4226:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4226:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4219:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4285:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4258:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4258:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4329:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4341:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4352:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4329:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4156:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4170:4:5",
														"type": ""
													}
												],
												"src": "4005:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4540:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4550:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4591:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4602:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4580:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4630:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4641:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:18:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4646:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4619:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4619:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4717:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4732:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4744:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4755:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4740:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4732:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4531:4:5",
														"type": ""
													}
												],
												"src": "4366:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4944:223:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4954:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5006:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4984:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5034:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:18:5"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5050:34:5",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5105:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5116:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5101:18:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5121:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5094:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5146:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5157:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5134:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4921:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4935:4:5",
														"type": ""
													}
												],
												"src": "4770:397:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5363:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5374:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5397:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5408:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5393:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5386:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5447:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:18:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5452:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5425:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5425:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5507:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5518:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5523:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5537:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5549:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5560:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5545:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5537:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5323:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5337:4:5",
														"type": ""
													}
												],
												"src": "5172:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5749:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5766:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5759:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5811:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5839:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5850:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5835:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5835:18:5"
																	},
																	{
																		"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5855:34:5",
																		"type": "",
																		"value": "Error: transfer from blacklist a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5828:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5910:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5921:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5906:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5926:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5899:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5944:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5956:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5967:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5952:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5944:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5726:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:5",
														"type": ""
													}
												],
												"src": "5575:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6083:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6093:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6105:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6116:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6101:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6101:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6093:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6135:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6146:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6128:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6128:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6052:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6063:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6074:4:5",
														"type": ""
													}
												],
												"src": "5982:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6261:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6271:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6283:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6294:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6271:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6313:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6328:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6336:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6306:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6230:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6241:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6252:4:5",
														"type": ""
													}
												],
												"src": "6164:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6428:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6430:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6430:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6430:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6417:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6424:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6420:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6414:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:13:5"
															},
															"nodeType": "YulIf",
															"src": "6411:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6459:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6470:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6473:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6466:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6459:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6384:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6387:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6393:3:5",
														"type": ""
													}
												],
												"src": "6353:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6532:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6563:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6584:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6591:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6596:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6587:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6587:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6577:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6577:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6577:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6628:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6631:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6621:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6621:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6621:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6656:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6659:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6649:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6649:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6649:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6552:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6545:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:9:5"
															},
															"nodeType": "YulIf",
															"src": "6542:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6683:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6692:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6695:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6683:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6517:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6520:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6526:1:5",
														"type": ""
													}
												],
												"src": "6486:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6760:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6819:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6821:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6821:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6821:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6791:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6784:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6784:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6777:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6799:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6810:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6806:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6806:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6814:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6802:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6802:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6796:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6773:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:45:5"
															},
															"nodeType": "YulIf",
															"src": "6770:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6850:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6865:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6868:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6861:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6861:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6850:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6739:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6742:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6748:7:5",
														"type": ""
													}
												],
												"src": "6708:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6930:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6952:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6954:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6954:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6954:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6946:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6949:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6943:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6943:8:5"
															},
															"nodeType": "YulIf",
															"src": "6940:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6995:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6998:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6912:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6915:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6921:4:5",
														"type": ""
													}
												],
												"src": "6881:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7066:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7076:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7093:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7076:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7107:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7137:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7143:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7111:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7184:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7186:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7200:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7208:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7196:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7196:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7186:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7164:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:26:5"
															},
															"nodeType": "YulIf",
															"src": "7154:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7274:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7295:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7302:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7307:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7298:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7298:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7288:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7288:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7339:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7342:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7332:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7332:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7367:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7370:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7360:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7360:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7360:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7230:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7253:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7261:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7250:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7250:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7227:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:38:5"
															},
															"nodeType": "YulIf",
															"src": "7224:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7046:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7055:6:5",
														"type": ""
													}
												],
												"src": "7011:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7428:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7452:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7457:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7488:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7512:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7502:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7396:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BEP20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Error: transfer from blacklist a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d7146102c1578063a9059cbb146102d4578063b09f1266146102e7578063d28d8852146102ef578063dd62ed3e146102f7578063f2fde38b1461033057600080fd5b8063715018a614610255578063893d20e81461025d5780638da5cb5b1461028257806395d89b4114610293578063a0712d681461029b578063a2179ab0146102ae57600080fd5b806332424aa31161011557806332424aa3146101d157806339509351146101de578063417c73a7146101f157806342966c68146102065780634a49ac4c1461021957806370a082311461022c57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a610343565b6040516101679190610ed6565b60405180910390f35b61018361017e366004610e93565b6103d5565b6040519015158152602001610167565b6003545b604051908152602001610167565b6101836101b3366004610e57565b6103eb565b60045460ff165b60405160ff9091168152602001610167565b6004546101bf9060ff1681565b6101836101ec366004610e93565b610494565b6102046101ff366004610e09565b6104ca565b005b610183610214366004610ebd565b610518565b610204610227366004610e09565b61052c565b61019761023a366004610e09565b6001600160a01b031660009081526001602052604090205490565b610204610577565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6000546001600160a01b031661026a565b61015a6105ad565b6101836102a9366004610ebd565b6105bc565b60075461026a906001600160a01b031681565b6101836102cf366004610e93565b6105f6565b6101836102e2366004610e93565b610645565b61015a610689565b61015a610717565b610197610305366004610e24565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020461033e366004610e09565b610724565b60606006805461035290611016565b80601f016020809104026020016040519081016040528092919081815260200182805461037e90611016565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b5050505050905090565b60006103e23384846107bf565b50600192915050565b6001600160a01b03821660009081526008602052604081205460ff161561042d5760405162461bcd60e51b815260040161042490610f60565b60405180910390fd5b6104388484846108e4565b61048a843361048585604051806060016040528060288152602001611068602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610b7d565b6107bf565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103e29185906104859086610ba9565b6000546001600160a01b031633146104f45760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b60006105243383610bbc565b506001919050565b6000546001600160a01b031633146105565760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6000546001600160a01b031633146105a15760405162461bcd60e51b815260040161042490610f2b565b6105ab6000610cb6565b565b60606005805461035290611016565b600080546001600160a01b031633146105e75760405162461bcd60e51b815260040161042490610f2b565b6105243383610d06565b919050565b60006103e23384610485856040518060600160405280602581526020016110d6602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610b7d565b6001600160a01b03821660009081526008602052604081205460ff161561067e5760405162461bcd60e51b815260040161042490610f60565b6103e23384846108e4565b6005805461069690611016565b80601f01602080910402602001604051908101604052809291908181526020018280546106c290611016565b801561070f5780601f106106e45761010080835404028352916020019161070f565b820191906000526020600020905b8154815290600101906020018083116106f257829003601f168201915b505050505081565b6006805461069690611016565b6000546001600160a01b0316331461074e5760405162461bcd60e51b815260040161042490610f2b565b6001600160a01b0381166107b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610424565b6107bc81610cb6565b50565b6001600160a01b0383166108215760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166109485760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610424565b6001600160a01b0382166109aa5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b6109e781604051806060016040528060268152602001611090602691396001600160a01b0386166000908152600160205260409020549190610b7d565b6001600160a01b03808516600090815260016020526040902091909155600754838216911614610b18576000610a296064610a2384600a610dce565b90610dda565b9050610a57610a388383610de6565b6001600160a01b03851660009081526001602052604090205490610ba9565b6001600160a01b0380851660008181526001602052604090209290925585166000805160206110b6833981519152610a8f8585610de6565b60405190815260200160405180910390a36007546001600160a01b0316600090815260016020526040902054610ac59082610ba9565b600780546001600160a01b03908116600090815260016020908152604091829020949094559154915184815291811692908716916000805160206110b6833981519152910160405180910390a350505050565b6001600160a01b038216600090815260016020526040902054610b3b9082610ba9565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206110b6833981519152906108d79085815260200190565b60008184841115610ba15760405162461bcd60e51b81526004016104249190610ed6565b505050900390565b6000610bb58284610fa6565b9392505050565b6001600160a01b038216610c1c5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610424565b610c59816040518060600160405280602281526020016110fb602291396001600160a01b0385166000908152600160205260409020549190610b7d565b6001600160a01b038316600090815260016020526040902055600354610c7f9082610de6565b6003556040518181526000906001600160a01b038416906000805160206110b6833981519152906020015b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610d5c5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610424565b600354610d699082610ba9565b6003556001600160a01b038216600090815260016020526040902054610d8f9082610ba9565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206110b683398151915290610caa9085815260200190565b6000610bb58284610fe0565b6000610bb58284610fbe565b6000610bb58284610fff565b80356001600160a01b03811681146105f157600080fd5b600060208284031215610e1b57600080fd5b610bb582610df2565b60008060408385031215610e3757600080fd5b610e4083610df2565b9150610e4e60208401610df2565b90509250929050565b600080600060608486031215610e6c57600080fd5b610e7584610df2565b9250610e8360208501610df2565b9150604084013590509250925092565b60008060408385031215610ea657600080fd5b610eaf83610df2565b946020939093013593505050565b600060208284031215610ecf57600080fd5b5035919050565b600060208083528351808285015260005b81811015610f0357858101830151858201604001528201610ee7565b81811115610f15576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4572726f723a207472616e736665722066726f6d20626c61636b6c697374206160408201526564647265737360d01b606082015260800190565b60008219821115610fb957610fb9611051565b500190565b600082610fdb57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610ffa57610ffa611051565b500290565b60008282101561101157611011611051565b500390565b600181811c9082168061102a57607f821691505b6020821081141561104b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212208f71437f442daa7037d9300683f7d3cdc49ce3475c2dadc381403ebe07359ffb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA2179AB0 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x417C73A7 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x4A49AC4C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x197 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26A JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x26A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x689 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x717 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLER DUP5 DUP5 PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 DUP5 DUP5 DUP5 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x48A DUP5 CALLER PUSH2 0x485 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1068 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3E2 SWAP2 DUP6 SWAP1 PUSH2 0x485 SWAP1 DUP7 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x524 CALLER DUP4 PUSH2 0xBBC JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x5AB PUSH1 0x0 PUSH2 0xCB6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x524 CALLER DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLER DUP5 PUSH2 0x485 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D6 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x3E2 CALLER DUP5 DUP5 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x1016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x70F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x7BC DUP2 PUSH2 0xCB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x9E7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1090 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SLOAD DUP4 DUP3 AND SWAP2 AND EQ PUSH2 0xB18 JUMPI PUSH1 0x0 PUSH2 0xA29 PUSH1 0x64 PUSH2 0xA23 DUP5 PUSH1 0xA PUSH2 0xDCE JUMP JUMPDEST SWAP1 PUSH2 0xDDA JUMP JUMPDEST SWAP1 POP PUSH2 0xA57 PUSH2 0xA38 DUP4 DUP4 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA8F DUP6 DUP6 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAC5 SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB3B SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x8D7 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10FB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xC7F SWAP1 DUP3 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD69 SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD8F SWAP1 DUP3 PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xCAA SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xFFF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB5 DUP3 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE40 DUP4 PUSH2 0xDF2 JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E PUSH1 0x20 DUP5 ADD PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE75 DUP5 PUSH2 0xDF2 JUMP JUMPDEST SWAP3 POP PUSH2 0xE83 PUSH1 0x20 DUP6 ADD PUSH2 0xDF2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEAF DUP4 PUSH2 0xDF2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF03 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xEE7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB9 PUSH2 0x1051 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1051 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x1051 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x102A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x104B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E6365DDF252AD1BE2C89B69 0xC2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365A2646970 PUSH7 0x73582212208F71 NUMBER PUSH32 0x442DAA7037D9300683F7D3CDC49CE3475C2DADC381403EBE07359FFB64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "3216:9010:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4640:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5812:153;;;;;;:::i;:::-;;:::i;:::-;;;1798:14:5;;1791:22;1773:41;;1761:2;1746:18;5812:153:4;1633:187:5;4784:96:4;4862:12;;4784:96;;;6128:25:5;;;6116:2;6101:18;4784:96:4;5982:177:5;6410:388:4;;;;;;:::i;:::-;;:::i;4350:88::-;4423:9;;;;4350:88;;;6336:4:5;6324:17;;;6306:36;;6294:2;6279:18;4350:88:4;6164:184:5;3462:22:4;;;;;;;;;7180:200;;;;;;:::i;:::-;;:::i;3935:96::-;;;;;;:::i;:::-;;:::i;:::-;;8508:110;;;;;;:::i;:::-;;:::i;4041:102::-;;;;;;:::i;:::-;;:::i;4934:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5025:18:4;5002:7;5025:18;;;:9;:18;;;;;;;4934:115;1668:101:0;;;:::i;4203:88:4:-;4255:7;1108:6:0;-1:-1:-1;;;;;1108:6:0;4203:88:4;;;-1:-1:-1;;;;;1589:32:5;;;1571:51;;1559:2;1544:18;4203:88:4;1425:203:5;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;4495:92:4;;;:::i;8303:120::-;;;;;;:::i;:::-;;:::i;3547:82::-;;;;;-1:-1:-1;;;;;3547:82:4;;;7852:251;;;;;;:::i;:::-;;:::i;5243:246::-;;;;;;:::i;:::-;;:::i;3489:21::-;;;:::i;3515:19::-;;;:::i;5543:139::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5649:18:4;;;5626:7;5649:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5543:139;1918:198:0;;;;;;:::i;:::-;;:::i;4640:88:4:-;4688:13;4717:5;4710:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4640:88;:::o;5812:153::-;5889:4;5902:39;719:10:2;5925:7:4;5934:6;5902:8;:39::i;:::-;-1:-1:-1;5955:4:4;5812:153;;;;:::o;6410:388::-;-1:-1:-1;;;;;6531:20:4;;6510:4;6531:20;;;:9;:20;;;;;;;;:29;6523:80;;;;-1:-1:-1;;;6523:80:4;;;;;;;:::i;:::-;;;;;;;;;6610:36;6620:6;6628:9;6639:6;6610:9;:36::i;:::-;6653:121;6662:6;719:10:2;6684:89:4;6722:6;6684:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6684:19:4;;;;;;:11;:19;;;;;;;;719:10:2;6684:33:4;;;;;;;;;;:37;:89::i;:::-;6653:8;:121::i;:::-;-1:-1:-1;6788:4:4;6410:388;;;;;:::o;7180:200::-;719:10:2;7260:4:4;7305:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;7305:34:4;;;;;;;;;;7260:4;;7273:83;;7296:7;;7305:50;;7344:10;7305:38;:50::i;3935:96::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4000:18:4::1;;::::0;;;:9:::1;:18;::::0;;;;:25;;-1:-1:-1;;4000:25:4::1;4021:4;4000:25;::::0;;3935:96::o;8508:110::-;8554:4;8567:27;719:10:2;8587:6:4;8567:5;:27::i;:::-;-1:-1:-1;8608:4:4;;8508:110;-1:-1:-1;8508:110:4:o;4041:102::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4111:18:4::1;4132:5;4111:18:::0;;;:9:::1;:18;::::0;;;;:26;;-1:-1:-1;;4111:26:4::1;::::0;;4041:102::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4495:92:4:-;4545:13;4574:7;4567:14;;;;;:::i;8303:120::-;8359:4;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8372:27:4::1;719:10:2::0;8392:6:4::1;8372:5;:27::i;1318:1:0:-;8303:120:4::0;;;:::o;7852:251::-;7937:4;7950:129;719:10:2;7973:7:4;7982:96;8021:15;7982:96;;;;;;;;;;;;;;;;;719:10:2;7982:25:4;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;7982:34:4;;;;;;;;;;;;:38;:96::i;5243:246::-;-1:-1:-1;;;;;5344:20:4;;5323:4;5344:20;;;:9;:20;;;;;;;;:29;5336:80;;;;-1:-1:-1;;;5336:80:4;;;;;;;:::i;:::-;5423:42;719:10:2;5447:9:4;5458:6;5423:9;:42::i;3489:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3515:19::-;;;;;;;:::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3440:2:5;1998:73:0::1;::::0;::::1;3422:21:5::0;3479:2;3459:18;;;3452:30;3518:34;3498:18;;;3491:62;-1:-1:-1;;;3569:18:5;;;3562:36;3615:19;;1998:73:0::1;3238:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;11509:320:4:-;-1:-1:-1;;;;;11599:19:4;;11591:68;;;;-1:-1:-1;;;11591:68:4;;3035:2:5;11591:68:4;;;3017:21:5;3074:2;3054:18;;;3047:30;3113:34;3093:18;;;3086:62;-1:-1:-1;;;3164:18:5;;;3157:34;3208:19;;11591:68:4;2833:400:5;11591:68:4;-1:-1:-1;;;;;11674:21:4;;11666:68;;;;-1:-1:-1;;;11666:68:4;;5374:2:5;11666:68:4;;;5356:21:5;5413:2;5393:18;;;5386:30;5452:34;5432:18;;;5425:62;-1:-1:-1;;;5503:18:5;;;5496:32;5545:19;;11666:68:4;5172:398:5;11666:68:4;-1:-1:-1;;;;;11743:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11791:32;;6128:25:5;;;11791:32:4;;6101:18:5;11791:32:4;;;;;;;;11509:320;;;:::o;9078:832::-;-1:-1:-1;;;;;9172:20:4;;9164:70;;;;-1:-1:-1;;;9164:70:4;;2629:2:5;9164:70:4;;;2611:21:5;2668:2;2648:18;;;2641:30;2707:34;2687:18;;;2680:62;-1:-1:-1;;;2758:18:5;;;2751:35;2803:19;;9164:70:4;2427:401:5;9164:70:4;-1:-1:-1;;;;;9249:23:4;;9241:71;;;;-1:-1:-1;;;9241:71:4;;4568:2:5;9241:71:4;;;4550:21:5;4607:2;4587:18;;;4580:30;4646:34;4626:18;;;4619:62;-1:-1:-1;;;4697:18:5;;;4690:33;4740:19;;9241:71:4;4366:399:5;9241:71:4;9339;9361:6;9339:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9339:17:4;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;9319:17:4;;;;;;;:9;:17;;;;;:91;;;;9433:13;;9420:26;;;9433:13;;9420:26;9417:379;;9456:17;9476:23;9495:3;9476:14;:6;9487:2;9476:10;:14::i;:::-;:18;;:23::i;:::-;9456:43;-1:-1:-1;9531:47:4;9556:21;:6;9456:43;9556:10;:21::i;:::-;-1:-1:-1;;;;;9531:20:4;;;;;;:9;:20;;;;;;;:24;:47::i;:::-;-1:-1:-1;;;;;9508:20:4;;;;;;;:9;:20;;;;;:70;;;;9592:50;;-1:-1:-1;;;;;;;;;;;9620:21:4;:6;9631:9;9620:10;:21::i;:::-;9592:50;;6128:25:5;;;6116:2;6101:18;9592:50:4;;;;;;;9688:13;;-1:-1:-1;;;;;9688:13:4;9678:24;;;;:9;:24;;;;;;:39;;9707:9;9678:28;:39::i;:::-;9661:13;;;-1:-1:-1;;;;;9661:13:4;;;9651:24;;;;:9;:24;;;;;;;;;:66;;;;9748:13;;9731:42;;6128:25:5;;;9748:13:4;;;;9731:42;;;;-1:-1:-1;;;;;;;;;;;9731:42:4;6101:18:5;9731:42:4;;;;;;;9782:7;9078:832;;;:::o;9417:379::-;-1:-1:-1;;;;;9825:20:4;;;;;;:9;:20;;;;;;:32;;9850:6;9825:24;:32::i;:::-;-1:-1:-1;;;;;9802:20:4;;;;;;;:9;:20;;;;;;;:55;;;;9869:35;;;;;;-1:-1:-1;;;;;;;;;;;9869:35:4;;;9897:6;6128:25:5;;6116:2;6101:18;;5982:177;4945:231:3;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:3;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:3;;;4945:231::o;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:3:o;10767:330:4:-;-1:-1:-1;;;;;10839:21:4;;10831:67;;;;-1:-1:-1;;;10831:67:4;;4972:2:5;10831:67:4;;;4954:21:5;5011:2;4991:18;;;4984:30;5050:34;5030:18;;;5023:62;-1:-1:-1;;;5101:18:5;;;5094:31;5142:19;;10831:67:4;4770:397:5;10831:67:4;10928:68;10951:6;10928:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10928:18:4;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;10907:18:4;;;;;;:9;:18;;;;;:89;11018:12;;:24;;11035:6;11018:16;:24::i;:::-;11003:12;:39;11054:37;;6128:25:5;;;11080:1:4;;-1:-1:-1;;;;;11054:37:4;;;-1:-1:-1;;;;;;;;;;;11054:37:4;6116:2:5;6101:18;11054:37:4;;;;;;;;10767:330;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;10169:290:4:-;-1:-1:-1;;;;;10241:21:4;;10233:65;;;;-1:-1:-1;;;10233:65:4;;3847:2:5;10233:65:4;;;3829:21:5;3886:2;3866:18;;;3859:30;3925:33;3905:18;;;3898:61;3976:18;;10233:65:4;3645:355:5;10233:65:4;10322:12;;:24;;10339:6;10322:16;:24::i;:::-;10307:12;:39;-1:-1:-1;;;;;10374:18:4;;;;;;:9;:18;;;;;;:30;;10397:6;10374:22;:30::i;:::-;-1:-1:-1;;;;;10353:18:4;;;;;;:9;:18;;;;;;:51;;;;10416:37;;10353:18;;;-1:-1:-1;;;;;;;;;;;10416:37:4;;;10446:6;6128:25:5;;6116:2;6101:18;;5982:177;3451:96:3;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:5:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:5;;1240:180;-1:-1:-1;1240:180:5:o;1825:597::-;1937:4;1966:2;1995;1984:9;1977:21;2027:6;2021:13;2070:6;2065:2;2054:9;2050:18;2043:34;2095:1;2105:140;2119:6;2116:1;2113:13;2105:140;;;2214:14;;;2210:23;;2204:30;2180:17;;;2199:2;2176:26;2169:66;2134:10;;2105:140;;;2263:6;2260:1;2257:13;2254:91;;;2333:1;2328:2;2319:6;2308:9;2304:22;2300:31;2293:42;2254:91;-1:-1:-1;2406:2:5;2385:15;-1:-1:-1;;2381:29:5;2366:45;;;;2413:2;2362:54;;1825:597;-1:-1:-1;;;1825:597:5:o;4005:356::-;4207:2;4189:21;;;4226:18;;;4219:30;4285:34;4280:2;4265:18;;4258:62;4352:2;4337:18;;4005:356::o;5575:402::-;5777:2;5759:21;;;5816:2;5796:18;;;5789:30;5855:34;5850:2;5835:18;;5828:62;-1:-1:-1;;;5921:2:5;5906:18;;5899:36;5967:3;5952:19;;5575:402::o;6353:128::-;6393:3;6424:1;6420:6;6417:1;6414:13;6411:39;;;6430:18;;:::i;:::-;-1:-1:-1;6466:9:5;;6353:128::o;6486:217::-;6526:1;6552;6542:132;;6596:10;6591:3;6587:20;6584:1;6577:31;6631:4;6628:1;6621:15;6659:4;6656:1;6649:15;6542:132;-1:-1:-1;6688:9:5;;6486:217::o;6708:168::-;6748:7;6814:1;6810;6806:6;6802:14;6799:1;6796:21;6791:1;6784:9;6777:17;6773:45;6770:71;;;6821:18;;:::i;:::-;-1:-1:-1;6861:9:5;;6708:168::o;6881:125::-;6921:4;6949:1;6946;6943:8;6940:34;;;6954:18;;:::i;:::-;-1:-1:-1;6991:9:5;;6881:125::o;7011:380::-;7090:1;7086:12;;;;7133;;;7154:61;;7208:4;7200:6;7196:17;7186:27;;7154:61;7261:2;7253:6;7250:14;7230:18;7227:38;7224:161;;;7307:10;7302:3;7298:20;7295:1;7288:31;7342:4;7339:1;7332:15;7370:4;7367:1;7360:15;7224:161;;7011:380;;;:::o;7396:127::-;7457:10;7452:3;7448:20;7445:1;7438:31;7488:4;7485:1;7478:15;7512:4;7509:1;7502:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "886800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "2336",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"addToBlackList(address)": "26817",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24643",
								"balanceOf(address)": "2670",
								"burn(uint256)": "infinite",
								"decimals()": "2408",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2365",
								"increaseAllowance(address,uint256)": "27022",
								"managerWallet()": "2470",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"removeFromBlackList(address)": "26855",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28441"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3586,
									"end": 3628,
									"name": "PUSH",
									"source": 4,
									"value": "2C40B38EF349AEA24AA48ED1A6ED3DB3860EFFA3"
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3547,
									"end": 3629,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3686,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "48616C6F206E6F6465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3712,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3707,
									"end": 3712,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3707,
									"end": 3726,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "48616C6F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3740,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 3733,
									"end": 3740,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3733,
									"end": 3749,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3768,
									"end": 3770,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3818,
									"name": "PUSH",
									"source": 4,
									"value": "4EE2D6D415B85ACEF8100000000"
								},
								{
									"begin": 3777,
									"end": 3789,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3777,
									"end": 3818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3777,
									"end": 3818,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3777,
									"end": 3818,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3835,
									"end": 3845,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3770,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3846,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3861,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3861,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3825,
									"end": 3861,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3835,
									"end": 3845,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3835,
									"end": 3845,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 160,
									"end": 185,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 160,
									"end": 185,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 160,
									"end": 185,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 148,
									"end": 150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 133,
									"end": 151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3875,
									"end": 3921,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 576,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 196,
									"end": 576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 275,
									"end": 276,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 271,
									"end": 283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 271,
									"end": 283,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 271,
									"end": 283,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 318,
									"end": 330,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 318,
									"end": 330,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 318,
									"end": 330,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 339,
									"end": 400,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 339,
									"end": 400,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 393,
									"end": 397,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 385,
									"end": 391,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 381,
									"end": 398,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 371,
									"end": 398,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 371,
									"end": 398,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 339,
									"end": 400,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 339,
									"end": 400,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 446,
									"end": 448,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 438,
									"end": 444,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 435,
									"end": 449,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 415,
									"end": 433,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 412,
									"end": 450,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 409,
									"end": 570,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 409,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 409,
									"end": 570,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 492,
									"end": 502,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 487,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 503,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 480,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 473,
									"end": 504,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 527,
									"end": 531,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 524,
									"end": 525,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 517,
									"end": 532,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 555,
									"end": 559,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 552,
									"end": 553,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 560,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 409,
									"end": 570,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 409,
									"end": 570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 409,
									"end": 570,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 576,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 196,
									"end": 576,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 196,
									"end": 576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 576,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 576,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 196,
									"end": 576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 12226,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f71437f442daa7037d9300683f7d3cdc49ce3475c2dadc381403ebe07359ffb64736f6c63430008070033",
									".code": [
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "B09F1266"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "D28D8852"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "893D20E8"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "A0712D68"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "A2179AB0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "32424AA3"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "32424AA3"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "417C73A7"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "4A49AC4C"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 12226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1633,
											"end": 1820,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4862,
											"end": 4874,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4784,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5982,
											"end": 6159,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6324,
											"end": 6341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6324,
											"end": 6341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6324,
											"end": 6341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6342,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 6164,
											"end": 6348,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5034,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5049,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1425,
											"end": 1628,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5660,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5682,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4701,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4728,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 5893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5902,
											"end": 5941,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5902,
											"end": 5941,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5902,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5965,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6560,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6523,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6610,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6620,
											"end": 6626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6610,
											"end": 6646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6610,
											"end": 6646,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6610,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH data",
											"source": 4,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6695,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6684,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6653,
											"end": 6774,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6653,
											"end": 6774,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6653,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6798,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7180,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7260,
											"end": 7264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7339,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7264,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7273,
											"end": 7356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7303,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7305,
											"end": 7355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7354,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7305,
											"end": 7355,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 4031,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8587,
											"end": 8593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8567,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8618,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4137,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4137,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4143,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4495,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4567,
											"end": 4581,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8359,
											"end": 8363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8372,
											"end": 8399,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8423,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7852,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7937,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 8021,
											"end": 8036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH data",
											"source": 4,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 7993,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8007,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7982,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7982,
											"end": 8078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5243,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5344,
											"end": 5364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5373,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5336,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5447,
											"end": 5456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5423,
											"end": 5465,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3510,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3238,
											"end": 3640,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3113,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2833,
											"end": 3233,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11591,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11674,
											"end": 11695,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11674,
											"end": 11695,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5486,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5528,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5545,
											"end": 5564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5172,
											"end": 5570,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11666,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11754,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11770,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11779,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11779,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11791,
											"end": 11823,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11509,
											"end": 11829,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9172,
											"end": 9192,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9172,
											"end": 9192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2741,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2427,
											"end": 2828,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9164,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4571,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 4610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4740,
											"end": 4759,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4740,
											"end": 4759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4366,
											"end": 4765,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9241,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9361,
											"end": 9367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH data",
											"source": 4,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9348,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9339,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9328,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9336,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9319,
											"end": 9410,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9433,
											"end": 9446,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9433,
											"end": 9446,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9433,
											"end": 9446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9433,
											"end": 9446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9446,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9417,
											"end": 9796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9495,
											"end": 9498,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 9476,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9556,
											"end": 9562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9499,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9556,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9531,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9531,
											"end": 9578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9531,
											"end": 9578,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9531,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9578,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9620,
											"end": 9626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9631,
											"end": 9640,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9620,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9642,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9688,
											"end": 9701,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9688,
											"end": 9701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9688,
											"end": 9701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9687,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9702,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9707,
											"end": 9716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9678,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9678,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9717,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9717,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9717,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9761,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9773,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9910,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9417,
											"end": 9796,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9417,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9834,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9845,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 9856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9857,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9857,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9857,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9869,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9897,
											"end": 9903,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6159,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5104,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5159,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4945,
											"end": 5176,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10767,
											"end": 11097,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10767,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10839,
											"end": 10860,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5014,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5084,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5023,
											"end": 5085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5101,
											"end": 5119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5125,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5161,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5142,
											"end": 5161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4770,
											"end": 5167,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10831,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10951,
											"end": 10957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH data",
											"source": 4,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10937,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10928,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10996,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11030,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11018,
											"end": 11030,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11035,
											"end": 11041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11018,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11015,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11003,
											"end": 11042,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11054,
											"end": 11091,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10767,
											"end": 11097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10767,
											"end": 11097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10767,
											"end": 11097,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10169,
											"end": 10459,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 10169,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10241,
											"end": 10262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3898,
											"end": 3959,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3645,
											"end": 4000,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10233,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10322,
											"end": 10334,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10322,
											"end": 10334,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10339,
											"end": 10345,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10322,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10319,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10307,
											"end": 10346,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10374,
											"end": 10404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 10374,
											"end": 10404,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10374,
											"end": 10404,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10374,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10416,
											"end": 10453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10416,
											"end": 10453,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10416,
											"end": 10453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10416,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10416,
											"end": 10453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10452,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6159,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1355,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2126,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4005,
											"end": 4361,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4005,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4285,
											"end": 4319,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4361,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5575,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5575,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5789,
											"end": 5819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 5889,
											"name": "PUSH",
											"source": 5,
											"value": "4572726F723A207472616E736665722066726F6D20626C61636B6C6973742061"
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5828,
											"end": 5890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 5935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5952,
											"end": 5971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6353,
											"end": 6481,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6353,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6427,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6450,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6411,
											"end": 6450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6486,
											"end": 6703,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 6486,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6542,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 6542,
											"end": 6674,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6606,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6587,
											"end": 6607,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6621,
											"end": 6636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6659,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6542,
											"end": 6674,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 6542,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6697,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6486,
											"end": 6703,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6708,
											"end": 6876,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6708,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6812,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6802,
											"end": 6816,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6817,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6794,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6841,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6770,
											"end": 6841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6876,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6881,
											"end": 7006,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6881,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 6951,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6974,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6940,
											"end": 6974,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 7000,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 7006,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7133,
											"end": 7145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7133,
											"end": 7145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7133,
											"end": 7145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7154,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 7154,
											"end": 7215,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7208,
											"end": 7212,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7154,
											"end": 7215,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 7154,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7264,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7265,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7317,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 7302,
											"end": 7305,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7298,
											"end": 7318,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7319,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7342,
											"end": 7346,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 7339,
											"end": 7340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7374,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7375,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7391,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7396,
											"end": 7523,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7396,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7457,
											"end": 7467,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 7452,
											"end": 7455,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7448,
											"end": 7468,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7445,
											"end": 7446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7478,
											"end": 7493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7516,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7517,
											"name": "REVERT",
											"source": 5
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"addToBlackList(address)": "417c73a7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"managerWallet()": "a2179ab0",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeFromBlackList(address)": "4a49ac4c",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HaloNode.sol\":\"HaloNode\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"HaloNode.sol\":{\"keccak256\":\"0x667021f7454c067f4099be6a72d85170d985d6e9d3d7980ab3ffb46a17ff13f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c47c33e620508bde70aaa9737db329670fbab4eac2354d32c516fe8a44910b\",\"dweb:/ipfs/QmPXSFQBxQN86eM8pMiDS3Tg8VKt61jjnvSDS1DkT4Lrnv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HaloNode.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"HaloNode.sol\":{\"keccak256\":\"0x667021f7454c067f4099be6a72d85170d985d6e9d3d7980ab3ffb46a17ff13f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c47c33e620508bde70aaa9737db329670fbab4eac2354d32c516fe8a44910b\",\"dweb:/ipfs/QmPXSFQBxQN86eM8pMiDS3Tg8VKt61jjnvSDS1DkT4Lrnv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 167,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								166
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 166,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 161,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 160,
												"id": 163,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 166,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							478
						]
					},
					"id": 479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "SafeMath",
							"nameLocation": "475:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "702:140:3",
										"statements": [
											{
												"id": 199,
												"nodeType": "UncheckedBlock",
												"src": "712:124:3",
												"statements": [
													{
														"assignments": [
															182
														],
														"declarations": [
															{
																"constant": false,
																"id": 182,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 199,
																"src": "736:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 186,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 184,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "752:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 187,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "771:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 194,
														"nodeType": "IfStatement",
														"src": "767:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 193,
															"nodeType": "Return",
															"src": "778:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 196,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "823:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 197,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 198,
														"nodeType": "Return",
														"src": "809:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "642:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "653:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:3"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "687:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:3"
									},
									"scope": 478,
									"src": "626:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1064:113:3",
										"statements": [
											{
												"id": 227,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1102:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 214,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "1106:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 220,
														"nodeType": "IfStatement",
														"src": "1098:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 212,
															"id": 219,
															"nodeType": "Return",
															"src": "1109:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 222,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "1154:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 223,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 206,
																		"src": "1158:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 225,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 212,
														"id": 226,
														"nodeType": "Return",
														"src": "1140:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1004:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1015:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:3"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1049:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1055:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:3"
									},
									"scope": 478,
									"src": "988:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1401:417:3",
										"statements": [
											{
												"id": 269,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1669:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 248,
														"nodeType": "IfStatement",
														"src": "1665:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 240,
															"id": 247,
															"nodeType": "Return",
															"src": "1677:16:3"
														}
													},
													{
														"assignments": [
															250
														],
														"declarations": [
															{
																"constant": false,
																"id": 250,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 269,
																"src": "1707:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 249,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 254,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1719:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 252,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1723:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 255,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1742:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 256,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "1746:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1751:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 264,
														"nodeType": "IfStatement",
														"src": "1738:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 240,
															"id": 263,
															"nodeType": "Return",
															"src": "1754:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 266,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1799:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 240,
														"id": 268,
														"nodeType": "Return",
														"src": "1785:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1341:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1352:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1386:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1392:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:3"
									},
									"scope": 478,
									"src": "1325:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2043:114:3",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2081:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "2077:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 289,
															"nodeType": "Return",
															"src": "2089:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 292,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "2134:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 293,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 282,
														"id": 296,
														"nodeType": "Return",
														"src": "2120:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1983:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1994:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2028:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2034:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 478,
									"src": "1967:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "2392:114:3",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "2430:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2426:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 310,
															"id": 317,
															"nodeType": "Return",
															"src": "2438:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "2483:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 321,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "2487:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 310,
														"id": 324,
														"nodeType": "Return",
														"src": "2469:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "2383:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:3"
									},
									"scope": 478,
									"src": "2316:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2808:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2825:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 338,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2829:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 340,
												"nodeType": "Return",
												"src": "2818:12:3"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2754:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2765:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2799:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:3"
									},
									"scope": 478,
									"src": "2741:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3175:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 352,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3192:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 353,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3196:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "3185:12:3"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3121:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3132:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3166:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:3"
									},
									"scope": 478,
									"src": "3108:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3518:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 367,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "3535:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 368,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "3539:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 370,
												"nodeType": "Return",
												"src": "3528:12:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3464:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3475:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3509:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:3"
									},
									"scope": 478,
									"src": "3451:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3903:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3920:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 383,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "3924:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 381,
												"id": 385,
												"nodeType": "Return",
												"src": "3913:12:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3849:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3860:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:3"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3894:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:3"
									},
									"scope": 478,
									"src": "3836:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "4452:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 397,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "4469:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 398,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4473:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 400,
												"nodeType": "Return",
												"src": "4462:12:3"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4398:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4409:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4443:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:3"
									},
									"scope": 478,
									"src": "4385:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "5070:106:3",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "5112:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "5117:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 418,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5120:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 414,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 421,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5154:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 422,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "5158:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 413,
														"id": 424,
														"nodeType": "Return",
														"src": "5147:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4967:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4986:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5005:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "5061:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:3"
									},
									"scope": 478,
									"src": "4945:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "5785:105:3",
										"statements": [
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "5827:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 443,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5834:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5868:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "5872:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 438,
														"id": 449,
														"nodeType": "Return",
														"src": "5861:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5682:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5701:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5720:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5776:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:3"
									},
									"scope": 478,
									"src": "5660:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "6661:105:3",
										"statements": [
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 465,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6703:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 468,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6710:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 464,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 470,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "6744:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 472,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "6748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 463,
														"id": 474,
														"nodeType": "Return",
														"src": "6737:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6558:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6577:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6596:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "6652:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:3"
									},
									"scope": 478,
									"src": "6536:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 479,
							"src": "467:6301:3",
							"usedErrors": []
						}
					],
					"src": "92:6677:3"
				},
				"id": 3
			},
			"HaloNode.sol": {
				"ast": {
					"absolutePath": "HaloNode.sol",
					"exportedSymbols": {
						"Context": [
							166
						],
						"HaloNode": [
							1247
						],
						"IBEP20": [
							582
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeMath": [
							478
						]
					},
					"id": 1248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 105,
							"src": "62:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 145,
							"src": "116:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 479,
							"src": "180:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IBEP20",
							"nameLocation": "251:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "263:64:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "340:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "377:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:9:4"
									},
									"scope": 582,
									"src": "331:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "392:49:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "454:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "488:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 492,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:7:4"
									},
									"scope": 582,
									"src": "445:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "501:47:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "561:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "593:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "593:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:15:4"
									},
									"scope": 582,
									"src": "552:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "614:43:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "670:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "700:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "700:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:15:4"
									},
									"scope": 582,
									"src": "661:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "721:50:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "784:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:2:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "818:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:9:4"
									},
									"scope": 582,
									"src": "775:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "833:70:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "916:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "934:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "926:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:17:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "966:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:9:4"
									},
									"scope": 582,
									"src": "907:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "981:203:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1197:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1214:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1206:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1233:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1225:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:35:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1259:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1259:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:6:4"
									},
									"scope": 582,
									"src": "1188:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1271:258:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1542:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1560:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1552:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:33:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1608:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:9:4"
									},
									"scope": 582,
									"src": "1533:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "1623:629:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2265:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2281:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2273:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2298:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2290:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:33:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2324:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:6:4"
									},
									"scope": 582,
									"src": "2256:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "2336:288:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2637:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2658:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2650:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2674:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2666:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:51:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2719:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2719:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:6:4"
									},
									"scope": 582,
									"src": "2628:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "2731:153:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 572,
									"name": "Transfer",
									"nameLocation": "2894:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2903:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2925:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2953:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2945:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:57:4"
									},
									"src": "2888:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "2966:145:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 581,
									"name": "Approval",
									"nameLocation": "3121:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3146:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3130:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3153:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3186:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3178:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:63:4"
									},
									"src": "3115:78:4"
								}
							],
							"scope": 1248,
							"src": "241:2955:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 583,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "3237:7:4"
									},
									"id": 584,
									"nodeType": "InheritanceSpecifier",
									"src": "3237:7:4"
								},
								{
									"baseName": {
										"id": 585,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "3246:6:4"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "3246:6:4"
								},
								{
									"baseName": {
										"id": 587,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "3254:7:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "3254:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247,
								104,
								582,
								166
							],
							"name": "HaloNode",
							"nameLocation": "3225:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 478,
										"src": "3273:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "3267:27:4",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3286:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 595,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "3337:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3300:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 594,
										"keyType": {
											"id": 592,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3309:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3300:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 593,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3320:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 601,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "3411:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3353:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 600,
										"keyType": {
											"id": 596,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3362:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3353:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 599,
											"keyType": {
												"id": 597,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3382:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3373:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 598,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3393:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "3445:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3429:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3429:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 605,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "3475:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3462:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 604,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3462:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 607,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3503:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3489:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 606,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3489:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 609,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3529:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3515:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 608,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3515:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2179ab0",
									"id": 615,
									"mutability": "mutable",
									"name": "managerWallet",
									"nameLocation": "3562:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3547:82:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 610,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3547:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307832633430623338456633343961656132344141343865443161366544334442333836304566464133",
												"id": 613,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3586:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x2c40b38Ef349aea24AA48eD1a6eD3DB3860EfFA3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 612,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "3578:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 611,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3578:8:4",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3578:51:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3670:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "3636:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 618,
										"keyType": {
											"id": 616,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3645:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3636:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 617,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3656:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3700:227:4",
										"statements": [
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 622,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "3707:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "48616c6f206e6f6465",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3715:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e2bcc20e8d11b650a492aec29a516fc8924d578c125fe3893987a81550d989ad",
															"typeString": "literal_string \"Halo node\""
														},
														"value": "Halo node"
													},
													"src": "3707:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "3707:19:4"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 626,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3733:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "48616c6f",
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3743:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3ebdac13a80ed72191914a3e5ac0a9b1138bf601e8ce22bc1b75c62fc1f90f15",
															"typeString": "literal_string \"Halo\""
														},
														"value": "Halo"
													},
													"src": "3733:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "3733:16:4"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 630,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "3756:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3756:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "3756:14:4"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3777:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030303030303030",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3792:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"value": "100000000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3810:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3816:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3810:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3792:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														}
													},
													"src": "3777:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "3777:41:4"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 642,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3825:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 645,
														"indexExpression": {
															"expression": {
																"id": 643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3835:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3835:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3825:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 646,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3849:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3825:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "3825:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3892:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3884:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3884:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3884:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3896:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3896:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3908:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "3875:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3875:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "EmitStatement",
												"src": "3870:51:4"
											}
										]
									},
									"id": 660,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3697:2:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:0:4"
									},
									"scope": 1247,
									"src": "3686:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3993:38:4",
										"statements": [
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 667,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4000:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 669,
														"indexExpression": {
															"id": 668,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4010:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4000:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4021:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4000:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "4000:25:4"
											}
										]
									},
									"functionSelector": "417c73a7",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3983:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3983:9:4"
										}
									],
									"name": "addToBlackList",
									"nameLocation": "3944:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:17:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3993:0:4"
									},
									"scope": 1247,
									"src": "3935:96:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "4104:39:4",
										"statements": [
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 681,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4111:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 683,
														"indexExpression": {
															"id": 682,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "4121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4111:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4132:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4111:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "4111:26:4"
											}
										]
									},
									"functionSelector": "4a49ac4c",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 678,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4094:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4094:9:4"
										}
									],
									"name": "removeFromBlackList",
									"nameLocation": "4050:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4078:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4070:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:17:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4104:0:4"
									},
									"scope": 1247,
									"src": "4041:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										513
									],
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "4264:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "4278:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:7:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 694,
												"id": 697,
												"nodeType": "Return",
												"src": "4271:14:4"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "4149:50:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "4212:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 691,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4232:8:4"
									},
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4220:2:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "4255:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:9:4"
									},
									"scope": 1247,
									"src": "4203:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										495
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "4409:29:4",
										"statements": [
											{
												"expression": {
													"id": 706,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "4423:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 705,
												"id": 707,
												"nodeType": "Return",
												"src": "4416:16:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "4297:49:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4359:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4379:8:4"
									},
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4367:2:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "4402:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4402:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4401:7:4"
									},
									"scope": 1247,
									"src": "4350:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										501
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "4560:27:4",
										"statements": [
											{
												"expression": {
													"id": 716,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "4574:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 715,
												"id": 717,
												"nodeType": "Return",
												"src": "4567:14:4"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "4444:47:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4504:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4522:8:4"
									},
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4510:2:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "4545:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4545:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4544:15:4"
									},
									"scope": 1247,
									"src": "4495:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										507
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4703:25:4",
										"statements": [
											{
												"expression": {
													"id": 726,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 609,
													"src": "4717:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 725,
												"id": 727,
												"nodeType": "Return",
												"src": "4710:12:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4593:43:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4649:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4665:8:4"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4653:2:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4688:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4688:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:15:4"
									},
									"scope": 1247,
									"src": "4640:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "4848:32:4",
										"statements": [
											{
												"expression": {
													"id": 736,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 603,
													"src": "4862:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 737,
												"nodeType": "Return",
												"src": "4855:19:4"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4734:46:4",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4793:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4816:8:4"
									},
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4804:2:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "4839:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:9:4"
									},
									"scope": 1247,
									"src": "4784:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "5011:38:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 748,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5025:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 750,
													"indexExpression": {
														"id": 749,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "5035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5025:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 751,
												"nodeType": "Return",
												"src": "5018:25:4"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "4886:44:4",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4943:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4979:8:4"
									},
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4961:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "4953:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4952:17:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "5002:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:9:4"
									},
									"scope": 1247,
									"src": "4934:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										531
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "5329:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 765,
																	"name": "blackList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5344:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 767,
																"indexExpression": {
																	"id": 766,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "5354:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5344:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5368:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "5344:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061646472657373",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															},
															"value": "Error: transfer from blacklist address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5336:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5336:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "5336:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 774,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5433:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5433:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "5447:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "5458:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "5423:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "5423:42:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 763,
												"id": 781,
												"nodeType": "Return",
												"src": "5472:11:4"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "5055:184:4",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5252:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5305:8:4"
									},
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5269:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5261:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5288:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5280:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5280:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:35:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "5323:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5323:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:6:4"
									},
									"scope": 1247,
									"src": "5243:246:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "5635:47:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 794,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "5649:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5661:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5649:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 798,
													"indexExpression": {
														"id": 797,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5668:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5649:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 799,
												"nodeType": "Return",
												"src": "5642:34:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "5495:44:4",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5552:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5603:8:4"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5570:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5562:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5562:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5585:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5577:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5561:32:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5626:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5625:9:4"
									},
									"scope": 1247,
									"src": "5543:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										551
									],
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "5895:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 813,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5911:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5911:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5934:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5902:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "5902:39:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5955:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 811,
												"id": 820,
												"nodeType": "Return",
												"src": "5948:11:4"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "5688:120:4",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5821:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 808,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5871:8:4"
									},
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5837:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5829:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5828:33:4"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5889:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5889:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:6:4"
									},
									"scope": 1247,
									"src": "5812:153:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "6516:282:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 836,
																	"name": "blackList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6531:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 838,
																"indexExpression": {
																	"id": 837,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "6541:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6531:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6555:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6531:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a207472616e736665722066726f6d20626c61636b6c6973742061646472657373",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6562:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															},
															"value": "Error: transfer from blacklist address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f73a7778bc8c244305e9f657390f887d0f1ec4a6fe93171c4a814583604ced73",
																"typeString": "literal_string \"Error: transfer from blacklist address\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6523:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6523:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "6523:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6620:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6628:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6639:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6610:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6610:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "6610:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6662:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 852,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "6670:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6670:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "6722:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6730:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 854,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6684:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 856,
																		"indexExpression": {
																			"id": 855,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "6696:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6684:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 859,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 857,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "6704:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6704:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6684:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "6684:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6684:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "6653:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6653:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "6653:121:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6788:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 834,
												"id": 867,
												"nodeType": "Return",
												"src": "6781:11:4"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "5971:435:4",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6419:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 831,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6492:8:4"
									},
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6440:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6432:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6456:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6448:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6475:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6467:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6431:51:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "6510:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6510:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6509:6:4"
									},
									"scope": 1247,
									"src": "6410:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "7266:114:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 880,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "7282:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7282:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "7344:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 883,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7305:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 886,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 884,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "7317:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7317:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7305:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 888,
																	"indexExpression": {
																		"id": 887,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "7331:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7305:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 342,
																"src": "7305:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7305:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7273:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7273:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "7273:83:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7370:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 878,
												"id": 895,
												"nodeType": "Return",
												"src": "7363:11:4"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "6804:372:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7189:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7215:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7207:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7232:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7224:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7206:37:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "7260:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7260:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7259:6:4"
									},
									"scope": 1247,
									"src": "7180:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "7943:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 908,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "7959:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7959:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "7973:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 918,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "8021:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8038:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 911,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7982:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 914,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 912,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "7994:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7994:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7982:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 916,
																	"indexExpression": {
																		"id": 915,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "8008:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7982:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "7982:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7982:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "7950:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7950:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "7950:129:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8093:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 906,
												"id": 924,
												"nodeType": "Return",
												"src": "8086:11:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "7386:462:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7861:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7887:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7879:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7904:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7896:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7878:42:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "7937:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7936:6:4"
									},
									"scope": 1247,
									"src": "7852:251:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "8365:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 937,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "8378:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8378:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "8392:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "8372:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8372:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "8372:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8413:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 935,
												"id": 943,
												"nodeType": "Return",
												"src": "8406:11:4"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "8109:190:4",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 931,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8340:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8340:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "8312:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8325:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8317:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8316:16:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "8359:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8359:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:6:4"
									},
									"scope": 1247,
									"src": "8303:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "8560:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 954,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "8573:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8573:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "8587:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "8567:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8567:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "8567:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8608:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 952,
												"id": 960,
												"nodeType": "Return",
												"src": "8601:11:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "8429:75:4",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8517:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8530:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8522:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8521:16:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8554:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8554:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8553:6:4"
									},
									"scope": 1247,
									"src": "8508:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "9157:753:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "9172:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9190:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9182:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9182:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9182:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9172:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9194:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9164:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9164:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "9164:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "9249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9270:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9262:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 984,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9262:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9262:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9249:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9274:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9241:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9241:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "9241:71:4"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 992,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9319:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 994,
														"indexExpression": {
															"id": 993,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9329:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9319:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 999,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "9361:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9369:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 995,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "9339:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 997,
																"indexExpression": {
																	"id": 996,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "9349:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9339:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 427,
															"src": "9339:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9339:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9319:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "9319:91:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "9420:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1005,
														"name": "managerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9433:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9420:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "9417:379:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "9447:349:4",
													"statements": [
														{
															"assignments": [
																1008
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1008,
																	"mutability": "mutable",
																	"name": "taxAmount",
																	"nameLocation": "9464:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1058,
																	"src": "9456:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1007,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9456:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1016,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9495:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9487:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"expression": {
																				"id": 1009,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "9476:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 372,
																			"src": "9476:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9476:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 387,
																	"src": "9476:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9476:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9456:43:4"
														},
														{
															"expression": {
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1017,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "9508:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1019,
																	"indexExpression": {
																		"id": 1018,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "9518:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9508:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1026,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "9567:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1024,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "9556:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 357,
																				"src": "9556:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9556:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1020,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 595,
																				"src": "9531:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1022,
																			"indexExpression": {
																				"id": 1021,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "9541:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9531:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "9531:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9531:47:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9508:70:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1030,
															"nodeType": "ExpressionStatement",
															"src": "9508:70:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1032,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9601:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1033,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "9609:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1036,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "9631:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1034,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "9620:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 357,
																			"src": "9620:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9620:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1031,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "9592:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9592:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "EmitStatement",
															"src": "9587:55:4"
														},
														{
															"expression": {
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1040,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "9651:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1042,
																	"indexExpression": {
																		"id": 1041,
																		"name": "managerWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "9661:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9651:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1047,
																			"name": "taxAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "9707:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1043,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 595,
																				"src": "9678:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1045,
																			"indexExpression": {
																				"id": 1044,
																				"name": "managerWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9688:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9678:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "9678:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9678:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9651:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1050,
															"nodeType": "ExpressionStatement",
															"src": "9651:66:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1052,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9740:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "managerWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "9748:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1054,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "9763:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1051,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "9731:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9731:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1056,
															"nodeType": "EmitStatement",
															"src": "9726:47:4"
														},
														{
															"functionReturnParameters": 971,
															"id": 1057,
															"nodeType": "Return",
															"src": "9782:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1060,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9802:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1062,
														"indexExpression": {
															"id": 1061,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9812:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9802:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1067,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "9850:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1063,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "9825:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1065,
																"indexExpression": {
																	"id": 1064,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "9835:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9825:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "9825:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9825:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9802:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "9802:55:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9878:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9886:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "9897:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "9869:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9869:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "EmitStatement",
												"src": "9864:40:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "8624:450:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "9087:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9121:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9113:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9140:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "9132:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9096:51:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9157:0:4"
									},
									"scope": 1247,
									"src": "9078:832:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "10226:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "10241:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10260:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10252:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10252:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10252:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10264:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "10233:65:4"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1096,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "10307:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1099,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "10339:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1097,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "10322:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "10322:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10322:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10307:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "10307:39:4"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1103,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10353:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1105,
														"indexExpression": {
															"id": 1104,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10363:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10353:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1110,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "10397:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1106,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "10374:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1108,
																"indexExpression": {
																	"id": 1107,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "10384:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10374:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "10374:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10374:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10353:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "10353:51:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10433:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10425:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10425:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10425:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10437:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "10446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10416:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10416:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "10411:42:4"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "9914:251:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10178:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10192:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "10184:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10184:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10209:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "10201:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10183:33:4"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10226:0:4"
									},
									"scope": 1247,
									"src": "10169:290:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "10824:273:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "10839:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10858:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10850:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10850:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10850:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10839:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10862:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10831:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10831:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "10831:67:4"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1142,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10907:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "10917:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10907:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1149,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "10951:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10959:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1145,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "10928:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1147,
																"indexExpression": {
																	"id": 1146,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "10938:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10928:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 427,
															"src": "10928:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10928:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10907:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "10907:89:4"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "11003:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "11035:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1155,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "11018:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 357,
															"src": "11018:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11018:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11003:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "11003:39:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11080:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11072:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1163,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11072:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11072:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "11084:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "11054:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11054:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "11049:42:4"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "10465:298:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10776:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10790:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "10782:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10807:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "10799:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10781:33:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10824:0:4"
									},
									"scope": 1247,
									"src": "10767:330:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "11584:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "11599:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11616:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11608:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1183,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11608:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11608:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11599:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11620:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11591:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11591:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "11591:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "11674:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11693:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11685:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11685:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11685:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11674:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11697:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11666:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11666:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "11666:68:4"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1201,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "11743:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1204,
															"indexExpression": {
																"id": 1202,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "11755:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11743:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1205,
														"indexExpression": {
															"id": 1203,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "11762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11743:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1206,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11773:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11743:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "11743:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1210,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "11800:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "11807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11816:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "11791:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11791:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "11786:37:4"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "11103:402:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11518:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11535:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11527:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11550:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11542:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11542:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11567:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "11559:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11526:48:4"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11584:0:4"
									},
									"scope": 1247,
									"src": "11509:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "12062:161:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12075:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12084:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "12069:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12069:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "12069:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12107:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1231,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "12116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12116:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1240,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "12169:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12177:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1233,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "12130:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1235,
																		"indexExpression": {
																			"id": 1234,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "12142:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12130:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1238,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "12151:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12151:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12130:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 427,
																"src": "12130:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12130:86:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "12098:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12098:119:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "12098:119:4"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "11835:162:4",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "12010:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12028:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12020:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12045:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "12037:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12019:33:4"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12062:0:4"
									},
									"scope": 1247,
									"src": "12001:222:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1248,
							"src": "3216:9010:4",
							"usedErrors": []
						}
					],
					"src": "35:12191:4"
				},
				"id": 4
			}
		}
	}
}